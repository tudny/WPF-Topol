open Topol;;
(* Małe testy na cykliczność *)
assert ((try let _ = Topol.topol [(8, [7; 4; 2; 8; 3; 2]); (4, [])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(1, []); (7, [5; 4; 2]); (7, [8; 2; 6; 7; 9; 0; 3; 3]); (9, []); (5, [8; 0; 6; 8; 3; 4; 7]); (0, [7; 5; 9; 3; 3; 3; 1; 2]); (9, [6; 3; 0; 3; 0; 7; 8; 2]); (9, [2; 8; 6; 1; 6; 4])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(9, [1; 7; 2; 4; 9; 9; 4; 0; 1]); (1, [9; 5]); (1, [1; 8]); (3, [6; 1]); (3, [4; 8]); (0, [6; 8; 2; 8]); (0, [7; 9]); (7, [9; 9; 0; 5; 5; 3; 7; 3]); (1, [6; 7])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(1, [1; 8; 5; 5; 4; 8; 6]); (6, [6; 9; 6; 4; 9; 7; 5]); (9, [8; 6; 7; 0; 6; 6; 8]); (8, [8]); (5, [9; 2; 6; 1; 3]); (8, [])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(9, [0; 3; 0; 4]); (0, [3; 1; 4; 2; 6]); (8, [5; 9; 2; 7; 5; 8; 2; 1; 6]); (1, [4; 2; 3; 7; 5; 0; 4]); (4, [7; 0; 7]); (5, [0; 8; 3; 3; 1]); (4, []); (9, [0; 7; 1; 4; 0; 0; 6; 3; 0]); (8, [1; 9; 3; 4; 0; 7])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(7, [6]); (1, [1; 1; 0; 2; 6; 7]); (8, [5]); (3, [4]); (4, [2; 5; 0; 2; 0; 3]); (1, [8; 6; 8; 8; 4; 9]); (2, [6; 3])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(4, [0; 1; 1; 5]); (7, [6; 3; 5; 0; 9; 3; 5; 7]); (2, []); (9, [2; 8; 7; 9; 0; 3]); (6, [6]); (8, [3; 4; 3; 0; 0; 5; 8]); (2, [1]); (2, [7; 8; 1; 0; 9; 5; 0])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(8, [9; 8; 0; 1; 4; 8; 6; 6; 3]); (5, [0; 3]); (3, [2; 3; 8; 5; 5; 1; 0]); (7, [3]); (6, [0; 6; 9]); (0, [4; 2; 1; 7; 5; 6; 1; 4; 8]); (5, [3; 9; 3; 4; 1; 9]); (5, [3; 4; 2; 1])] in false with | Cykliczne -> true) );
assert ((try let _ = Topol.topol [(9, [9; 9; 2; 4; 7; 2; 3; 1]); (6, []); (2, [3; 9]); (1, [9; 7; 7; 9; 1; 4; 0; 6]); (0, [1; 6; 6; 1; 5; 2]); (2, [0; 5; 9; 2; 3; 6])] in false with | Cykliczne -> true) );

(* Mało dużych testy na sortowanie topologiczność *)
assert ((Topol.topol [(73, [48; 53; 50; 80; 3; 61; 9; 97; 24; 32; 45; 79; 42; 5; 65; 57; 83; 88]); (68, [26; 37; 3; 47; 77; 98; 24; 91; 29; 34; 23])] = [73; 68; 88; 83; 57; 65; 5; 42; 79; 45; 32; 97; 9; 61; 80; 50; 53; 48; 23; 34; 29; 91; 24; 98; 77; 47; 3; 37; 26]) );
assert ((Topol.topol [(54, [87; 47; 74; 58; 17; 50; 86; 49; 87; 21; 41; 0; 31; 56; 8; 96; 32; 70; 49; 52; 68; 48; 49; 40; 38; 76; 13; 61; 56; 86; 91; 46; 4; 86; 6; 57; 99; 43; 24; 1; 25; 9; 84; 74; 12; 44; 24; 67; 87; 71; 29])] = [54; 29; 71; 67; 44; 12; 84; 9; 25; 1; 24; 43; 99; 57; 6; 4; 46; 91; 61; 13; 76; 38; 40; 48; 68; 52; 70; 32; 96; 8; 56; 31; 0; 41; 21; 49; 86; 50; 17; 58; 74; 47; 87]) );
assert ((Topol.topol [(60, [38; 20; 66; 62; 86; 16; 44; 95; 61; 40; 10; 58; 10; 75; 1; 13; 63; 75; 91; 7; 51; 4; 86; 40; 27; 59; 49; 36; 89; 92; 67; 91; 64; 7; 90; 34; 97; 98; 36; 13; 14; 69; 71; 71; 50; 13; 78; 50; 84; 37; 13; 11; 87; 7; 31; 45; 95; 57; 90; 81; 36; 51; 68; 81; 25; 80; 91; 73; 70; 24; 70; 49; 89; 44; 97; 41; 20; 75; 27])] = [60; 41; 24; 70; 73; 80; 25; 68; 81; 57; 45; 31; 87; 11; 37; 84; 78; 50; 71; 69; 14; 98; 97; 34; 90; 64; 67; 92; 89; 36; 49; 59; 27; 4; 51; 7; 91; 63; 13; 1; 75; 58; 10; 40; 61; 95; 44; 16; 86; 62; 66; 20; 38]) );
assert ((Topol.topol [(6, [64; 99; 87; 59; 55; 10; 43; 36; 12; 86; 70])] = [6; 70; 86; 12; 36; 43; 10; 55; 59; 87; 99; 64]) );
assert ((Topol.topol [(54, [20; 44; 60; 20; 60; 56; 33; 18; 4; 87; 31; 95; 37; 36; 46; 83; 51; 95; 12; 44; 65; 18; 22; 4; 30; 99; 80; 50; 81; 49; 12; 27; 62; 68; 86; 76; 85; 86; 51; 43; 65; 79; 4; 50; 57; 9; 6; 60; 59; 87; 70; 17; 7; 75; 71; 95; 81; 4; 35; 86; 76; 60; 62; 63; 24; 46; 24; 7; 15; 36; 88; 97; 35; 16; 15; 63; 29; 46; 36; 30; 16; 99; 2; 22; 70; 71; 84; 84; 26])] = [54; 26; 84; 2; 29; 16; 97; 88; 15; 24; 63; 35; 71; 75; 7; 17; 70; 59; 6; 9; 57; 79; 43; 85; 76; 86; 68; 62; 27; 49; 81; 50; 80; 99; 30; 22; 65; 12; 51; 83; 46; 36; 37; 95; 31; 87; 4; 18; 33; 56; 60; 44; 20]) );
assert ((Topol.topol [(80, [30; 19; 39; 54; 6; 16; 93; 11; 13; 6; 34; 69; 96; 7; 77; 32; 76; 6; 22; 47; 53; 4; 4; 54; 99; 9; 72; 34; 47; 92; 66; 67; 94; 86; 26; 68; 0; 12; 77; 52; 16; 99; 39; 84; 74; 89; 4; 54; 37; 42; 1; 10; 69; 30; 7; 68; 25; 64; 29; 41; 10; 20; 33; 76; 9; 82; 27; 29; 51; 5; 29; 20; 86; 19; 76; 38; 32; 91; 50; 32])] = [80; 50; 91; 38; 5; 51; 27; 82; 33; 20; 41; 29; 64; 25; 10; 1; 42; 37; 89; 74; 84; 52; 12; 0; 68; 26; 86; 94; 67; 66; 92; 72; 9; 99; 4; 53; 47; 22; 76; 32; 77; 7; 96; 69; 34; 13; 11; 93; 16; 6; 54; 39; 19; 30]) );
assert ((Topol.topol [(49, [42; 20; 32; 11; 47; 43; 33; 74; 48; 18; 54; 98; 63; 57])] = [49; 57; 63; 98; 54; 18; 48; 74; 33; 43; 47; 11; 32; 20; 42]) );
assert ((Topol.topol [(94, [22; 6; 91; 53; 53; 9; 37; 44])] = [94; 44; 37; 9; 53; 91; 6; 22]) );
assert ((Topol.topol [(7, [58]); (13, [82; 3; 11; 46; 8; 24; 4; 16; 78; 51; 3; 64; 61; 53; 25; 42; 77; 22; 88; 33; 40; 75; 31; 90; 34; 58; 81; 60; 20; 5; 4; 98; 92; 39; 59; 74; 34; 83; 81; 63; 81; 0; 52; 30; 49; 15; 8; 97; 35; 88; 45; 83; 34; 14; 10; 83; 10; 68; 87; 45; 91]); (66, [8; 19; 43; 26; 72]); (24, [19; 89; 99; 14; 23; 57; 41; 11; 87; 70; 50; 10; 63])] = [7; 13; 66; 91; 68; 45; 35; 97; 15; 49; 30; 52; 0; 83; 74; 59; 39; 92; 98; 5; 20; 60; 81; 58; 34; 90; 31; 75; 40; 33; 88; 22; 77; 42; 25; 53; 61; 64; 51; 78; 16; 4; 24; 46; 3; 82; 72; 26; 43; 8; 63; 10; 50; 70; 87; 11; 41; 57; 23; 14; 99; 89; 19]) );
assert ((Topol.topol [(43, [95; 91; 53]); (44, [10; 32; 49; 11; 76; 54; 2; 86; 25; 31; 42; 76; 80; 41; 81; 71; 21; 91; 66; 52; 74; 67; 11; 51; 78; 43; 86; 21; 66; 94; 54; 22; 76; 48; 1; 83; 61; 93; 11; 0; 38; 47; 84; 77; 6; 65; 84; 60; 97; 0; 6; 68; 3; 0; 90; 87; 56; 0; 56; 11; 95; 55; 65; 25; 3; 95; 5; 30; 57; 25; 98; 60; 11; 67; 76; 96; 11; 3; 59; 36; 85; 96; 78; 64; 42; 97; 85; 47; 49; 16; 72; 52; 47; 89; 4; 83; 22; 15; 3]); (81, [82; 43; 62; 66; 27; 20; 87; 89; 20; 32; 13; 79; 91; 36; 61; 94; 79; 52; 25; 3; 76; 49; 79; 94; 26; 54; 55; 26; 65; 23]); (27, [30; 5; 2; 8; 31; 8; 10; 4; 99; 24; 23; 10]); (19, [14; 46; 66; 32; 72; 90; 52; 81; 59; 82; 4; 59; 55; 20; 27; 91; 99; 54; 48; 88; 68; 74; 43; 52]); (63, [30; 98; 29; 77; 13; 33; 50; 40; 44; 0; 91; 29; 12; 53; 45; 94; 65; 18; 53; 41; 81; 66; 23; 38; 4; 25; 84; 47; 38; 86; 91; 34; 94; 71; 9; 54; 64; 40; 81; 44; 35; 23; 13; 28; 1; 34; 21; 96; 10; 39; 92; 42; 16; 26; 91; 83; 4; 89; 12; 92; 52; 17; 76; 32; 7; 1; 30; 26; 7; 14; 73; 71; 10; 55; 88; 45; 80; 3; 72; 31; 21; 2; 76; 46; 71])] = [19; 63; 46; 88; 73; 14; 7; 17; 92; 39; 28; 35; 9; 34; 18; 45; 12; 44; 40; 50; 33; 29; 15; 72; 16; 64; 85; 59; 96; 98; 57; 56; 90; 68; 97; 60; 6; 77; 84; 47; 38; 0; 93; 83; 1; 48; 22; 78; 51; 67; 74; 21; 71; 81; 41; 80; 42; 86; 11; 65; 55; 54; 26; 49; 76; 3; 25; 52; 94; 61; 36; 79; 13; 32; 89; 87; 20; 27; 66; 62; 43; 82; 23; 24; 99; 4; 10; 31; 8; 2; 5; 30; 53; 91; 95]) );
assert ((Topol.topol [(67, [40; 96; 91; 95; 62; 71; 74; 56])] = [67; 56; 74; 71; 62; 95; 91; 96; 40]) );
assert ((Topol.topol [(25, [74; 33; 4; 31; 26; 33; 62; 92; 8; 44; 89; 19; 65; 16; 91; 82; 80; 91; 83; 6; 54; 5; 49; 63; 29; 90; 60; 18; 61; 2; 17; 46; 14; 77; 88; 97; 10; 38; 78; 17; 46; 4; 57; 27; 5; 64; 98; 47; 80; 13; 13; 72; 88; 2; 20; 75; 39; 6; 35; 33; 47; 34; 48; 82; 19; 83; 65; 32; 28; 37; 6; 72; 54]); (38, [89; 7; 66; 35; 58; 40; 54; 12; 46; 66; 95; 35; 32; 90; 24; 82; 63; 9; 66; 11; 86; 81; 92; 19; 2; 58; 63; 99; 32; 79; 80; 99; 53; 33; 62; 33; 20; 37; 41; 65; 23; 22; 88; 62; 33; 0; 71; 13; 31; 69; 45; 0; 16; 95; 62; 97; 88; 33; 88; 11; 27; 42; 87; 89; 45; 76; 84; 13; 78; 19; 24; 34; 96; 12; 75; 96])] = [25; 28; 48; 39; 72; 47; 98; 64; 57; 38; 10; 77; 14; 17; 61; 18; 60; 29; 49; 5; 6; 83; 91; 44; 8; 26; 4; 74; 75; 96; 34; 78; 84; 76; 87; 42; 27; 97; 16; 45; 69; 31; 13; 71; 0; 88; 22; 23; 65; 41; 37; 20; 62; 33; 53; 80; 79; 99; 2; 19; 92; 81; 86; 11; 9; 63; 82; 24; 90; 32; 95; 46; 12; 54; 40; 58; 35; 66; 7; 89]) );
assert ((Topol.topol [(92, [42; 75; 16; 56; 43; 6; 73; 51; 27; 95; 21; 59; 91; 86; 38; 86; 53; 11; 69; 59; 96; 29; 56; 51; 21; 56; 62; 31; 50; 79; 83; 6; 31; 11; 0; 99; 41; 62; 60; 43; 6; 96; 37; 57; 65; 87; 52; 7; 6; 78; 82; 54; 21; 81; 20; 43; 44; 90; 93; 39; 67; 42; 87; 28; 26; 16; 21]); (53, [47; 23; 90; 97; 26; 21; 39; 12; 74; 36; 90; 21; 12; 50; 14; 15; 43; 62; 21; 18; 68; 91; 19; 93; 56; 73; 52; 16; 41; 42; 50; 74; 80; 69; 55; 64; 56; 1; 11; 52; 87; 23; 29; 79; 28; 70; 85; 96; 73; 56; 88; 1; 80; 27; 12; 51; 37; 96; 34; 61]); (38, [17; 29; 48; 65; 91; 41; 24; 59; 40; 78; 43; 2; 46; 69; 14; 78; 81; 23; 34; 98; 24; 79; 99; 3; 73; 88; 20; 87; 83; 9; 99; 89; 51; 8; 91; 24; 70; 85; 48; 5; 22; 81; 7; 90; 3; 85; 37; 22; 63; 98; 84; 44; 79; 76; 85; 23; 93; 39; 0; 63; 70; 56; 29; 71]); (60, [89; 48; 73; 73; 40; 91; 53; 79; 44; 83; 37; 61; 39; 78; 36; 4; 81; 18; 50; 61; 6; 83; 85; 47; 62; 33; 31; 19; 88; 47; 14; 49; 75; 59; 50; 7; 97; 97; 61; 95; 58; 46; 43; 4; 28; 10; 56; 75; 98; 36; 29; 8; 81; 54; 86; 40; 59; 45; 6])] = [92; 67; 82; 57; 60; 38; 45; 86; 54; 10; 58; 95; 75; 49; 31; 33; 6; 4; 53; 71; 0; 76; 44; 84; 63; 7; 22; 5; 8; 89; 9; 83; 20; 3; 99; 98; 81; 46; 2; 78; 40; 59; 24; 65; 48; 17; 61; 34; 37; 51; 27; 88; 96; 85; 70; 28; 79; 29; 87; 11; 1; 64; 55; 69; 80; 42; 41; 16; 52; 73; 56; 93; 19; 91; 68; 18; 62; 43; 15; 14; 50; 36; 74; 12; 39; 21; 26; 97; 90; 23; 47]) );
assert ((Topol.topol [(58, [10; 80; 41; 37; 29; 46; 94; 66; 94; 17; 85; 1; 68; 65; 79; 52; 91; 20; 90; 72; 79; 13; 27; 14; 59; 30; 64; 90; 87; 82; 90; 6; 91; 61; 61; 86; 83; 11; 32; 49; 12; 26; 5; 34; 35; 5; 90; 42; 63; 10; 45; 48; 12; 4; 11; 15; 19; 83; 91; 75; 89; 3; 36; 51; 94; 96; 96; 75; 38; 89; 55; 32; 40; 76; 35; 31; 12; 14; 45; 42; 12; 86; 50; 35; 77])] = [58; 77; 50; 31; 76; 40; 55; 38; 96; 51; 36; 3; 89; 75; 19; 15; 4; 48; 45; 63; 42; 35; 34; 5; 26; 12; 49; 32; 11; 83; 86; 61; 6; 82; 87; 64; 30; 59; 14; 27; 13; 72; 90; 20; 91; 52; 79; 65; 68; 1; 85; 17; 66; 94; 46; 29; 37; 41; 80; 10]) );

(* Dużo małych testów na sortowanie topologiczność *)
assert ((Topol.topol [(8, [4; 5; 7; 7; 9; 0]); (2, [4; 9; 5; 9; 6])] = [8; 2; 0; 7; 6; 5; 9; 4]) );
assert ((Topol.topol [(8, [2]); (0, [8; 8; 4])] = [0; 4; 8; 2]) );
assert ((Topol.topol [(3, [6; 9; 8; 7; 7; 0; 8; 8]); (3, []); (7, []); (2, [8; 0])] = [3; 2; 7; 9; 6; 0; 8]) );
assert ((Topol.topol [(0, [4; 2]); (7, [4; 2; 5; 0])] = [7; 0; 5; 2; 4]) );
assert ((Topol.topol [(7, []); (6, [0; 8; 8; 0; 9; 3; 4]); (5, [4; 8; 2])] = [7; 6; 5; 3; 9; 0; 2; 8; 4]) );
assert ((Topol.topol [(5, [8; 3; 3; 9; 7; 0; 9; 0; 6]); (7, []); (6, [3]); (9, [2]); (4, [3; 7; 6])] = [5; 4; 0; 9; 8; 6; 7; 2; 3]) );
assert ((Topol.topol [(5, [6; 1; 1; 9; 0]); (7, [2; 8; 4; 4; 6; 9; 8; 5]); (7, [8; 1; 9; 8; 8]); (4, [])] = [7; 5; 4; 8; 2; 0; 9; 1; 6]) );
assert ((Topol.topol [(2, [4])] = [2; 4]) );
assert ((Topol.topol [(7, [1; 0; 9; 6; 0])] = [7; 6; 9; 0; 1]) );
assert ((Topol.topol [(9, [3; 2; 3; 3; 2])] = [9; 2; 3]) );
assert ((Topol.topol [(9, [2; 8; 1; 1; 2]); (3, [7; 6; 9; 5; 5; 2; 2]); (8, []); (5, [4; 9; 0]); (8, [])] = [3; 5; 6; 7; 0; 9; 4; 1; 8; 2]) );
assert ((Topol.topol [(2, [9; 0]); (0, [9])] = [2; 0; 9]) );
assert ((Topol.topol [(6, [7; 7; 3; 3]); (1, []); (1, [4; 2; 9; 7; 4; 3; 3]); (5, [9; 4; 3; 7; 9; 0; 2; 8; 8])] = [6; 1; 5; 8; 2; 0; 7; 3; 4; 9]) );
assert ((Topol.topol [(8, []); (2, [])] = [8; 2]) );
assert ((Topol.topol [(4, [7; 1; 0; 3; 8; 6; 2])] = [4; 2; 6; 8; 3; 0; 1; 7]) );
assert ((Topol.topol [(2, [9; 0; 9; 4; 1]); (2, [0; 3; 6; 0; 6])] = [2; 6; 3; 1; 4; 0; 9]) );
assert ((Topol.topol [(3, [6; 7; 7; 1; 8; 9; 4; 4])] = [3; 4; 9; 8; 1; 7; 6]) );
assert ((Topol.topol [(2, []); (1, []); (5, [2]); (0, [5; 3; 3]); (4, [7; 9; 8; 1])] = [0; 4; 3; 5; 1; 8; 9; 7; 2]) );
assert ((Topol.topol [(5, [0; 3; 0; 1; 3; 4]); (4, [6; 6; 3; 1; 8; 8; 2; 8])] = [5; 4; 0; 2; 8; 1; 3; 6]) );
assert ((Topol.topol [(9, [6; 6; 1])] = [9; 1; 6]) );
assert ((Topol.topol [(2, [8]); (1, [9; 3; 0])] = [2; 1; 8; 0; 3; 9]) );
assert ((Topol.topol [(3, [6; 7; 1; 6; 2; 2; 1; 0])] = [3; 0; 2; 1; 7; 6]) );
assert ((Topol.topol [(0, [4]); (7, [2; 4; 8; 2]); (5, [2; 3; 1; 1; 9])] = [0; 7; 5; 8; 4; 9; 1; 3; 2]) );
assert ((Topol.topol [(4, [3; 0; 3]); (2, [0; 8; 1; 4; 1; 3; 5; 8]); (6, [7; 9; 8; 7; 7; 0]); (2, [9])] = [2; 6; 5; 4; 1; 8; 9; 7; 0; 3]) );
assert ((Topol.topol [(3, []); (1, [5]); (8, [1; 6; 4; 5; 0]); (2, [6]); (8, [6; 2; 3])] = [8; 3; 2; 0; 4; 1; 6; 5]) );
assert ((Topol.topol [(0, []); (6, [2; 3; 8; 9]); (6, []); (2, [9; 5; 4]); (0, [6; 1; 2; 2; 8; 2])] = [0; 1; 6; 8; 3; 2; 4; 5; 9]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(9, [8])] = [9; 8]) );
assert ((Topol.topol [(8, [3; 9; 4; 1; 6; 9; 5; 5; 9])] = [8; 5; 6; 1; 4; 9; 3]) );
assert ((Topol.topol [(3, [8; 5; 6]); (8, []); (5, [1; 0; 4; 9; 0; 8; 0])] = [3; 6; 5; 8; 9; 4; 0; 1]) );
assert ((Topol.topol [(5, [2; 8]); (6, [])] = [5; 6; 8; 2]) );
assert ((Topol.topol [(1, [9])] = [1; 9]) );
assert ((Topol.topol [(0, [8; 5])] = [0; 5; 8]) );
assert ((Topol.topol [(2, [0; 6; 4; 4; 0]); (1, []); (7, [4; 3; 5; 1; 0; 5])] = [2; 7; 6; 0; 1; 5; 3; 4]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(5, [0; 3]); (9, []); (4, [])] = [5; 9; 4; 3; 0]) );
assert ((Topol.topol [(3, [4; 1; 7; 2; 1; 1])] = [3; 2; 7; 1; 4]) );
assert ((Topol.topol [(9, [2; 6; 8; 5])] = [9; 5; 8; 6; 2]) );
assert ((Topol.topol [(1, [6; 7; 7; 9; 5; 9])] = [1; 5; 9; 7; 6]) );
assert ((Topol.topol [(6, [7; 9; 2; 5])] = [6; 5; 2; 9; 7]) );
assert ((Topol.topol [(5, [6; 4; 6; 8])] = [5; 8; 4; 6]) );
assert ((Topol.topol [(4, [1; 7; 3; 9; 9]); (6, [1; 8]); (3, [])] = [4; 6; 9; 3; 7; 8; 1]) );
assert ((Topol.topol [(6, [0])] = [6; 0]) );
assert ((Topol.topol [(9, [5; 1; 6; 2; 0]); (5, [2; 6]); (2, [7])] = [9; 0; 1; 5; 6; 2; 7]) );
assert ((Topol.topol [(5, [4; 3; 9; 7]); (3, [4; 2; 9]); (3, [6; 0; 9]); (0, [9]); (7, [1; 6])] = [5; 7; 3; 1; 0; 6; 2; 4; 9]) );
assert ((Topol.topol [(7, []); (4, [9; 1; 3; 6]); (3, [])] = [7; 4; 6; 3; 1; 9]) );
assert ((Topol.topol [(0, [6; 5; 2])] = [0; 2; 5; 6]) );
assert ((Topol.topol [(3, [8; 9; 0]); (1, [])] = [3; 1; 0; 9; 8]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(1, [9; 2; 7; 9; 8; 8; 5; 9]); (1, [0; 2; 0; 6]); (6, [7; 9; 0; 8; 2; 0])] = [1; 6; 5; 2; 8; 0; 9; 7]) );
assert ((Topol.topol [(8, [6; 3; 0; 0; 9; 6; 4; 0]); (4, [3; 1; 6; 6]); (0, [5])] = [8; 4; 9; 0; 6; 1; 3; 5]) );
assert ((Topol.topol [(5, []); (7, [8; 1; 0; 1]); (7, [8; 2; 9; 4; 4])] = [5; 7; 4; 9; 2; 0; 1; 8]) );
assert ((Topol.topol [(9, [4; 4; 1; 0; 8; 1; 5; 2]); (3, [])] = [9; 3; 2; 5; 8; 0; 1; 4]) );
assert ((Topol.topol [(4, [7])] = [4; 7]) );
assert ((Topol.topol [(2, [6]); (9, [])] = [2; 9; 6]) );
assert ((Topol.topol [(7, [4; 8; 6; 2; 0; 4; 6; 2])] = [7; 0; 2; 6; 8; 4]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(9, [2; 2])] = [9; 2]) );
assert ((Topol.topol [(7, [9; 5; 5; 3; 4; 8; 6]); (8, [9; 6])] = [7; 8; 4; 3; 5; 6; 9]) );
assert ((Topol.topol [(9, [4]); (2, [7; 1; 0]); (0, [6; 4])] = [9; 2; 0; 1; 7; 4; 6]) );
assert ((Topol.topol [(4, []); (1, [4; 7; 5; 8; 7; 8])] = [1; 8; 5; 7; 4]) );
assert ((Topol.topol [(2, [1; 6]); (6, [])] = [2; 6; 1]) );
assert ((Topol.topol [(4, [6])] = [4; 6]) );
assert ((Topol.topol [(1, [8; 6; 4; 6; 4; 6; 3]); (5, [4; 6; 4; 8; 8]); (5, [8; 0; 6; 1; 9])] = [5; 9; 1; 0; 3; 4; 6; 8]) );
assert ((Topol.topol [(3, [2; 2])] = [3; 2]) );
assert ((Topol.topol [(6, [4; 3; 4])] = [6; 3; 4]) );
assert ((Topol.topol [(8, [3; 9; 5; 6; 9; 4; 7; 2; 4])] = [8; 2; 7; 4; 6; 5; 9; 3]) );
assert ((Topol.topol [(9, [3; 5; 7; 5]); (0, [5; 8])] = [9; 0; 7; 3; 8; 5]) );
assert ((Topol.topol [(2, [4; 1; 7; 7; 8; 8; 3])] = [2; 3; 8; 7; 1; 4]) );
assert ((Topol.topol [(9, [6; 3]); (1, [7; 6; 2; 9; 8; 2; 4; 9]); (3, []); (5, [])] = [1; 5; 4; 8; 9; 2; 7; 3; 6]) );
assert ((Topol.topol [(4, [5; 6; 2; 8; 9; 6; 6])] = [4; 9; 8; 2; 6; 5]) );
assert ((Topol.topol [(3, [1; 2; 1; 5; 6; 6; 6; 6; 8]); (6, [8; 7])] = [3; 6; 5; 2; 1; 7; 8]) );
assert ((Topol.topol [(8, [6])] = [8; 6]) );
assert ((Topol.topol [(1, [9; 5; 0; 5; 5; 8; 3; 7; 4])] = [1; 4; 7; 3; 8; 0; 5; 9]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(6, [5; 1; 4])] = [6; 4; 1; 5]) );
assert ((Topol.topol [(8, [1; 7; 6; 7; 4; 4; 7; 1]); (1, [6]); (5, [8; 8; 0; 4; 1; 7])] = [5; 0; 8; 4; 7; 1; 6]) );
assert ((Topol.topol [(6, [1; 2; 4; 9; 4; 5; 0; 5; 5]); (4, [])] = [6; 0; 5; 9; 4; 2; 1]) );
assert ((Topol.topol [(1, [7; 3]); (8, [6]); (0, [3; 8; 7])] = [1; 0; 7; 8; 3; 6]) );
assert ((Topol.topol [(2, [3; 3; 3; 8; 0])] = [2; 0; 8; 3]) );
assert ((Topol.topol [(7, []); (7, [1])] = [7; 1]) );
assert ((Topol.topol [(3, [1; 6; 9; 8]); (7, [6; 2; 0; 2; 6])] = [3; 7; 8; 9; 1; 0; 2; 6]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(0, []); (5, [9; 2; 6; 1; 8; 6]); (3, [9; 9; 5; 8; 2; 2]); (6, [8]); (4, [1; 7; 7; 2])] = [0; 3; 4; 5; 7; 1; 6; 2; 9; 8]) );
assert ((Topol.topol [(3, [8; 1; 4; 9; 6; 6; 1])] = [3; 6; 9; 4; 1; 8]) );
assert ((Topol.topol [(5, [4; 1; 1; 0; 4; 6; 4])] = [5; 6; 0; 1; 4]) );
assert ((Topol.topol [(6, [4; 1; 5; 7; 9; 9; 2; 0])] = [6; 0; 2; 9; 7; 5; 1; 4]) );
assert ((Topol.topol [(3, []); (1, [7]); (1, [4; 4; 0])] = [3; 1; 0; 4; 7]) );
assert ((Topol.topol [(6, [0; 3; 8; 8; 7]); (7, [2]); (7, [4; 8; 8; 5; 4])] = [6; 7; 3; 0; 5; 8; 4; 2]) );
assert ((Topol.topol [(4, [3; 5; 7; 7; 7; 5])] = [4; 7; 5; 3]) );
assert ((Topol.topol [(3, [4; 7; 4; 4; 2]); (8, [1; 0; 5])] = [3; 8; 2; 7; 4; 5; 0; 1]) );
assert ((Topol.topol [(7, [9; 0; 5; 5]); (4, [6; 8; 5; 3; 0; 6; 5])] = [7; 4; 9; 0; 3; 5; 8; 6]) );
assert ((Topol.topol [(4, [8; 8; 7; 2]); (5, [3; 3; 7; 9; 7])] = [4; 5; 2; 8; 9; 7; 3]) );
assert ((Topol.topol [(6, [3; 9; 9; 8; 5; 4; 8; 0]); (1, [8; 0; 8; 7]); (5, [9; 4; 4])] = [6; 1; 5; 3; 7; 0; 8; 4; 9]) );
assert ((Topol.topol [(0, [2; 3; 2; 5; 6; 2; 6; 3; 7]); (7, [2])] = [0; 7; 6; 5; 3; 2]) );
assert ((Topol.topol [(0, [1; 5; 3]); (9, [6; 7; 8]); (9, [1]); (0, [3; 8; 5]); (6, [7; 7; 3; 5])] = [0; 9; 1; 8; 6; 5; 3; 7]) );
assert ((Topol.topol [(5, [4; 9; 6; 4; 6; 3])] = [5; 3; 6; 9; 4]) );
assert ((Topol.topol [(2, [9]); (7, [5; 9; 5; 2; 2])] = [7; 2; 5; 9]) );
assert ((Topol.topol [(3, [0; 0])] = [3; 0]) );
assert ((Topol.topol [(2, [7; 9; 1; 0]); (2, [3; 6; 7; 1; 6])] = [2; 6; 3; 0; 1; 9; 7]) );
assert ((Topol.topol [(9, [3; 2; 2; 4; 6]); (9, [6; 6])] = [9; 6; 4; 2; 3]) );
assert ((Topol.topol [(0, [3; 1])] = [0; 1; 3]) );
assert ((Topol.topol [(6, [0]); (6, [4; 5; 2])] = [6; 2; 5; 4; 0]) );
assert ((Topol.topol [(3, [9; 6; 1; 8]); (0, [])] = [3; 0; 8; 1; 6; 9]) );
assert ((Topol.topol [(0, [7; 9; 4; 9; 9])] = [0; 4; 9; 7]) );
assert ((Topol.topol [(9, [1]); (2, [6])] = [9; 2; 1; 6]) );
assert ((Topol.topol [(7, [0; 6; 1; 5; 2; 1; 4; 6])] = [7; 4; 2; 5; 1; 6; 0]) );
assert ((Topol.topol [(9, [1; 7; 1; 0; 6; 3; 0; 8]); (0, [])] = [9; 8; 3; 6; 0; 7; 1]) );
assert ((Topol.topol [(6, [8; 9; 0; 2; 4; 1])] = [6; 1; 4; 2; 0; 9; 8]) );
assert ((Topol.topol [(4, []); (5, [8; 8; 2; 7]); (5, [8; 1; 1])] = [4; 5; 1; 7; 2; 8]) );
assert ((Topol.topol [(0, [8; 8; 4; 2]); (9, [3])] = [0; 9; 2; 4; 8; 3]) );
assert ((Topol.topol [(1, [0; 4; 9; 3; 0; 8]); (1, []); (3, []); (8, [])] = [1; 8; 3; 9; 4; 0]) );
assert ((Topol.topol [(3, [4; 6; 4]); (5, [7]); (6, [8; 8; 4; 2; 7; 7])] = [3; 5; 6; 7; 2; 4; 8]) );
assert ((Topol.topol [(1, [7; 2; 7; 9; 5; 6; 4; 3]); (9, [4; 4; 6; 2; 5; 6])] = [1; 3; 9; 7; 5; 2; 6; 4]) );
assert ((Topol.topol [(1, [4]); (7, [3; 6; 3; 8; 8; 4; 6])] = [1; 7; 4; 8; 6; 3]) );
assert ((Topol.topol [(9, []); (1, [8]); (9, [0; 4])] = [9; 1; 4; 0; 8]) );
assert ((Topol.topol [(2, [9]); (9, [5; 5; 6; 5]); (3, [8; 4; 5; 6; 6; 4; 2; 1; 1])] = [3; 1; 2; 4; 8; 9; 6; 5]) );
assert ((Topol.topol [(4, [5; 1; 2; 3; 8; 7; 6])] = [4; 6; 7; 8; 3; 2; 1; 5]) );
assert ((Topol.topol [(5, [9; 4; 3; 2; 1]); (5, [8; 1]); (0, [8; 6; 8; 4; 8; 1; 2])] = [5; 0; 3; 9; 2; 1; 4; 6; 8]) );
assert ((Topol.topol [(0, [4; 4; 5; 2; 1; 6; 6]); (6, [2]); (0, [9; 8; 7; 9]); (5, [9; 9; 7; 9; 1; 2]); (8, [6; 9; 5; 7; 9])] = [0; 8; 4; 5; 6; 1; 7; 9; 2]) );
assert ((Topol.topol [(2, [4; 0; 6]); (0, [7; 9; 6; 7; 7]); (9, [8; 3; 6; 6])] = [2; 0; 4; 9; 7; 6; 3; 8]) );
assert ((Topol.topol [(9, [2; 3; 3; 6; 7]); (8, [4; 3; 6; 4; 7]); (7, [6; 0])] = [9; 8; 2; 7; 3; 4; 0; 6]) );
assert ((Topol.topol [(6, [2; 8; 1; 4; 5]); (3, [1; 5; 8; 4])] = [6; 3; 2; 4; 8; 5; 1]) );
assert ((Topol.topol [(2, [7; 3; 5; 7]); (5, [8]); (1, [7; 0; 9])] = [2; 1; 5; 3; 9; 0; 7; 8]) );
assert ((Topol.topol [(8, [4])] = [8; 4]) );
assert ((Topol.topol [(8, [6; 1; 4; 6])] = [8; 4; 1; 6]) );
assert ((Topol.topol [(4, [8; 7; 8; 3]); (8, [9; 6]); (2, [5; 5; 7; 4])] = [2; 4; 5; 3; 7; 8; 6; 9]) );
assert ((Topol.topol [(8, [7; 7; 6])] = [8; 6; 7]) );
assert ((Topol.topol [(4, [2; 0; 0; 8])] = [4; 8; 0; 2]) );
assert ((Topol.topol [(2, [7])] = [2; 7]) );
assert ((Topol.topol [(7, [9; 4; 9]); (8, [])] = [7; 8; 4; 9]) );
assert ((Topol.topol [(7, [0; 9; 1; 1; 4; 5]); (3, [])] = [7; 3; 5; 4; 1; 9; 0]) );
assert ((Topol.topol [(6, [7; 9]); (6, [2; 9; 0])] = [6; 0; 2; 9; 7]) );
assert ((Topol.topol [(6, [5; 2])] = [6; 2; 5]) );
assert ((Topol.topol [(5, [9]); (8, [4; 6; 3]); (4, [1; 9]); (8, [7; 0; 7; 4; 6; 1]); (2, [0]); (0, []); (8, [6; 0; 2; 7])] = [5; 8; 2; 7; 3; 6; 4; 0; 9; 1]) );
assert ((Topol.topol [(7, []); (8, [0; 6; 9; 4]); (7, [5; 6; 8; 4; 5]); (6, [0; 3; 5]); (1, [9; 7; 4; 0; 2; 0; 9; 0]); (2, [8; 9; 4; 4; 8; 0])] = [1; 2; 7; 8; 4; 9; 6; 5; 3; 0]) );
assert ((Topol.topol [(0, [1; 2; 7; 7; 3; 2]); (2, [4]); (0, [6; 4; 7]); (9, [7; 7; 7; 3; 8; 6]); (3, [8; 4]); (9, [0; 3; 4; 7; 3; 7])] = [9; 0; 6; 3; 7; 2; 1; 8; 4]) );
assert ((Topol.topol [(1, [6; 7; 6; 9; 9; 8; 3; 0])] = [1; 0; 3; 8; 9; 7; 6]) );
assert ((Topol.topol [(0, [2]); (4, [9; 5; 1; 2; 3; 2])] = [0; 4; 3; 2; 1; 5; 9]) );
assert ((Topol.topol [(2, [7])] = [2; 7]) );
assert ((Topol.topol [(4, [6; 6; 9; 6; 1; 7; 5; 0]); (7, [8]); (2, [9; 9; 1])] = [4; 2; 0; 5; 7; 6; 1; 9; 8]) );
assert ((Topol.topol [(5, [6; 8; 6; 8; 4])] = [5; 4; 8; 6]) );
assert ((Topol.topol [(0, [3; 5; 6; 3]); (8, [2; 7; 1])] = [0; 8; 6; 5; 3; 1; 7; 2]) );
assert ((Topol.topol [(2, [9]); (2, [1])] = [2; 1; 9]) );
assert ((Topol.topol [(6, [8; 8; 0; 5; 3; 7; 4; 0; 0]); (3, [])] = [6; 4; 7; 3; 5; 0; 8]) );
assert ((Topol.topol [(2, [5; 5; 9; 9; 5; 8])] = [2; 8; 9; 5]) );
assert ((Topol.topol [(7, []); (3, [2]); (3, [0; 0; 5])] = [7; 3; 5; 0; 2]) );
assert ((Topol.topol [(0, []); (5, [1; 3])] = [0; 5; 3; 1]) );
assert ((Topol.topol [(8, [0])] = [8; 0]) );
assert ((Topol.topol [(4, [9; 3; 2])] = [4; 2; 3; 9]) );
assert ((Topol.topol [(6, []); (3, []); (8, [7; 0; 2; 2])] = [6; 3; 8; 2; 0; 7]) );
assert ((Topol.topol [(9, []); (7, [0])] = [9; 7; 0]) );
assert ((Topol.topol [(6, [2; 8; 5])] = [6; 5; 8; 2]) );
assert ((Topol.topol [(9, [2; 7]); (8, [3; 5; 7; 9; 5; 5])] = [8; 9; 5; 3; 7; 2]) );
assert ((Topol.topol [(1, [7; 3; 3; 9; 2; 5])] = [1; 5; 2; 9; 3; 7]) );
assert ((Topol.topol [(7, [5; 6; 2; 4]); (0, [7; 7]); (8, [1; 3; 4; 5; 7; 1; 3; 7])] = [0; 8; 7; 3; 1; 4; 2; 6; 5]) );
assert ((Topol.topol [(0, [7; 2])] = [0; 2; 7]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(9, [7; 6; 2; 6; 6])] = [9; 2; 6; 7]) );
assert ((Topol.topol [(2, [8; 7; 8; 5; 1; 7; 5])] = [2; 1; 5; 7; 8]) );
assert ((Topol.topol [(0, [6])] = [0; 6]) );
assert ((Topol.topol [(9, [4; 5; 0; 4; 5]); (4, [1; 5]); (6, [3; 2]); (9, [])] = [9; 6; 0; 4; 2; 3; 5; 1]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(0, [6; 3; 3; 1; 1; 4; 9; 8; 3]); (6, [4; 2])] = [0; 8; 9; 1; 3; 6; 2; 4]) );
assert ((Topol.topol [(9, [7; 4; 2; 0; 1]); (8, [5; 0])] = [9; 8; 1; 2; 4; 7; 0; 5]) );
assert ((Topol.topol [(4, [2]); (4, [5; 6; 3; 1]); (2, []); (3, [6; 5]); (3, [6]); (5, []); (7, [4; 3; 2; 9; 8; 6]); (7, [9; 3; 9; 9; 0; 0])] = [7; 0; 8; 9; 4; 1; 3; 2; 5; 6]) );
assert ((Topol.topol [(0, [4; 5; 5; 8; 5; 5; 9; 5]); (1, [9]); (9, [2])] = [0; 1; 8; 5; 4; 9; 2]) );
assert ((Topol.topol [(0, [5]); (6, [2; 2; 3; 3]); (1, [6; 4; 5; 6; 6; 2])] = [0; 1; 5; 4; 6; 3; 2]) );
assert ((Topol.topol [(2, [1]); (3, [0; 4; 4; 0; 4; 8; 1; 5]); (2, [3; 6; 6; 1]); (0, [6; 9; 4; 4]); (9, [4]); (3, [])] = [2; 3; 5; 1; 8; 0; 9; 6; 4]) );
assert ((Topol.topol [(2, [3]); (7, [5; 9]); (5, [])] = [2; 7; 3; 9; 5]) );
assert ((Topol.topol [(1, [0; 0])] = [1; 0]) );
assert ((Topol.topol [(0, [5; 6; 7; 7; 2; 3; 1]); (1, [])] = [0; 1; 3; 2; 7; 6; 5]) );
assert ((Topol.topol [(5, [9; 4]); (4, [])] = [5; 4; 9]) );
assert ((Topol.topol [(0, [9; 4; 7; 4; 7])] = [0; 7; 4; 9]) );
assert ((Topol.topol [(5, [8; 0; 9; 1; 9; 6; 3])] = [5; 3; 6; 1; 9; 0; 8]) );
assert ((Topol.topol [(8, [5; 2; 6]); (0, [4; 7; 9; 7; 9; 9; 7; 1; 8])] = [0; 8; 1; 9; 7; 4; 6; 2; 5]) );
assert ((Topol.topol [(4, [3; 2; 6; 5; 2; 6; 3])] = [4; 5; 6; 2; 3]) );
assert ((Topol.topol [(0, [9; 7; 1; 8]); (7, []); (3, [6; 0])] = [3; 0; 6; 8; 1; 7; 9]) );
assert ((Topol.topol [(1, [9; 8; 3; 9; 5])] = [1; 5; 3; 8; 9]) );
assert ((Topol.topol [(6, [8; 8; 3]); (0, [3; 2; 9])] = [6; 0; 8; 9; 2; 3]) );
assert ((Topol.topol [(4, [6; 6; 1]); (8, [3; 7; 5; 5]); (0, [2; 1; 4; 1; 4])] = [8; 0; 5; 7; 3; 4; 2; 1; 6]) );
assert ((Topol.topol [(1, [4; 3])] = [1; 3; 4]) );
assert ((Topol.topol [(8, [6; 7; 3])] = [8; 3; 7; 6]) );
assert ((Topol.topol [(7, []); (6, [9; 2; 1; 0; 5; 0])] = [7; 6; 5; 0; 1; 2; 9]) );
assert ((Topol.topol [(5, [8; 1]); (3, [8]); (8, [])] = [5; 3; 1; 8]) );
assert ((Topol.topol [(9, [2; 8; 4])] = [9; 4; 8; 2]) );
assert ((Topol.topol [(4, [2; 3; 9; 2])] = [4; 9; 3; 2]) );
assert ((Topol.topol [(2, [1; 6; 5; 8; 0; 6; 4; 8]); (1, [3; 6; 5; 5; 3; 5; 9]); (5, [0; 9; 0])] = [2; 4; 8; 1; 5; 6; 3; 9; 0]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(5, [0; 7; 6; 8; 9; 8; 6]); (5, [1; 7; 6; 7; 6])] = [5; 1; 9; 8; 6; 7; 0]) );
assert ((Topol.topol [(4, [5])] = [4; 5]) );
assert ((Topol.topol [(3, [6]); (5, [])] = [3; 5; 6]) );
assert ((Topol.topol [(0, [6; 5; 8; 3; 3; 8])] = [0; 3; 8; 5; 6]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(2, [4; 4; 5; 0]); (7, []); (2, [])] = [2; 7; 0; 5; 4]) );
assert ((Topol.topol [(3, [7]); (6, [8; 4; 5; 9; 0; 5; 5; 7; 7]); (8, [9]); (2, []); (1, [7; 8; 5; 4; 7; 3])] = [6; 2; 1; 0; 3; 4; 5; 8; 7; 9]) );
assert ((Topol.topol [(1, [5; 0])] = [1; 0; 5]) );
assert ((Topol.topol [(4, [3; 7; 0; 8; 5; 1]); (7, [8; 6])] = [4; 1; 5; 0; 7; 3; 6; 8]) );
assert ((Topol.topol [(1, [2; 0; 8; 6; 4]); (6, []); (4, [7])] = [1; 4; 6; 8; 0; 2; 7]) );
assert ((Topol.topol [(1, [8; 9]); (4, [2]); (9, [7])] = [1; 4; 9; 8; 2; 7]) );
assert ((Topol.topol [(7, [1])] = [7; 1]) );
assert ((Topol.topol [(6, [8; 2; 5; 5; 0; 3; 3; 8])] = [6; 3; 0; 5; 2; 8]) );
assert ((Topol.topol [(6, [8; 9; 3; 7; 2; 4; 8; 0; 2]); (5, []); (0, [8; 7])] = [6; 5; 0; 4; 2; 3; 9; 7; 8]) );
assert ((Topol.topol [(4, [5; 5; 0; 3; 7; 3; 2])] = [4; 2; 7; 3; 0; 5]) );
assert ((Topol.topol [(1, [2; 8; 5; 0])] = [1; 0; 5; 8; 2]) );
assert ((Topol.topol [(0, []); (9, [5]); (7, [6; 2; 9; 1; 4; 3; 1]); (4, [])] = [0; 7; 3; 4; 1; 9; 2; 6; 5]) );
assert ((Topol.topol [(1, []); (3, []); (3, [2; 1]); (0, [2; 7; 8; 7; 4; 1; 8; 8])] = [3; 0; 1; 4; 8; 7; 2]) );
assert ((Topol.topol [(2, [5; 1; 1]); (0, [3]); (1, [6; 3; 9; 7; 5; 6; 4; 7; 3])] = [2; 0; 1; 4; 5; 7; 9; 3; 6]) );
assert ((Topol.topol [(4, [2; 2; 7; 7; 2]); (8, []); (2, [7]); (9, [4; 0; 8; 4])] = [9; 8; 0; 4; 2; 7]) );
assert ((Topol.topol [(9, [2]); (6, [0; 3; 8; 4]); (2, [7; 0; 1]); (7, [6])] = [9; 2; 1; 7; 6; 4; 8; 3; 0]) );
assert ((Topol.topol [(4, [7; 8; 5; 0; 1; 3; 1; 9; 7])] = [4; 9; 3; 1; 0; 5; 8; 7]) );
assert ((Topol.topol [(4, [7; 8]); (2, [])] = [4; 2; 8; 7]) );
assert ((Topol.topol [(3, [0; 4; 2; 7; 5; 5; 2; 7; 9]); (3, [0; 0]); (7, [])] = [3; 9; 5; 7; 2; 4; 0]) );
assert ((Topol.topol [(9, [0; 8; 6; 3; 6; 3; 6; 3; 7]); (3, []); (8, [3])] = [9; 7; 6; 8; 0; 3]) );
assert ((Topol.topol [(9, [0; 7]); (9, [0; 0; 7; 6; 2; 1; 7; 4]); (3, [1; 9; 2])] = [3; 9; 4; 1; 2; 6; 7; 0]) );
assert ((Topol.topol [(5, [8; 2; 3; 9; 1; 4; 0; 3])] = [5; 0; 4; 1; 9; 3; 2; 8]) );
assert ((Topol.topol [(5, [9; 3; 6; 7; 7; 7])] = [5; 7; 6; 3; 9]) );
assert ((Topol.topol [(8, [5; 5; 7; 3; 0])] = [8; 0; 3; 7; 5]) );
assert ((Topol.topol [(9, [7; 5; 4; 3])] = [9; 3; 4; 5; 7]) );
assert ((Topol.topol [(2, [1; 4; 3; 7]); (0, [6])] = [2; 0; 7; 3; 4; 1; 6]) );
assert ((Topol.topol [(0, [2]); (8, []); (1, [6; 2; 9; 2]); (5, [4; 0]); (4, [3]); (6, [8; 9; 5])] = [1; 6; 5; 9; 8; 0; 4; 2; 3]) );
assert ((Topol.topol [(7, [3; 6; 6]); (9, [5; 5; 3; 5]); (7, [3; 6; 6; 6]); (2, [7])] = [9; 2; 5; 7; 6; 3]) );
assert ((Topol.topol [(0, [7; 8; 1])] = [0; 1; 8; 7]) );
assert ((Topol.topol [(9, [4; 3; 8; 2; 8]); (0, [5; 7; 4; 8; 9; 8])] = [0; 9; 7; 5; 2; 8; 3; 4]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(2, [9; 1; 5; 0; 1]); (7, [9; 4; 3; 4])] = [2; 7; 0; 5; 1; 3; 4; 9]) );
assert ((Topol.topol [(9, [7; 3; 4; 2; 2; 2])] = [9; 2; 4; 3; 7]) );
assert ((Topol.topol [(2, [3; 4; 0]); (5, [])] = [2; 5; 0; 4; 3]) );
assert ((Topol.topol [(0, [9; 6])] = [0; 6; 9]) );
assert ((Topol.topol [(7, [2; 8; 1; 1; 8; 2; 4; 8]); (5, [9; 1; 0; 0; 6; 3])] = [7; 5; 4; 8; 2; 3; 6; 0; 1; 9]) );
assert ((Topol.topol [(7, [])] = [7]) );
assert ((Topol.topol [(8, [3; 6; 3; 5; 1; 2; 4; 2; 2]); (0, [8; 7; 4; 4; 1; 1; 4; 6]); (3, [6; 9; 2; 5; 9]); (7, [3])] = [0; 7; 8; 4; 1; 3; 5; 2; 9; 6]) );
assert ((Topol.topol [(9, [4])] = [9; 4]) );
assert ((Topol.topol [(4, [9; 0; 6; 2; 6])] = [4; 2; 6; 0; 9]) );
assert ((Topol.topol [(0, [5]); (8, [0; 3; 3])] = [8; 3; 0; 5]) );
assert ((Topol.topol [(1, [2])] = [1; 2]) );
assert ((Topol.topol [(1, []); (1, [0; 5; 2; 5; 2]); (9, [5; 1; 2; 5; 2; 4; 3; 3])] = [9; 3; 4; 1; 2; 5; 0]) );
assert ((Topol.topol [(9, [0; 4])] = [9; 4; 0]) );
assert ((Topol.topol [(9, [0; 5; 4; 0; 7; 7; 5]); (8, [5; 4; 7; 4]); (5, [1; 6])] = [9; 8; 0; 7; 4; 5; 6; 1]) );
assert ((Topol.topol [(6, [1; 1])] = [6; 1]) );
assert ((Topol.topol [(7, [9; 1]); (4, [5; 7; 9]); (8, [9; 4; 7; 9; 0; 3; 6; 1])] = [8; 6; 3; 0; 4; 7; 5; 1; 9]) );
assert ((Topol.topol [(6, [8; 1; 4]); (4, [5; 2; 8; 0; 3; 5; 2; 8; 1])] = [6; 4; 1; 3; 0; 8; 2; 5]) );
assert ((Topol.topol [(8, [5; 1; 1]); (3, [1; 4; 7; 1; 4]); (9, [3; 6; 5]); (9, [6; 2; 8; 5])] = [9; 8; 2; 6; 3; 5; 7; 4; 1]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(9, [3; 0; 4; 2; 1]); (5, [8; 3; 9; 9; 9; 8; 0]); (5, [])] = [5; 9; 8; 1; 2; 4; 0; 3]) );
assert ((Topol.topol [(3, [2; 4; 8; 2]); (5, [7; 2; 1; 2]); (0, [1; 5; 5; 5; 7; 5; 3; 8])] = [0; 3; 5; 8; 4; 1; 2; 7]) );
assert ((Topol.topol [(0, [4; 4; 5; 3; 4])] = [0; 3; 5; 4]) );
assert ((Topol.topol [(3, [0; 6]); (8, [3; 9; 9])] = [8; 9; 3; 6; 0]) );
assert ((Topol.topol [(7, [1; 0; 3; 4; 5; 6; 9; 4])] = [7; 9; 6; 5; 4; 3; 0; 1]) );
assert ((Topol.topol [(1, [0]); (4, []); (1, [2; 8; 6; 2; 4]); (7, [9; 6; 9; 3; 8])] = [1; 7; 4; 2; 0; 8; 3; 6; 9]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(3, [8; 6; 9]); (0, [4; 7; 9; 5; 3; 2; 8]); (9, [1; 7]); (5, [4; 8; 2; 2; 2; 7; 6; 2]); (9, []); (0, [8; 8; 9; 6; 6])] = [0; 3; 5; 9; 6; 2; 8; 4; 7; 1]) );
assert ((Topol.topol [(6, [5; 4; 3; 5; 8; 8]); (7, [4; 2; 1; 1; 9; 0; 8; 5; 6])] = [7; 6; 0; 9; 1; 2; 8; 3; 4; 5]) );
assert ((Topol.topol [(4, [2; 9; 0]); (4, [2]); (5, [8; 7; 9; 6; 6; 0]); (2, [7; 1; 8; 6; 0; 8])] = [4; 5; 2; 9; 0; 6; 8; 1; 7]) );
assert ((Topol.topol [(0, [9; 8; 6; 8; 4]); (9, [8; 5; 6; 4; 5; 4]); (7, [])] = [0; 7; 9; 4; 6; 5; 8]) );
assert ((Topol.topol [(2, [6])] = [2; 6]) );
assert ((Topol.topol [(7, [4; 8; 6; 3; 4; 8; 4; 2])] = [7; 2; 3; 6; 8; 4]) );
assert ((Topol.topol [(0, [4; 5; 8; 1; 2; 6; 8]); (0, [6; 4])] = [0; 6; 2; 1; 8; 5; 4]) );
assert ((Topol.topol [(9, [0]); (6, [1])] = [9; 6; 0; 1]) );
assert ((Topol.topol [(1, [5; 3; 4]); (2, [9; 1; 1; 8; 5; 5; 3]); (2, [9; 4; 3; 7; 5; 7]); (8, [3; 0; 4; 1])] = [2; 7; 8; 9; 1; 0; 4; 3; 5]) );
assert ((Topol.topol [(9, [1; 5; 0; 1; 3; 3; 0; 0; 5])] = [9; 3; 0; 5; 1]) );
assert ((Topol.topol [(0, [6; 7; 6; 8]); (2, []); (3, [])] = [0; 2; 3; 8; 7; 6]) );
assert ((Topol.topol [(8, [7; 9; 3; 5; 0; 5]); (9, [])] = [8; 0; 5; 3; 9; 7]) );
assert ((Topol.topol [(9, [1; 0; 8; 7; 2; 3; 8; 5; 2])] = [9; 5; 3; 2; 7; 8; 0; 1]) );
assert ((Topol.topol [(5, [0]); (9, [2; 5]); (4, [0; 9; 6; 3]); (8, [2; 5; 7; 6; 7; 7; 4; 7])] = [8; 4; 7; 3; 6; 9; 5; 2; 0]) );
assert ((Topol.topol [(6, []); (6, [1; 1; 4; 7; 5])] = [6; 5; 7; 4; 1]) );
assert ((Topol.topol [(1, []); (5, [0; 4; 7; 1]); (9, [2; 6; 8; 8; 0; 4]); (1, []); (2, []); (3, [6; 4; 6; 9; 8])] = [5; 3; 1; 7; 9; 4; 0; 8; 6; 2]) );
assert ((Topol.topol [(3, [6; 9; 0; 9; 7; 1; 2; 7])] = [3; 2; 1; 7; 0; 9; 6]) );
assert ((Topol.topol [(2, [1; 6]); (1, [8]); (0, [])] = [2; 0; 6; 1; 8]) );
assert ((Topol.topol [(9, [8]); (9, [8; 5; 5; 3])] = [9; 3; 5; 8]) );
assert ((Topol.topol [(6, [0; 5; 1; 0]); (6, [3; 7; 1])] = [6; 7; 3; 1; 5; 0]) );
assert ((Topol.topol [(7, [9; 8; 8; 6; 4; 2; 6])] = [7; 2; 4; 6; 8; 9]) );
assert ((Topol.topol [(6, [4]); (0, [5; 6; 6; 7])] = [0; 7; 6; 5; 4]) );
assert ((Topol.topol [(8, [3; 0; 9; 5; 0]); (3, [2]); (5, [4; 6; 3]); (8, [3; 7; 7; 4; 0; 2; 9; 7])] = [8; 7; 5; 9; 0; 3; 6; 4; 2]) );
assert ((Topol.topol [(6, []); (3, [6]); (4, [3]); (9, [7; 6; 4; 0; 5; 2; 5])] = [9; 2; 5; 0; 4; 7; 3; 6]) );
assert ((Topol.topol [(0, [9; 5; 2; 9; 4]); (0, []); (3, [7; 5; 1; 0; 2; 4; 6; 2])] = [3; 6; 0; 1; 7; 4; 2; 5; 9]) );
assert ((Topol.topol [(1, []); (4, [2; 2; 0; 2; 2; 8])] = [1; 4; 8; 0; 2]) );
assert ((Topol.topol [(2, [6; 3]); (3, []); (2, [1; 7; 6; 1; 4; 9])] = [2; 9; 4; 7; 1; 3; 6]) );
assert ((Topol.topol [(9, []); (5, [9; 4; 4; 9]); (7, [6])] = [5; 7; 4; 9; 6]) );
assert ((Topol.topol [(9, [7; 1; 4]); (5, [7; 8; 6; 3; 4; 9; 9; 8; 0])] = [5; 0; 9; 3; 6; 8; 4; 1; 7]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(2, [1; 8; 1; 1])] = [2; 8; 1]) );
assert ((Topol.topol [(1, [7; 7]); (5, [8; 7; 8; 4; 9]); (9, [2; 3; 3])] = [1; 5; 9; 4; 7; 8; 3; 2]) );
assert ((Topol.topol [(2, [8; 7; 1])] = [2; 1; 7; 8]) );
assert ((Topol.topol [(1, []); (1, [2; 4; 0; 2]); (4, []); (9, [2; 1; 3; 6; 8]); (7, [])] = [9; 7; 8; 6; 3; 1; 0; 4; 2]) );
assert ((Topol.topol [(9, [2; 2]); (7, [8])] = [9; 7; 2; 8]) );
assert ((Topol.topol [(2, []); (2, [9; 9; 8; 3; 5])] = [2; 5; 3; 8; 9]) );
assert ((Topol.topol [(3, []); (8, [6]); (2, []); (7, [1; 5; 8; 9; 8; 2; 3]); (7, []); (3, [8])] = [7; 3; 2; 9; 5; 1; 8; 6]) );
assert ((Topol.topol [(3, [4; 2; 7; 4])] = [3; 7; 2; 4]) );
assert ((Topol.topol [(9, [7; 4; 1; 5; 5; 0; 1; 0])] = [9; 0; 5; 1; 4; 7]) );
assert ((Topol.topol [(6, [5]); (0, [2; 7; 5; 4; 7; 7])] = [6; 0; 4; 5; 7; 2]) );
assert ((Topol.topol [(7, [5; 0; 4; 6; 6; 5])] = [7; 6; 4; 0; 5]) );
assert ((Topol.topol [(5, [9; 7; 3; 8]); (7, [8; 4])] = [5; 3; 7; 9; 4; 8]) );
assert ((Topol.topol [(6, []); (0, [2; 4; 5; 3; 5; 6; 6; 2])] = [0; 6; 3; 5; 4; 2]) );
assert ((Topol.topol [(4, [3; 8; 2; 2; 8; 3; 0; 2; 2]); (7, [5]); (9, [])] = [4; 7; 9; 0; 2; 8; 3; 5]) );
assert ((Topol.topol [(4, [9; 8; 8]); (3, [6; 7; 9; 7; 5])] = [4; 3; 8; 5; 9; 7; 6]) );
assert ((Topol.topol [(4, [9; 9; 6; 3; 1; 0; 9]); (4, [9; 9; 1; 9; 8; 9; 2])] = [4; 2; 8; 0; 1; 3; 6; 9]) );
assert ((Topol.topol [(7, [4; 0]); (6, [7; 2; 8; 8]); (7, [4; 5; 0; 4; 4; 9; 0; 5]); (7, [4; 8; 5; 1])] = [6; 2; 7; 1; 8; 9; 5; 0; 4]) );
assert ((Topol.topol [(3, [0; 0; 9; 7; 2; 9; 2; 9]); (4, [2; 2; 5; 2; 5])] = [3; 4; 7; 9; 0; 5; 2]) );
assert ((Topol.topol [(1, [4; 3; 8; 8; 7; 9])] = [1; 9; 7; 8; 3; 4]) );
assert ((Topol.topol [(7, [0; 1; 2; 9]); (4, [8; 6]); (6, [0; 2; 1; 3; 2; 8])] = [7; 4; 9; 6; 8; 3; 1; 2; 0]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(6, []); (3, [4; 0; 9; 1; 0; 7; 9; 5]); (0, []); (8, [0; 6; 6; 0]); (6, [9; 3; 2; 0; 3; 4; 3])] = [8; 6; 2; 3; 5; 7; 1; 9; 0; 4]) );
assert ((Topol.topol [(4, [6; 9; 7]); (7, [2; 8; 8; 8; 9]); (0, [1; 3; 1; 2; 1; 8; 2; 1; 7])] = [4; 0; 6; 7; 3; 1; 9; 8; 2]) );
assert ((Topol.topol [(1, [6; 7; 8])] = [1; 8; 7; 6]) );
assert ((Topol.topol [(6, [2; 9; 1; 5; 7; 5; 1]); (3, [9; 9; 8; 5; 4; 1; 2]); (8, [7])] = [6; 3; 2; 1; 4; 5; 8; 9; 7]) );
assert ((Topol.topol [(1, [8; 0; 4; 0]); (1, [3]); (6, [2; 0]); (9, [8; 2; 8; 6]); (9, [])] = [1; 9; 3; 4; 6; 8; 0; 2]) );
assert ((Topol.topol [(1, [6; 0; 5])] = [1; 5; 0; 6]) );
assert ((Topol.topol [(7, [9; 4]); (9, [8])] = [7; 4; 9; 8]) );
assert ((Topol.topol [(4, [3; 7; 1]); (8, [3; 9; 6; 4; 4; 6; 6; 3])] = [8; 4; 6; 9; 1; 7; 3]) );
assert ((Topol.topol [(0, [6; 7; 5; 9])] = [0; 9; 5; 7; 6]) );
assert ((Topol.topol [(2, [9; 5; 5; 7; 3]); (3, [5; 8; 0; 0])] = [2; 3; 7; 9; 0; 8; 5]) );
assert ((Topol.topol [(8, [0; 2; 1; 2])] = [8; 1; 2; 0]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(4, [8; 7; 6]); (7, [1]); (4, [9; 1; 5; 0; 0]); (0, [5; 2; 2; 5]); (3, [2])] = [4; 3; 0; 9; 6; 7; 8; 2; 5; 1]) );
assert ((Topol.topol [(0, [3; 9; 8; 8; 2; 2]); (4, [3; 7; 6]); (7, [5; 6; 5; 2; 6; 8; 1; 3; 6]); (2, [8; 3; 5]); (0, [7; 5])] = [0; 4; 9; 7; 1; 2; 6; 5; 3; 8]) );
assert ((Topol.topol [(3, [7; 1; 8; 2; 1; 4; 5])] = [3; 5; 4; 2; 8; 1; 7]) );
assert ((Topol.topol [(6, [7; 3; 7; 4; 5; 3; 0; 3])] = [6; 0; 5; 4; 3; 7]) );
assert ((Topol.topol [(8, [4; 0]); (7, [6; 3; 1; 9])] = [8; 7; 0; 4; 9; 1; 3; 6]) );
assert ((Topol.topol [(9, [3; 3; 2; 5]); (7, []); (4, [9; 2; 8; 1]); (7, [5; 9; 4; 6; 9; 4; 6; 9; 6])] = [7; 6; 4; 1; 8; 9; 5; 2; 3]) );
assert ((Topol.topol [(2, [9; 8; 1; 1; 0; 8])] = [2; 0; 1; 8; 9]) );
assert ((Topol.topol [(4, []); (0, []); (5, []); (0, [2; 5; 6; 9; 6; 9; 1; 3; 5]); (1, [4; 2; 5; 7])] = [0; 3; 1; 9; 6; 7; 5; 2; 4]) );
assert ((Topol.topol [(2, [8; 8; 7; 0])] = [2; 0; 7; 8]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(4, [6; 5]); (7, [5; 8]); (2, [8; 6; 3])] = [4; 7; 2; 5; 3; 6; 8]) );
assert ((Topol.topol [(6, [5; 0; 9]); (2, [4; 4; 5; 8]); (1, [7]); (2, [4; 5; 5])] = [6; 2; 1; 9; 0; 8; 5; 4; 7]) );
assert ((Topol.topol [(9, [3; 6; 6; 5; 2; 2; 5; 6])] = [9; 2; 5; 6; 3]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(3, []); (3, [8])] = [3; 8]) );
assert ((Topol.topol [(5, [1; 8]); (5, [8; 6; 9; 4; 9; 8; 6]); (5, [3; 1; 8; 6; 1; 6; 9; 1; 2]); (7, [6; 5; 3; 9; 6; 4; 3; 4]); (0, [9; 6; 9; 1; 7; 4])] = [0; 7; 5; 2; 3; 4; 9; 6; 8; 1]) );
assert ((Topol.topol [(5, []); (2, [4])] = [5; 2; 4]) );
assert ((Topol.topol [(0, [6; 4; 4]); (3, [9; 4; 1; 0])] = [3; 0; 1; 9; 4; 6]) );
assert ((Topol.topol [(2, [1; 4]); (7, [8]); (4, []); (0, [9; 6; 5; 9; 7; 9; 2; 9; 5])] = [0; 2; 7; 5; 6; 9; 4; 1; 8]) );
assert ((Topol.topol [(1, []); (3, [8; 4; 8; 5; 2; 0; 6])] = [1; 3; 6; 0; 2; 5; 4; 8]) );
assert ((Topol.topol [(2, [4; 6])] = [2; 6; 4]) );
assert ((Topol.topol [(1, [4]); (5, [3; 9; 6])] = [1; 5; 4; 6; 9; 3]) );
assert ((Topol.topol [(6, [4; 3; 7; 1]); (9, [4; 5; 3]); (3, [0; 8; 0; 1]); (2, [0; 8; 8; 1; 8])] = [6; 9; 2; 7; 3; 5; 4; 1; 8; 0]) );
assert ((Topol.topol [(1, [6; 7; 6; 6; 3; 8]); (4, [8; 5; 0; 1; 7; 8; 3; 8]); (0, [1])] = [4; 0; 5; 1; 8; 3; 7; 6]) );
assert ((Topol.topol [(6, [3; 7; 2; 0; 5; 0; 8; 1; 2]); (5, [8; 1]); (7, []); (4, [5; 8; 1; 6; 1; 5; 3])] = [4; 6; 5; 0; 2; 7; 3; 1; 8]) );
assert ((Topol.topol [(8, [3; 9; 2; 4; 9]); (1, [0; 9; 8; 0; 8; 9; 3])] = [1; 8; 0; 4; 2; 9; 3]) );
assert ((Topol.topol [(8, [9; 1; 1; 1; 2; 9; 1; 3; 6]); (8, [1; 0; 5; 9; 7]); (9, [2; 0; 4; 3; 3]); (1, [])] = [8; 7; 5; 6; 1; 9; 3; 4; 0; 2]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(7, [5; 3; 9; 8; 2])] = [7; 2; 8; 9; 3; 5]) );
assert ((Topol.topol [(9, [7; 4; 2; 0]); (5, []); (8, [1; 5; 3])] = [9; 8; 0; 2; 4; 7; 3; 5; 1]) );
assert ((Topol.topol [(1, []); (9, [1; 1; 5; 0; 6; 1; 4; 7; 7]); (9, [1; 8; 5; 8])] = [9; 8; 7; 4; 6; 0; 5; 1]) );
assert ((Topol.topol [(7, [9; 2; 1; 3; 3; 8; 6]); (5, [9; 2; 0; 8; 4; 0]); (7, [9; 9; 8; 9; 4])] = [7; 5; 6; 3; 1; 4; 8; 0; 2; 9]) );
assert ((Topol.topol [(2, []); (1, [])] = [2; 1]) );
assert ((Topol.topol [(9, [8; 1])] = [9; 1; 8]) );
assert ((Topol.topol [(6, [8; 7])] = [6; 7; 8]) );
assert ((Topol.topol [(7, [0; 6; 8; 5; 9]); (2, [])] = [7; 2; 9; 5; 8; 6; 0]) );
assert ((Topol.topol [(3, [4; 0]); (3, [7; 1; 8]); (5, [7; 8; 1]); (3, [6; 0; 4; 2]); (7, [6; 0; 2; 6; 1; 1; 6])] = [3; 5; 4; 8; 7; 1; 2; 0; 6]) );
assert ((Topol.topol [(7, [])] = [7]) );
assert ((Topol.topol [(3, [2; 6]); (5, [9; 6; 7; 8; 1; 3; 7; 0])] = [5; 0; 3; 1; 8; 7; 9; 6; 2]) );
assert ((Topol.topol [(6, [8; 0; 5; 5; 2; 0])] = [6; 2; 5; 0; 8]) );
assert ((Topol.topol [(6, [3; 9])] = [6; 9; 3]) );
assert ((Topol.topol [(8, []); (3, [4])] = [8; 3; 4]) );
assert ((Topol.topol [(3, [2; 6; 6]); (6, [8]); (2, [0; 1; 6; 0; 9; 0; 7; 7; 8])] = [3; 2; 7; 9; 6; 1; 0; 8]) );
assert ((Topol.topol [(7, [3; 8; 0; 9; 5; 3]); (9, [0; 2; 1; 1; 3; 4; 2])] = [7; 5; 9; 8; 4; 3; 1; 2; 0]) );
assert ((Topol.topol [(1, [9; 5])] = [1; 5; 9]) );
assert ((Topol.topol [(7, [9; 3; 0])] = [7; 0; 3; 9]) );
assert ((Topol.topol [(1, []); (2, [9; 5; 5; 5; 0; 1])] = [2; 1; 0; 5; 9]) );
assert ((Topol.topol [(1, [8; 5; 0])] = [1; 0; 5; 8]) );
assert ((Topol.topol [(1, [0; 7; 0]); (8, [9; 1; 7; 1; 3; 3])] = [8; 3; 1; 9; 7; 0]) );
assert ((Topol.topol [(2, [4; 7; 4; 9]); (3, [7; 8]); (3, [1])] = [2; 3; 9; 4; 1; 8; 7]) );
assert ((Topol.topol [(3, [1; 7; 0]); (9, [5; 3; 6])] = [9; 6; 3; 5; 0; 7; 1]) );
assert ((Topol.topol [(7, [9; 9; 3; 3; 3; 8])] = [7; 8; 3; 9]) );
assert ((Topol.topol [(1, [2; 9; 5])] = [1; 5; 9; 2]) );
assert ((Topol.topol [(8, [0; 5; 0; 9; 5; 0; 6]); (7, [4; 2])] = [8; 7; 6; 9; 5; 0; 2; 4]) );
assert ((Topol.topol [(3, [1; 6]); (9, [0; 3; 7; 4; 5; 7; 1; 3; 8])] = [9; 8; 5; 4; 7; 3; 0; 6; 1]) );
assert ((Topol.topol [(8, [9]); (8, []); (1, [0; 0; 5; 2]); (3, [0]); (6, [1; 2; 9; 3; 0])] = [8; 6; 3; 9; 1; 2; 5; 0]) );
assert ((Topol.topol [(9, [0; 5; 5; 3; 3; 2; 4; 6; 5]); (8, [3; 4; 1; 9]); (4, [2; 1; 2])] = [8; 9; 6; 4; 3; 5; 0; 1; 2]) );
assert ((Topol.topol [(5, [2; 3; 9; 3; 3; 4]); (8, [6; 2; 1; 4; 2; 5; 6; 6])] = [8; 5; 1; 6; 4; 9; 3; 2]) );
assert ((Topol.topol [(2, [1; 4; 4; 3])] = [2; 3; 4; 1]) );
assert ((Topol.topol [(8, [4; 4]); (3, [])] = [8; 3; 4]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(5, [1; 4; 4; 1; 7; 3]); (6, [])] = [5; 6; 3; 7; 4; 1]) );
assert ((Topol.topol [(1, [5; 6])] = [1; 6; 5]) );
assert ((Topol.topol [(3, [5; 0; 7; 2; 9; 6; 4; 8])] = [3; 8; 4; 6; 9; 2; 7; 0; 5]) );
assert ((Topol.topol [(3, [7; 5; 9; 5; 2]); (1, [7])] = [3; 1; 2; 9; 5; 7]) );
assert ((Topol.topol [(7, [6; 4; 6; 2; 4]); (1, [0; 8; 5; 4; 2; 8; 6])] = [7; 1; 6; 2; 4; 5; 8; 0]) );
assert ((Topol.topol [(6, [9; 2; 5]); (3, [8; 8; 6; 2]); (4, [3; 3; 9]); (4, [])] = [4; 3; 6; 8; 5; 2; 9]) );
assert ((Topol.topol [(5, [8; 0; 0; 2; 4; 6; 6]); (1, [2]); (6, [1])] = [5; 6; 4; 0; 8; 1; 2]) );
assert ((Topol.topol [(9, [2; 8]); (0, [5; 8; 2])] = [9; 0; 2; 8; 5]) );
assert ((Topol.topol [(9, [0; 1; 5]); (4, [3; 9; 1; 6; 8; 2])] = [4; 2; 8; 6; 9; 3; 5; 1; 0]) );
assert ((Topol.topol [(8, [1; 5; 4; 1; 9; 3; 7; 4])] = [8; 7; 3; 9; 4; 5; 1]) );
assert ((Topol.topol [(7, [5; 4; 8; 8; 5; 8])] = [7; 8; 4; 5]) );
assert ((Topol.topol [(4, [2; 8]); (1, [])] = [4; 1; 8; 2]) );
assert ((Topol.topol [(6, [2; 7; 3; 3; 8; 3])] = [6; 8; 3; 7; 2]) );
assert ((Topol.topol [(2, []); (4, []); (7, [8; 5; 1; 5; 0; 5; 4])] = [2; 7; 4; 0; 1; 5; 8]) );
assert ((Topol.topol [(7, [6]); (0, [4; 9; 3; 2])] = [7; 0; 6; 2; 3; 9; 4]) );
assert ((Topol.topol [(4, [3; 7])] = [4; 7; 3]) );
assert ((Topol.topol [(3, [7]); (3, [4; 2]); (0, [9; 4; 1; 2]); (8, [])] = [3; 0; 8; 7; 2; 1; 4; 9]) );
assert ((Topol.topol [(3, [2; 4; 5; 4; 1; 5])] = [3; 1; 5; 4; 2]) );
assert ((Topol.topol [(6, [1; 0; 8; 4; 0; 5; 3; 0]); (8, [])] = [6; 3; 5; 4; 8; 0; 1]) );
assert ((Topol.topol [(8, [1; 9; 7]); (5, [6; 4; 4]); (4, [8; 3]); (0, [2; 9; 3]); (3, []); (0, [1; 3; 7; 9])] = [5; 0; 4; 6; 2; 3; 8; 7; 9; 1]) );
assert ((Topol.topol [(0, []); (9, [2; 6; 5; 2; 6; 1; 7; 2]); (5, [2; 7; 0])] = [9; 1; 5; 6; 0; 7; 2]) );
assert ((Topol.topol [(0, [1]); (5, [1])] = [0; 5; 1]) );
assert ((Topol.topol [(2, [8; 1]); (3, []); (7, [4; 8]); (8, [])] = [2; 3; 7; 1; 8; 4]) );
assert ((Topol.topol [(4, [7]); (9, [7; 3; 1])] = [4; 9; 1; 3; 7]) );
assert ((Topol.topol [(2, []); (3, [2; 8])] = [3; 8; 2]) );
assert ((Topol.topol [(1, [8; 3])] = [1; 3; 8]) );
assert ((Topol.topol [(5, []); (2, [1]); (0, [5]); (3, [8; 0; 8; 6; 9; 9]); (9, [2; 7; 0]); (0, [5; 6; 8; 5; 8; 4; 7; 5])] = [3; 9; 0; 2; 7; 4; 8; 6; 5; 1]) );
assert ((Topol.topol [(1, [4; 5; 4; 6; 8]); (1, [2; 4; 0; 2; 9; 5])] = [1; 9; 0; 2; 8; 6; 5; 4]) );
assert ((Topol.topol [(4, [0; 0; 9])] = [4; 9; 0]) );
assert ((Topol.topol [(9, []); (1, [6; 3; 3; 2; 3]); (7, [3; 3; 6; 9; 6]); (5, [3; 8; 8; 0; 6; 1; 7]); (4, [5; 7; 2; 6; 0; 6]); (9, [])] = [4; 5; 7; 1; 0; 8; 9; 2; 3; 6]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(0, [8]); (4, [2; 8; 5])] = [0; 4; 5; 8; 2]) );
assert ((Topol.topol [(3, [4; 7; 5; 1; 1; 4])] = [3; 1; 5; 7; 4]) );
assert ((Topol.topol [(9, [7; 1; 8]); (7, [0; 1; 6])] = [9; 8; 7; 6; 1; 0]) );
assert ((Topol.topol [(3, [9]); (1, [6; 9; 9; 5; 4; 2; 9; 7; 8]); (6, [7]); (4, [0; 6; 5; 8]); (2, []); (0, [7; 2; 7])] = [3; 1; 4; 9; 8; 5; 6; 0; 2; 7]) );
assert ((Topol.topol [(6, []); (7, []); (4, [9; 1; 6; 5; 9; 8]); (2, [4])] = [7; 2; 4; 8; 5; 6; 1; 9]) );
assert ((Topol.topol [(2, [3; 8; 0; 3; 4; 1; 4; 1]); (1, []); (0, [9; 9; 5]); (4, []); (8, [0; 7])] = [2; 1; 4; 8; 3; 7; 0; 5; 9]) );
assert ((Topol.topol [(7, [2; 3; 1; 5; 3]); (5, [])] = [7; 5; 1; 3; 2]) );
assert ((Topol.topol [(5, [3]); (4, [7; 5; 0; 6; 8; 7; 9]); (2, [3; 3; 0; 1])] = [4; 2; 9; 8; 6; 5; 7; 1; 0; 3]) );
assert ((Topol.topol [(2, [1; 7; 6; 9; 9]); (6, []); (5, [])] = [2; 5; 9; 6; 7; 1]) );
assert ((Topol.topol [(2, [3; 4; 9; 0; 6; 7; 9; 3])] = [2; 7; 6; 0; 9; 4; 3]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(2, [0; 1; 9; 3; 1]); (4, [0])] = [2; 4; 3; 9; 1; 0]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(9, [8; 0; 8; 7; 4; 5; 0; 7])] = [9; 5; 4; 7; 0; 8]) );
assert ((Topol.topol [(2, [7; 1; 9; 4])] = [2; 4; 9; 1; 7]) );
assert ((Topol.topol [(7, [9; 5; 6; 0; 2])] = [7; 2; 0; 6; 5; 9]) );
assert ((Topol.topol [(0, [8; 2; 2; 3; 3; 3; 3; 7; 8])] = [0; 7; 3; 2; 8]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(5, [7; 6; 6]); (2, [6; 3]); (3, [5])] = [2; 3; 5; 6; 7]) );
assert ((Topol.topol [(5, [3; 3; 0; 7; 3; 8; 6; 2; 4])] = [5; 4; 2; 6; 8; 7; 0; 3]) );
assert ((Topol.topol [(8, [1; 3; 6])] = [8; 6; 3; 1]) );
assert ((Topol.topol [(6, [3])] = [6; 3]) );
assert ((Topol.topol [(8, [1; 1; 9; 4]); (4, [3; 5; 7; 7; 7; 7; 0])] = [8; 4; 9; 1; 0; 7; 5; 3]) );
assert ((Topol.topol [(6, [9; 9; 3; 7; 9; 2; 7; 7; 0]); (4, [])] = [6; 4; 0; 2; 7; 3; 9]) );
assert ((Topol.topol [(9, [0; 1; 5; 0; 2; 1; 6]); (4, [8; 8; 3; 7; 6; 3; 5])] = [9; 4; 2; 1; 0; 5; 6; 7; 3; 8]) );
assert ((Topol.topol [(2, [3; 8]); (6, [8])] = [2; 6; 3; 8]) );
assert ((Topol.topol [(5, [1; 8; 6; 9; 6])] = [5; 9; 6; 8; 1]) );
assert ((Topol.topol [(0, []); (0, [2; 4; 6; 6; 3]); (4, [3; 2; 6; 6; 7; 2; 7])] = [0; 4; 7; 6; 2; 3]) );
assert ((Topol.topol [(1, [2; 9; 3; 4; 3])] = [1; 4; 3; 9; 2]) );
assert ((Topol.topol [(1, [7; 4; 3; 0; 2; 9; 9]); (9, [5; 0])] = [1; 9; 2; 3; 4; 7; 0; 5]) );
assert ((Topol.topol [(7, [0; 0; 4; 2; 5; 9; 5; 3])] = [7; 3; 9; 5; 2; 4; 0]) );
assert ((Topol.topol [(2, [4; 4; 6; 0; 8; 3; 7; 7])] = [2; 7; 3; 8; 0; 6; 4]) );
assert ((Topol.topol [(5, []); (0, [2; 1; 9; 9]); (9, [2; 5; 1; 8])] = [0; 9; 8; 1; 5; 2]) );
assert ((Topol.topol [(1, [9; 4; 6; 6; 8; 8; 9]); (6, [])] = [1; 8; 6; 4; 9]) );
assert ((Topol.topol [(6, [5; 0; 3; 2]); (6, [3])] = [6; 2; 3; 0; 5]) );
assert ((Topol.topol [(4, [2; 9; 8; 9; 0; 9])] = [4; 0; 8; 9; 2]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(1, [9])] = [1; 9]) );
assert ((Topol.topol [(5, [8; 8; 8; 3; 4; 9])] = [5; 9; 4; 3; 8]) );
assert ((Topol.topol [(3, []); (5, [6; 1; 2])] = [3; 5; 2; 1; 6]) );
assert ((Topol.topol [(8, [1; 7; 2; 6]); (3, [2; 2; 0; 5; 8; 1])] = [3; 8; 5; 0; 6; 2; 7; 1]) );
assert ((Topol.topol [(6, [4; 1; 5; 4; 7; 2]); (8, []); (3, [4; 5; 7]); (8, [9; 0; 9])] = [6; 8; 3; 2; 1; 0; 9; 7; 5; 4]) );
assert ((Topol.topol [(8, [2; 0; 9; 0; 6; 6; 4])] = [8; 4; 6; 9; 0; 2]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(7, []); (8, [6; 4; 4; 9; 0])] = [7; 8; 0; 9; 4; 6]) );
assert ((Topol.topol [(1, [5]); (2, [5])] = [1; 2; 5]) );
assert ((Topol.topol [(7, [0; 5; 2; 2]); (0, [1; 6])] = [7; 2; 5; 0; 6; 1]) );
assert ((Topol.topol [(2, [6; 5; 8; 9]); (1, [4; 4; 9; 0; 9; 3; 7; 8])] = [2; 1; 5; 6; 8; 7; 3; 0; 9; 4]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(9, [6; 1; 3; 4; 3; 0]); (1, [2]); (3, [0; 1; 5])] = [9; 4; 3; 6; 5; 1; 0; 2]) );
assert ((Topol.topol [(0, [5; 9; 3; 1; 6; 4])] = [0; 4; 6; 1; 3; 9; 5]) );
assert ((Topol.topol [(6, [2; 0; 1; 9; 2]); (6, [9; 3; 7])] = [6; 7; 3; 9; 1; 0; 2]) );
assert ((Topol.topol [(8, [9; 4; 4]); (4, [5])] = [8; 4; 9; 5]) );
assert ((Topol.topol [(8, [6]); (5, [9]); (5, [6; 0; 1; 7]); (2, [])] = [8; 5; 2; 7; 1; 0; 6; 9]) );
assert ((Topol.topol [(9, [0; 1; 0; 6]); (7, [6]); (2, [0; 5; 6; 3; 6; 3; 3])] = [9; 7; 2; 1; 3; 6; 5; 0]) );
assert ((Topol.topol [(1, [0; 6; 6; 9])] = [1; 9; 6; 0]) );
assert ((Topol.topol [(5, [6; 8; 7; 2; 2; 0; 3; 0])] = [5; 3; 0; 2; 7; 8; 6]) );
assert ((Topol.topol [(1, [4; 0; 2; 7; 9; 0; 0])] = [1; 9; 7; 2; 0; 4]) );
assert ((Topol.topol [(9, [1; 3; 0; 6; 8; 4])] = [9; 4; 8; 6; 0; 3; 1]) );
assert ((Topol.topol [(1, [4])] = [1; 4]) );
assert ((Topol.topol [(2, [1; 6; 4; 3; 4])] = [2; 3; 4; 6; 1]) );
assert ((Topol.topol [(7, [1; 1; 3; 5; 5; 8; 2])] = [7; 2; 8; 5; 3; 1]) );
assert ((Topol.topol [(7, []); (6, [2; 7; 7; 4]); (8, []); (4, [8]); (5, [2; 2; 9; 3; 4; 2; 8; 6]); (6, [3; 0; 9; 2; 1; 4])] = [5; 6; 1; 9; 0; 3; 4; 7; 2; 8]) );
assert ((Topol.topol [(2, [3; 3; 8; 7; 9])] = [2; 9; 7; 8; 3]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(2, [5; 6; 1; 3; 1]); (4, [2; 3; 8; 3; 2; 0; 0; 1]); (8, [1; 5; 1])] = [4; 0; 8; 2; 3; 1; 6; 5]) );
assert ((Topol.topol [(3, []); (1, [])] = [3; 1]) );
assert ((Topol.topol [(1, [9; 0; 8; 2; 0; 7])] = [1; 7; 2; 8; 0; 9]) );
assert ((Topol.topol [(8, [2; 9; 9])] = [8; 9; 2]) );
assert ((Topol.topol [(8, [4; 9])] = [8; 9; 4]) );
assert ((Topol.topol [(4, [0]); (3, []); (1, [3; 5; 9; 9; 6]); (2, [5; 8; 7; 7; 5; 6]); (8, [0; 6; 7]); (7, [6; 9])] = [4; 1; 2; 3; 8; 5; 7; 0; 9; 6]) );
assert ((Topol.topol [(4, [2; 5; 6; 5; 2; 6])] = [4; 6; 5; 2]) );
assert ((Topol.topol [(4, [5]); (8, [0; 5; 7; 0; 3])] = [4; 8; 3; 7; 5; 0]) );
assert ((Topol.topol [(3, [4])] = [3; 4]) );
assert ((Topol.topol [(1, []); (2, [0; 8; 4])] = [1; 2; 4; 8; 0]) );
assert ((Topol.topol [(8, [3; 6; 1; 9; 3])] = [8; 9; 1; 6; 3]) );
assert ((Topol.topol [(9, [2; 0; 2; 3]); (6, []); (1, [7; 0])] = [9; 6; 1; 3; 2; 0; 7]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(2, []); (8, []); (4, [])] = [2; 8; 4]) );
assert ((Topol.topol [(9, [0; 0; 0; 7; 4; 4; 4]); (2, []); (8, [5])] = [9; 2; 8; 4; 7; 0; 5]) );
assert ((Topol.topol [(5, [9; 0; 7; 7; 4; 9])] = [5; 4; 7; 0; 9]) );
assert ((Topol.topol [(6, [2; 5; 1; 1; 5]); (3, [4; 4; 7; 9; 1; 0])] = [6; 3; 5; 2; 0; 1; 9; 7; 4]) );
assert ((Topol.topol [(3, [7; 0; 0; 2; 7])] = [3; 2; 0; 7]) );
assert ((Topol.topol [(7, [6; 0])] = [7; 0; 6]) );
assert ((Topol.topol [(4, [0; 1]); (5, [9; 2; 0; 4; 4; 2])] = [5; 4; 2; 9; 1; 0]) );
assert ((Topol.topol [(1, [4])] = [1; 4]) );
assert ((Topol.topol [(5, [1; 7; 8; 7; 2; 9; 6])] = [5; 6; 9; 2; 8; 7; 1]) );
assert ((Topol.topol [(5, [1; 7; 7; 8])] = [5; 8; 7; 1]) );
assert ((Topol.topol [(5, [0])] = [5; 0]) );
assert ((Topol.topol [(8, [6]); (9, [5; 0; 4; 4; 1; 3; 2; 1; 1])] = [8; 9; 6; 2; 3; 1; 4; 0; 5]) );
assert ((Topol.topol [(2, [4; 7; 3; 8; 9; 5; 0; 7])] = [2; 0; 5; 9; 8; 3; 7; 4]) );
assert ((Topol.topol [(8, [0; 9; 5; 7]); (1, [6]); (8, [0; 4; 4; 3; 9])] = [8; 1; 3; 4; 7; 5; 9; 0; 6]) );
assert ((Topol.topol [(2, [8; 0; 8; 6; 6; 7; 4; 4]); (4, [3; 5]); (8, [6; 4; 9; 4; 1]); (0, [6; 1]); (2, [8; 1; 9; 3; 9; 5; 4; 8; 5]); (1, []); (2, [7; 9; 6; 1])] = [2; 7; 0; 8; 1; 9; 4; 6; 5; 3]) );
assert ((Topol.topol [(8, [3])] = [8; 3]) );
assert ((Topol.topol [(6, [8; 9; 5; 4; 8; 0]); (0, [5; 4; 2])] = [6; 0; 9; 8; 2; 4; 5]) );
assert ((Topol.topol [(0, [5; 3; 8; 3; 5; 6; 5; 5; 1]); (2, [9; 7; 6; 9; 1; 8; 9; 4])] = [0; 2; 3; 5; 4; 8; 1; 6; 7; 9]) );
assert ((Topol.topol [(6, [8; 0])] = [6; 0; 8]) );
assert ((Topol.topol [(9, [0; 2; 4; 4]); (9, [5; 5])] = [9; 5; 4; 2; 0]) );
assert ((Topol.topol [(1, [0; 6; 0; 4]); (9, [8; 1; 7; 4; 5]); (5, [2; 1])] = [9; 5; 7; 8; 1; 2; 4; 6; 0]) );
assert ((Topol.topol [(9, [1])] = [9; 1]) );
assert ((Topol.topol [(6, [7; 9; 4; 8; 9; 8]); (4, [1; 1; 0]); (2, [3; 0; 9]); (6, [8; 1]); (5, [7; 4]); (3, [])] = [6; 2; 5; 8; 9; 3; 4; 7; 0; 1]) );
assert ((Topol.topol [(5, [9]); (6, [7; 1; 2; 4; 9; 5; 0; 5; 4])] = [6; 0; 5; 4; 2; 1; 7; 9]) );
assert ((Topol.topol [(9, []); (2, [3; 5; 4; 7; 6; 0])] = [9; 2; 0; 6; 7; 4; 5; 3]) );
assert ((Topol.topol [(6, [5; 1; 4; 9])] = [6; 9; 4; 1; 5]) );
assert ((Topol.topol [(2, [1; 8; 6; 4; 8; 7; 1; 5]); (0, [5])] = [2; 0; 7; 4; 6; 8; 1; 5]) );
assert ((Topol.topol [(8, [0; 9; 0]); (3, [5; 9; 8])] = [3; 8; 5; 9; 0]) );
assert ((Topol.topol [(6, [1; 9; 5; 9; 5; 0; 4; 1; 2]); (8, [9; 7; 0; 5; 7]); (4, [9; 9; 3; 9; 1; 3; 2])] = [6; 8; 4; 5; 0; 7; 2; 1; 3; 9]) );
assert ((Topol.topol [(7, []); (5, [3; 1; 4]); (3, [6; 2; 8; 6; 8; 7; 0; 1; 6]); (0, [])] = [5; 4; 3; 1; 0; 7; 8; 2; 6]) );
assert ((Topol.topol [(5, [3]); (5, [8; 4; 9; 0; 8; 3; 6; 1])] = [5; 1; 6; 0; 9; 4; 8; 3]) );
assert ((Topol.topol [(3, [4])] = [3; 4]) );
assert ((Topol.topol [(2, [3])] = [2; 3]) );
assert ((Topol.topol [(7, [9; 9; 3; 1]); (2, []); (7, [3; 4; 0; 1; 6]); (9, [1; 2; 2; 5]); (7, []); (2, []); (4, [1; 6; 0; 0; 8; 8])] = [7; 4; 3; 9; 8; 0; 6; 5; 2; 1]) );
assert ((Topol.topol [(5, [9; 9]); (3, [6; 4]); (7, [2]); (5, [6; 6])] = [5; 3; 7; 9; 4; 6; 2]) );
assert ((Topol.topol [(3, [5; 6; 4; 8; 6; 5; 6])] = [3; 8; 4; 6; 5]) );
assert ((Topol.topol [(5, [6; 7; 6])] = [5; 7; 6]) );
assert ((Topol.topol [(0, [6; 1; 2; 7; 1]); (4, []); (0, [9; 8; 6]); (4, [2; 5; 1; 7; 3]); (4, [7; 7; 9; 0; 6; 7]); (0, [])] = [4; 0; 3; 5; 8; 9; 7; 2; 1; 6]) );
assert ((Topol.topol [(4, [5])] = [4; 5]) );
assert ((Topol.topol [(3, [4; 0; 8]); (8, [9; 4; 0; 7; 7; 4; 1])] = [3; 8; 1; 7; 0; 4; 9]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(8, [6; 7; 6]); (0, [9; 5]); (0, [7; 4; 6])] = [8; 0; 6; 4; 7; 5; 9]) );
assert ((Topol.topol [(7, [2; 6; 5; 3; 6]); (3, [1; 6])] = [7; 3; 5; 2; 6; 1]) );
assert ((Topol.topol [(7, [8])] = [7; 8]) );
assert ((Topol.topol [(8, [3; 1; 2; 7; 7; 6; 4; 0; 6]); (4, [1; 7; 1; 7; 5; 1; 1; 9; 0]); (4, [6])] = [8; 4; 2; 3; 6; 0; 9; 5; 7; 1]) );
assert ((Topol.topol [(5, []); (0, [7; 6; 3])] = [5; 0; 3; 6; 7]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(1, [8; 3; 8; 6; 8]); (7, [9; 5; 5; 1]); (0, []); (4, [7])] = [0; 4; 7; 1; 5; 9; 6; 3; 8]) );
assert ((Topol.topol [(0, [3])] = [0; 3]) );
assert ((Topol.topol [(0, [6; 5]); (8, [9; 9; 5]); (8, [6; 5])] = [0; 8; 6; 5; 9]) );
assert ((Topol.topol [(5, [2; 8; 1])] = [5; 1; 8; 2]) );
assert ((Topol.topol [(1, [6; 8; 9; 7; 0; 0; 6; 0]); (5, []); (1, [9; 5; 8; 9; 2])] = [1; 2; 5; 0; 7; 9; 8; 6]) );
assert ((Topol.topol [(8, [1]); (8, [4; 6; 2; 7; 4]); (5, [7; 6; 1])] = [8; 5; 2; 4; 1; 6; 7]) );
assert ((Topol.topol [(8, [4])] = [8; 4]) );
assert ((Topol.topol [(9, [3; 3; 5; 3]); (9, []); (4, [7; 0; 7; 2; 3; 1])] = [9; 4; 5; 1; 3; 2; 0; 7]) );
assert ((Topol.topol [(5, [0; 0]); (7, [1]); (9, [3; 3; 7; 4; 3; 3]); (6, [9; 1])] = [5; 6; 0; 9; 4; 7; 3; 1]) );
assert ((Topol.topol [(5, [9; 0])] = [5; 0; 9]) );
assert ((Topol.topol [(3, [6; 4; 2; 8]); (9, [1; 6; 2; 8; 5; 2; 0]); (1, []); (1, [8; 0; 2; 4; 3])] = [9; 5; 1; 3; 0; 8; 2; 4; 6]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(8, [0]); (9, [0; 3; 0; 6; 1; 0; 0])] = [8; 9; 1; 6; 3; 0]) );
assert ((Topol.topol [(8, [4; 5; 5; 4; 1; 1; 7; 9]); (8, [])] = [8; 9; 7; 1; 5; 4]) );
assert ((Topol.topol [(9, [4; 8; 6; 8; 4; 7; 7])] = [9; 7; 6; 8; 4]) );
assert ((Topol.topol [(8, [0; 1]); (3, [0; 7; 4; 1]); (4, [])] = [8; 3; 1; 4; 7; 0]) );
assert ((Topol.topol [(1, [4; 4; 2]); (9, [2; 7; 6; 8; 8; 6; 3; 5; 5])] = [1; 9; 4; 5; 3; 8; 6; 7; 2]) );
assert ((Topol.topol [(5, [4; 9; 0; 1]); (2, [1; 1; 3; 3; 7; 8; 3])] = [5; 2; 0; 9; 4; 8; 7; 3; 1]) );
assert ((Topol.topol [(0, [9; 1]); (8, [0; 0]); (8, [9; 7; 4])] = [8; 4; 7; 0; 1; 9]) );
assert ((Topol.topol [(0, [8; 4; 6])] = [0; 6; 4; 8]) );
assert ((Topol.topol [(8, [9; 2; 9; 2]); (4, [2; 0; 6; 1; 6; 7; 7; 0; 2])] = [8; 4; 9; 7; 1; 6; 0; 2]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(3, [0; 6; 2])] = [3; 2; 6; 0]) );
assert ((Topol.topol [(2, [7; 5])] = [2; 5; 7]) );
assert ((Topol.topol [(2, [3; 3; 1; 9; 3]); (6, [5; 4; 8; 7; 1; 5; 0; 4]); (9, [1]); (3, [1]); (4, [3; 2; 0; 3]); (9, [])] = [6; 7; 8; 4; 5; 0; 2; 9; 3; 1]) );
assert ((Topol.topol [(0, [6; 2; 7; 2; 2; 1; 4; 5]); (5, [1; 6; 4; 4; 9]); (9, [8; 3; 7; 7; 3; 3])] = [0; 5; 2; 9; 4; 6; 1; 7; 3; 8]) );
assert ((Topol.topol [(5, [6; 2; 1]); (7, [1])] = [5; 7; 2; 6; 1]) );
assert ((Topol.topol [(8, [6; 4; 1]); (7, [2; 5]); (6, [2])] = [8; 7; 1; 4; 6; 5; 2]) );
assert ((Topol.topol [(8, [2; 2; 4; 3; 3; 1])] = [8; 1; 3; 4; 2]) );
assert ((Topol.topol [(6, [9]); (6, [])] = [6; 9]) );
assert ((Topol.topol [(6, [0]); (4, [5; 6; 6; 3]); (3, [])] = [4; 3; 6; 5; 0]) );
assert ((Topol.topol [(1, [0; 4; 7; 0]); (5, [7; 4; 1; 7; 8]); (9, [1; 4; 4; 5; 7])] = [9; 5; 8; 1; 7; 4; 0]) );
assert ((Topol.topol [(6, [9; 5])] = [6; 5; 9]) );
assert ((Topol.topol [(4, [9]); (7, [5; 4; 2])] = [7; 2; 4; 5; 9]) );
assert ((Topol.topol [(2, [6; 6; 9; 1]); (4, [])] = [2; 4; 1; 9; 6]) );
assert ((Topol.topol [(2, [8; 1; 3; 8; 4; 7]); (9, [8; 3; 3; 1; 2; 5; 8])] = [9; 5; 2; 7; 4; 3; 1; 8]) );
assert ((Topol.topol [(3, [0; 8; 7; 5])] = [3; 5; 7; 8; 0]) );
assert ((Topol.topol [(0, [5; 9; 9; 2; 8]); (2, [5; 9; 3])] = [0; 8; 2; 3; 9; 5]) );
assert ((Topol.topol [(2, [0; 0; 5; 1; 9; 4]); (6, [9; 9]); (9, [5]); (8, [])] = [2; 6; 8; 4; 1; 0; 9; 5]) );
assert ((Topol.topol [(8, []); (7, []); (1, [5; 6]); (4, [6])] = [8; 7; 1; 4; 5; 6]) );
assert ((Topol.topol [(3, [4; 6; 9; 2; 4; 7]); (2, [1; 1; 4; 6; 4; 0; 6; 8])] = [3; 7; 2; 9; 8; 0; 6; 4; 1]) );
assert ((Topol.topol [(2, [3; 4; 9; 0; 8; 1]); (9, [5; 6; 0; 4; 1; 0]); (3, [])] = [2; 8; 9; 3; 1; 4; 0; 6; 5]) );
assert ((Topol.topol [(8, [3; 1])] = [8; 1; 3]) );
assert ((Topol.topol [(8, [1; 9; 2; 5; 9])] = [8; 5; 2; 9; 1]) );
assert ((Topol.topol [(3, [6; 1; 4; 2; 7; 6; 8])] = [3; 8; 7; 2; 4; 1; 6]) );
assert ((Topol.topol [(7, [0])] = [7; 0]) );
assert ((Topol.topol [(4, [8; 2]); (3, [1; 4; 1; 0; 9; 6; 7; 2]); (9, [6]); (7, [5])] = [3; 7; 9; 0; 4; 1; 5; 6; 2; 8]) );
assert ((Topol.topol [(0, [4; 1; 9; 9])] = [0; 9; 1; 4]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(2, [3; 5; 5]); (8, [2]); (8, [1; 0; 7; 4; 6; 2; 1; 5])] = [8; 6; 4; 7; 0; 1; 2; 5; 3]) );
assert ((Topol.topol [(0, [6; 2; 1; 4; 4; 2; 2; 7]); (1, [5; 2; 6; 4]); (1, [7; 2; 9; 9; 4; 5; 2; 3])] = [0; 1; 3; 9; 7; 4; 6; 2; 5]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(6, [8; 0; 8; 3]); (5, []); (7, [8])] = [6; 5; 7; 3; 0; 8]) );
assert ((Topol.topol [(9, [8; 7; 0; 0; 2; 6; 4]); (6, [7; 8; 7; 1; 1; 0])] = [9; 4; 6; 2; 0; 1; 8; 7]) );
assert ((Topol.topol [(8, [0; 2; 5; 7; 1])] = [8; 1; 7; 5; 2; 0]) );
assert ((Topol.topol [(4, [0; 7; 7; 6; 0; 3; 1; 1; 6])] = [4; 1; 3; 6; 7; 0]) );
assert ((Topol.topol [(7, []); (8, [4; 9; 4])] = [7; 8; 9; 4]) );
assert ((Topol.topol [(3, [0; 6; 9; 9; 2])] = [3; 2; 9; 6; 0]) );
assert ((Topol.topol [(6, [4; 9; 7; 9; 3; 4; 7; 1])] = [6; 1; 3; 7; 9; 4]) );
assert ((Topol.topol [(3, [5; 6; 9; 9])] = [3; 9; 6; 5]) );
assert ((Topol.topol [(5, []); (8, [7; 0])] = [5; 8; 0; 7]) );
assert ((Topol.topol [(6, [4; 4; 2; 2; 1; 3; 7])] = [6; 7; 3; 1; 2; 4]) );
assert ((Topol.topol [(8, [3; 2; 1]); (2, [6; 0; 9; 1; 5; 6; 9])] = [8; 2; 3; 5; 1; 9; 0; 6]) );
assert ((Topol.topol [(6, [3; 8; 1; 2; 5]); (2, [1])] = [6; 5; 2; 8; 3; 1]) );
assert ((Topol.topol [(8, [6]); (6, [2; 4; 2; 0; 7; 3; 7; 2]); (8, [4; 0; 6; 7; 9])] = [8; 9; 6; 3; 7; 0; 4; 2]) );
assert ((Topol.topol [(7, [3; 4; 1; 5; 4; 5; 9; 2; 8])] = [7; 8; 2; 9; 5; 1; 4; 3]) );
assert ((Topol.topol [(2, [9])] = [2; 9]) );
assert ((Topol.topol [(0, [2; 7; 1; 8]); (4, [2]); (8, [2; 4; 3; 5; 1; 4])] = [0; 8; 7; 1; 5; 3; 4; 2]) );
assert ((Topol.topol [(5, [2; 6; 3; 2; 3]); (5, [8]); (2, [6; 0])] = [5; 8; 3; 2; 0; 6]) );
assert ((Topol.topol [(6, []); (7, [3])] = [6; 7; 3]) );
assert ((Topol.topol [(3, [6]); (0, [3; 3; 8; 5; 1; 9])] = [0; 9; 1; 5; 8; 3; 6]) );
assert ((Topol.topol [(3, [9; 2; 2; 1; 9; 4; 7; 2]); (8, [0])] = [3; 8; 7; 4; 1; 2; 9; 0]) );
assert ((Topol.topol [(8, [6]); (0, []); (0, [2; 1; 4; 6])] = [8; 0; 6; 4; 1; 2]) );
assert ((Topol.topol [(4, [3; 2])] = [4; 2; 3]) );
assert ((Topol.topol [(9, [3])] = [9; 3]) );
assert ((Topol.topol [(0, [3; 3])] = [0; 3]) );
assert ((Topol.topol [(5, [3; 7; 9]); (3, [])] = [5; 9; 7; 3]) );
assert ((Topol.topol [(8, [6; 5; 9; 5; 1; 4]); (6, [0; 5; 4; 0; 4]); (8, [3; 1])] = [8; 3; 1; 9; 6; 4; 5; 0]) );
assert ((Topol.topol [(9, [7; 0; 1; 5; 0])] = [9; 5; 1; 0; 7]) );
assert ((Topol.topol [(5, [8; 8]); (1, [5; 5; 8; 4]); (2, [7]); (0, [9; 4; 9; 4; 3; 8; 5]); (5, [7])] = [1; 2; 0; 5; 3; 4; 9; 7; 8]) );
assert ((Topol.topol [(1, []); (4, [7; 6; 8; 8; 3; 3; 9])] = [1; 4; 9; 3; 8; 6; 7]) );
assert ((Topol.topol [(8, [0; 3; 6])] = [8; 6; 3; 0]) );
assert ((Topol.topol [(7, []); (9, []); (4, [2; 0; 7])] = [9; 4; 7; 0; 2]) );
assert ((Topol.topol [(1, []); (4, [2]); (8, [6; 0; 2; 3; 4; 7; 4; 3])] = [1; 8; 7; 4; 3; 0; 6; 2]) );
assert ((Topol.topol [(9, [2; 5; 6])] = [9; 6; 5; 2]) );
assert ((Topol.topol [(3, [7; 8; 5; 1; 7; 9]); (0, [2])] = [3; 0; 9; 1; 5; 8; 7; 2]) );
assert ((Topol.topol [(7, [5; 0; 6; 6; 6; 8])] = [7; 8; 6; 0; 5]) );
assert ((Topol.topol [(7, [])] = [7]) );
assert ((Topol.topol [(9, [6; 5; 0]); (0, [6; 7]); (2, [8; 5; 5]); (1, [9; 5; 0; 7; 3; 4])] = [2; 1; 8; 4; 3; 9; 0; 5; 7; 6]) );
assert ((Topol.topol [(1, [3; 4])] = [1; 4; 3]) );
assert ((Topol.topol [(1, [3; 2; 0]); (2, [6]); (3, [0; 8; 4])] = [1; 2; 3; 6; 4; 8; 0]) );
assert ((Topol.topol [(5, [7; 4; 1; 6])] = [5; 6; 1; 4; 7]) );
assert ((Topol.topol [(8, [7; 2]); (4, [0; 1; 1; 2; 5; 7; 6; 9]); (6, [2; 0; 2; 7])] = [8; 4; 9; 6; 5; 1; 7; 0; 2]) );
assert ((Topol.topol [(8, [1]); (8, [5; 2; 9; 2; 9; 6; 2]); (1, [6; 7; 0; 6; 4]); (2, [1; 5; 6; 7; 7; 9; 7])] = [8; 2; 9; 5; 1; 4; 0; 7; 6]) );
assert ((Topol.topol [(9, [6]); (2, [9; 8; 4; 9; 8; 6]); (3, [4; 5; 8; 1]); (4, [6; 0; 1]); (7, [8])] = [2; 3; 7; 9; 5; 4; 8; 1; 0; 6]) );
assert ((Topol.topol [(8, [3; 3]); (1, [])] = [8; 1; 3]) );
assert ((Topol.topol [(0, [3]); (4, [6; 0; 9; 0; 8]); (5, [3; 7; 3; 0; 7]); (7, [1; 1; 2; 6; 9; 1; 2; 3; 2])] = [4; 5; 8; 0; 7; 3; 9; 6; 2; 1]) );
assert ((Topol.topol [(3, [9]); (2, [7])] = [3; 2; 9; 7]) );
assert ((Topol.topol [(0, [6; 8; 2; 5; 5])] = [0; 5; 2; 8; 6]) );
assert ((Topol.topol [(9, [0; 6; 8; 4; 7; 4; 0])] = [9; 7; 4; 8; 6; 0]) );
assert ((Topol.topol [(9, [2; 8; 6; 4; 4; 6; 2; 8; 8]); (5, [1; 3])] = [9; 5; 4; 6; 8; 2; 3; 1]) );
assert ((Topol.topol [(7, [5; 0; 3; 0])] = [7; 3; 0; 5]) );
assert ((Topol.topol [(3, [2; 2; 0; 9]); (9, [8; 8]); (2, []); (5, [4; 3; 0; 7; 6; 6; 4])] = [5; 6; 7; 3; 4; 9; 0; 2; 8]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(1, [5; 4; 9]); (6, [5])] = [1; 6; 9; 4; 5]) );
assert ((Topol.topol [(2, [6]); (4, [5; 2; 2; 9; 0])] = [4; 0; 9; 2; 5; 6]) );
assert ((Topol.topol [(3, [9; 7; 8]); (1, [8; 0; 5]); (1, [5; 3; 6])] = [1; 6; 3; 5; 0; 8; 7; 9]) );
assert ((Topol.topol [(4, [8; 1; 6; 9; 6; 8])] = [4; 9; 6; 1; 8]) );
assert ((Topol.topol [(7, [3; 2; 5; 6; 0])] = [7; 0; 6; 5; 2; 3]) );
assert ((Topol.topol [(6, [4; 8])] = [6; 8; 4]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(6, [1; 4; 3; 5]); (0, [2; 9; 2]); (5, [4]); (6, [2; 1; 0; 4; 7; 4; 8; 1])] = [6; 8; 7; 0; 5; 3; 1; 9; 2; 4]) );
assert ((Topol.topol [(5, []); (5, [8; 7; 2; 4; 4; 6; 0; 6]); (5, []); (8, [9; 6; 9; 3; 4])] = [5; 0; 2; 7; 8; 4; 3; 6; 9]) );
assert ((Topol.topol [(4, [3; 3; 1; 6; 8; 6])] = [4; 8; 6; 1; 3]) );
assert ((Topol.topol [(5, [0; 9])] = [5; 9; 0]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(6, [9; 5; 8; 0]); (5, [1; 1; 8; 8; 8; 4])] = [6; 0; 5; 9; 4; 8; 1]) );
assert ((Topol.topol [(3, [5; 1; 7; 1; 8; 1; 2; 9]); (1, []); (0, [1; 5; 4; 1]); (2, []); (7, [8; 2; 2; 2; 4; 6]); (1, []); (9, [5; 7; 8; 2])] = [3; 0; 9; 1; 7; 5; 6; 4; 2; 8]) );
assert ((Topol.topol [(9, [1; 4; 3])] = [9; 3; 4; 1]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(5, [2; 2; 6; 2; 2])] = [5; 6; 2]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(3, [8]); (2, [])] = [3; 2; 8]) );
assert ((Topol.topol [(0, [6])] = [0; 6]) );
assert ((Topol.topol [(0, [9; 4; 8; 5; 5; 8; 5; 9; 9])] = [0; 5; 8; 4; 9]) );
assert ((Topol.topol [(6, [8; 2])] = [6; 2; 8]) );
assert ((Topol.topol [(8, [1; 2; 4; 9; 6; 5]); (1, [3])] = [8; 5; 6; 9; 4; 2; 1; 3]) );
assert ((Topol.topol [(1, []); (3, [2; 8; 8])] = [1; 3; 8; 2]) );
assert ((Topol.topol [(5, []); (1, []); (5, [3; 1; 0; 0]); (4, [2; 9; 8; 9; 8; 6; 2])] = [5; 4; 0; 1; 3; 6; 8; 9; 2]) );
assert ((Topol.topol [(6, [3; 5; 5; 9]); (8, []); (4, [7])] = [6; 8; 4; 9; 5; 3; 7]) );
assert ((Topol.topol [(9, [4; 2; 8])] = [9; 8; 2; 4]) );
assert ((Topol.topol [(0, [8; 4; 8; 7])] = [0; 7; 4; 8]) );
assert ((Topol.topol [(4, [6]); (7, [8])] = [4; 7; 6; 8]) );
assert ((Topol.topol [(8, [0; 6; 4; 9; 6])] = [8; 9; 4; 6; 0]) );
assert ((Topol.topol [(7, [3; 1]); (4, [6; 1; 2; 5; 5; 0]); (4, [])] = [7; 4; 3; 0; 5; 2; 1; 6]) );
assert ((Topol.topol [(7, [9; 1; 4; 9; 8; 1; 9]); (3, [0; 0; 1; 4])] = [7; 3; 8; 9; 4; 1; 0]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(1, []); (6, [4; 0; 9; 2; 2; 2; 0; 0])] = [1; 6; 2; 9; 0; 4]) );
assert ((Topol.topol [(4, []); (6, [5; 0; 4; 0; 4; 3; 9]); (4, [9; 3])] = [6; 4; 0; 5; 3; 9]) );
assert ((Topol.topol [(1, [7; 7; 0; 4; 2; 5; 0; 9; 9])] = [1; 9; 5; 2; 4; 0; 7]) );
assert ((Topol.topol [(2, []); (4, [2; 0; 8; 0; 6; 6; 5; 0])] = [4; 5; 6; 8; 0; 2]) );
assert ((Topol.topol [(8, [1; 9; 4])] = [8; 4; 9; 1]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(2, [4]); (4, [9; 1; 8])] = [2; 4; 8; 1; 9]) );
assert ((Topol.topol [(4, []); (8, []); (9, [7; 2; 6; 3; 0; 0; 3; 1]); (4, [9; 8; 1; 9])] = [4; 8; 9; 1; 0; 3; 6; 2; 7]) );
assert ((Topol.topol [(3, [0]); (7, [6; 4; 2; 1; 3; 0])] = [7; 3; 1; 2; 4; 6; 0]) );
assert ((Topol.topol [(4, [7; 2])] = [4; 2; 7]) );
assert ((Topol.topol [(0, [6; 2])] = [0; 2; 6]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(8, [3; 6; 1])] = [8; 1; 6; 3]) );
assert ((Topol.topol [(1, [6; 0; 9; 7; 0]); (0, [3]); (8, [4; 9; 9; 0; 2; 1; 6]); (1, [6; 7; 5; 4; 2; 5; 9; 7; 5]); (1, [4; 0; 2; 7])] = [8; 1; 2; 4; 5; 7; 9; 0; 6; 3]) );
assert ((Topol.topol [(9, [3; 8; 5; 1; 1; 6; 0]); (2, [8; 4; 5; 5]); (6, [])] = [9; 2; 0; 6; 1; 3; 5; 4; 8]) );
assert ((Topol.topol [(7, [8]); (0, [8; 2])] = [7; 0; 2; 8]) );
assert ((Topol.topol [(6, [3]); (5, []); (9, [5; 3; 0; 4; 5; 5; 3; 0])] = [6; 9; 4; 0; 3; 5]) );
assert ((Topol.topol [(3, [1; 4; 4; 1; 1; 2])] = [3; 2; 4; 1]) );
assert ((Topol.topol [(8, [6; 2]); (4, []); (4, [0; 2; 3]); (1, [6; 0; 0; 5; 7])] = [8; 4; 1; 3; 2; 7; 5; 0; 6]) );
assert ((Topol.topol [(5, []); (6, [0; 3; 9; 7])] = [5; 6; 7; 9; 3; 0]) );
assert ((Topol.topol [(6, [3; 5; 0; 7; 8; 2]); (6, [7; 0; 3; 4; 5; 1; 3; 4; 3]); (5, [])] = [6; 1; 4; 2; 8; 7; 0; 5; 3]) );
assert ((Topol.topol [(7, [3; 4; 9; 9; 8; 4; 6; 3; 1]); (7, [0]); (9, [])] = [7; 0; 1; 6; 8; 9; 4; 3]) );
assert ((Topol.topol [(4, [1])] = [4; 1]) );
assert ((Topol.topol [(4, [5]); (5, [6; 0; 6; 7])] = [4; 5; 7; 0; 6]) );
assert ((Topol.topol [(0, []); (0, [4; 2]); (7, [2; 6])] = [0; 7; 4; 6; 2]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(8, [1; 5; 5; 6]); (0, [8; 1]); (4, [8]); (9, [])] = [0; 4; 9; 8; 6; 5; 1]) );
assert ((Topol.topol [(8, [3; 5; 3; 0; 1; 7]); (1, [])] = [8; 7; 1; 0; 5; 3]) );
assert ((Topol.topol [(4, [0; 5; 8; 3; 0; 2]); (5, [1]); (4, [9; 1; 7; 1])] = [4; 7; 9; 2; 3; 8; 5; 0; 1]) );
assert ((Topol.topol [(9, [3; 3; 3]); (5, [9; 9; 6]); (4, [1; 0; 1; 6; 1; 5; 0])] = [4; 5; 0; 1; 6; 9; 3]) );
assert ((Topol.topol [(4, [9]); (2, [0])] = [4; 2; 9; 0]) );
assert ((Topol.topol [(5, []); (6, [7]); (2, [7]); (9, [2; 0; 4])] = [5; 6; 9; 4; 0; 2; 7]) );
assert ((Topol.topol [(3, []); (4, [1; 0])] = [3; 4; 0; 1]) );
assert ((Topol.topol [(5, [8; 3; 0]); (7, [8; 6; 2]); (6, [5; 8; 4; 5; 5])] = [7; 2; 6; 4; 5; 0; 3; 8]) );
assert ((Topol.topol [(8, [9; 1])] = [8; 1; 9]) );
assert ((Topol.topol [(9, [3; 8; 3]); (7, []); (8, [5; 4; 7])] = [9; 8; 3; 7; 4; 5]) );
assert ((Topol.topol [(6, [3])] = [6; 3]) );
assert ((Topol.topol [(6, [7; 9; 0]); (8, [1; 5; 9; 6; 4; 4])] = [8; 4; 6; 5; 1; 0; 9; 7]) );
assert ((Topol.topol [(0, [2])] = [0; 2]) );
assert ((Topol.topol [(2, [6])] = [2; 6]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(3, [5])] = [3; 5]) );
assert ((Topol.topol [(9, [3])] = [9; 3]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(5, [8; 0; 6; 9; 0; 7])] = [5; 7; 9; 6; 0; 8]) );
assert ((Topol.topol [(5, [7; 1; 6; 9; 9; 3])] = [5; 3; 9; 6; 1; 7]) );
assert ((Topol.topol [(2, [8])] = [2; 8]) );
assert ((Topol.topol [(2, [9; 6]); (8, [0; 3; 1; 5; 7; 3])] = [2; 8; 6; 9; 7; 5; 1; 3; 0]) );
assert ((Topol.topol [(5, [4; 3; 4; 1])] = [5; 1; 3; 4]) );
assert ((Topol.topol [(7, [0; 0; 5; 9; 9; 4; 8; 9])] = [7; 8; 4; 9; 5; 0]) );
assert ((Topol.topol [(6, [5; 3; 1])] = [6; 1; 3; 5]) );
assert ((Topol.topol [(1, [9; 7; 8; 6; 5; 6]); (7, [6; 4])] = [1; 5; 8; 7; 9; 4; 6]) );
assert ((Topol.topol [(8, [7; 6; 6; 7])] = [8; 6; 7]) );
assert ((Topol.topol [(6, [3])] = [6; 3]) );
assert ((Topol.topol [(0, [4])] = [0; 4]) );
assert ((Topol.topol [(8, [0; 4; 3; 3; 6; 9; 0])] = [8; 9; 6; 3; 4; 0]) );
assert ((Topol.topol [(6, [5; 8; 5; 0; 1; 1])] = [6; 1; 0; 8; 5]) );
assert ((Topol.topol [(5, [3; 2]); (4, [5])] = [4; 5; 2; 3]) );
assert ((Topol.topol [(5, [8; 1; 0; 8]); (2, [5; 3; 0; 3])] = [2; 3; 5; 0; 1; 8]) );
assert ((Topol.topol [(8, [1; 5; 6]); (2, [3]); (6, [9; 0])] = [8; 2; 6; 5; 1; 3; 0; 9]) );
assert ((Topol.topol [(2, [4])] = [2; 4]) );
assert ((Topol.topol [(9, [6]); (7, [3; 3; 4]); (9, [0])] = [9; 7; 0; 6; 4; 3]) );
assert ((Topol.topol [(6, []); (6, [5; 1; 4; 3])] = [6; 3; 4; 1; 5]) );
assert ((Topol.topol [(7, [0; 6]); (9, [1; 2; 5; 1])] = [7; 9; 6; 0; 5; 2; 1]) );
assert ((Topol.topol [(2, [1; 0; 4; 1; 5])] = [2; 5; 4; 0; 1]) );
assert ((Topol.topol [(2, [5])] = [2; 5]) );
assert ((Topol.topol [(4, [7; 5; 3; 1])] = [4; 1; 3; 5; 7]) );
assert ((Topol.topol [(0, [9; 4]); (5, [8; 1]); (2, [7; 7; 6; 1; 6])] = [0; 5; 2; 4; 9; 8; 1; 6; 7]) );
assert ((Topol.topol [(6, [9; 5; 2; 5; 4; 1; 3; 4]); (8, [])] = [6; 8; 3; 1; 4; 2; 5; 9]) );
assert ((Topol.topol [(8, [5])] = [8; 5]) );
assert ((Topol.topol [(5, [4]); (7, [4; 9; 1; 2])] = [5; 7; 2; 1; 9; 4]) );
assert ((Topol.topol [(9, [2; 2; 8; 2; 3; 7; 6; 3]); (3, [1]); (9, [6; 0; 2; 0; 3; 7]); (4, [3; 2; 9; 0])] = [4; 9; 0; 6; 7; 3; 8; 2; 1]) );
assert ((Topol.topol [(1, [6]); (1, [4; 2; 3; 4]); (8, [0; 7; 7; 5]); (8, [4; 3; 7; 5; 2; 9])] = [1; 8; 6; 9; 2; 3; 4; 5; 7; 0]) );
assert ((Topol.topol [(7, [8; 2; 4; 3; 3; 8; 8]); (3, [9])] = [7; 3; 4; 2; 8; 9]) );
assert ((Topol.topol [(1, [9; 7]); (6, [0; 7; 0; 7; 1; 3; 5])] = [6; 5; 3; 1; 0; 7; 9]) );
assert ((Topol.topol [(9, [3; 4; 1; 2])] = [9; 2; 1; 4; 3]) );
assert ((Topol.topol [(5, [6; 6; 6; 8]); (7, [3; 4; 6; 6]); (2, [6]); (0, [8; 9; 3])] = [5; 7; 2; 0; 4; 6; 3; 9; 8]) );
assert ((Topol.topol [(2, []); (6, []); (8, [4; 0; 9; 4; 9]); (2, [])] = [2; 6; 8; 9; 0; 4]) );
assert ((Topol.topol [(1, [2; 5]); (5, [4; 3])] = [1; 5; 2; 3; 4]) );
assert ((Topol.topol [(1, [2; 6]); (6, [8; 0; 4])] = [1; 6; 2; 4; 0; 8]) );
assert ((Topol.topol [(2, [9; 5; 8; 8; 5; 6])] = [2; 6; 8; 5; 9]) );
assert ((Topol.topol [(5, [4; 0; 9; 1; 0; 6]); (2, [6; 3; 6; 9; 0]); (5, [4])] = [5; 2; 1; 4; 0; 9; 3; 6]) );
assert ((Topol.topol [(1, [4; 0; 3; 2])] = [1; 2; 3; 0; 4]) );
assert ((Topol.topol [(8, [3; 3; 2; 4; 6]); (1, [7; 9; 9; 7; 0; 4; 6; 9; 4]); (6, [4; 4; 0; 0])] = [8; 1; 2; 3; 6; 9; 7; 0; 4]) );
assert ((Topol.topol [(6, [1])] = [6; 1]) );
assert ((Topol.topol [(1, [4; 3; 4; 6; 7; 5; 4; 3])] = [1; 5; 7; 6; 3; 4]) );
assert ((Topol.topol [(5, [2; 1; 7; 3; 4; 3; 2; 3])] = [5; 4; 3; 7; 1; 2]) );
assert ((Topol.topol [(2, [7; 9; 4; 7; 4; 9])] = [2; 4; 9; 7]) );
assert ((Topol.topol [(7, []); (2, [5; 3])] = [7; 2; 3; 5]) );
assert ((Topol.topol [(6, [1; 8; 2; 7; 8])] = [6; 7; 2; 8; 1]) );
assert ((Topol.topol [(8, [4; 4; 0; 6; 1]); (8, [])] = [8; 1; 6; 0; 4]) );
assert ((Topol.topol [(5, []); (4, [0; 8; 5])] = [4; 5; 8; 0]) );
assert ((Topol.topol [(9, []); (7, [2; 5])] = [9; 7; 5; 2]) );
assert ((Topol.topol [(8, [5])] = [8; 5]) );
assert ((Topol.topol [(2, [5; 3; 7; 7; 5; 3; 9; 0])] = [2; 0; 9; 7; 3; 5]) );
assert ((Topol.topol [(5, [3; 7])] = [5; 7; 3]) );
assert ((Topol.topol [(8, [3; 1; 9])] = [8; 9; 1; 3]) );
assert ((Topol.topol [(8, [9; 5; 9; 2; 1; 7]); (0, [8; 6])] = [0; 6; 8; 7; 1; 2; 5; 9]) );
assert ((Topol.topol [(5, [2; 4; 0; 7; 4; 9; 8]); (1, [8])] = [5; 1; 9; 7; 0; 4; 2; 8]) );
assert ((Topol.topol [(3, [9; 1; 9; 4; 2]); (9, [0; 0; 0; 8; 0])] = [3; 2; 4; 1; 9; 8; 0]) );
assert ((Topol.topol [(0, [4; 1; 1; 5; 2]); (8, [5; 6; 1; 2])] = [0; 8; 4; 2; 1; 6; 5]) );
assert ((Topol.topol [(2, [5; 3; 9; 9; 6; 5])] = [2; 6; 9; 3; 5]) );
assert ((Topol.topol [(5, [8; 3; 4; 8; 7; 2; 1; 9]); (3, [9; 9; 4; 7; 2; 9; 6; 8; 0])] = [5; 1; 3; 0; 8; 6; 2; 7; 4; 9]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(3, [7; 6; 7]); (1, [9])] = [3; 1; 6; 7; 9]) );
assert ((Topol.topol [(0, [1; 7; 4; 8; 9; 1; 5; 1; 6])] = [0; 6; 5; 9; 8; 4; 7; 1]) );
assert ((Topol.topol [(5, [0; 1; 9; 6; 7; 4; 6; 7; 1])] = [5; 4; 7; 6; 9; 1; 0]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(4, [1]); (9, [3]); (6, [3; 7; 8; 5; 1; 3]); (3, [8; 4; 0]); (0, [])] = [9; 6; 5; 7; 3; 0; 4; 8; 1]) );
assert ((Topol.topol [(7, []); (7, [0; 9; 3]); (2, [4; 1; 3; 1; 8; 5; 7]); (4, [3])] = [2; 7; 5; 8; 1; 4; 9; 0; 3]) );
assert ((Topol.topol [(3, [7; 5; 5; 2])] = [3; 2; 5; 7]) );
assert ((Topol.topol [(0, [2; 9; 5])] = [0; 5; 9; 2]) );
assert ((Topol.topol [(4, [6; 2; 8]); (0, [])] = [4; 0; 8; 2; 6]) );
assert ((Topol.topol [(3, [2; 7; 7]); (8, []); (2, []); (9, [6; 0; 2])] = [3; 8; 9; 7; 2; 0; 6]) );
assert ((Topol.topol [(9, [3; 7; 0]); (5, [2]); (0, [6; 3; 4])] = [9; 5; 0; 7; 2; 4; 3; 6]) );
assert ((Topol.topol [(9, [3; 2]); (8, [6; 4; 2; 0])] = [9; 8; 3; 0; 2; 4; 6]) );
assert ((Topol.topol [(7, [6; 0; 2; 5; 2]); (7, [4])] = [7; 4; 5; 2; 0; 6]) );
assert ((Topol.topol [(2, [7; 3; 4; 6; 6; 5; 7; 3; 3]); (1, []); (0, [3; 1])] = [2; 0; 5; 6; 4; 7; 1; 3]) );
assert ((Topol.topol [(9, [1; 7; 5])] = [9; 5; 7; 1]) );
assert ((Topol.topol [(4, [8; 2; 7; 7; 7; 2; 5; 8])] = [4; 5; 7; 2; 8]) );
assert ((Topol.topol [(0, [6; 2; 2])] = [0; 2; 6]) );
assert ((Topol.topol [(5, [2; 9; 9; 4]); (8, [0]); (7, [2; 9])] = [5; 8; 7; 4; 0; 9; 2]) );
assert ((Topol.topol [(5, [6; 8]); (8, [9; 7; 2])] = [5; 8; 6; 2; 7; 9]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(7, [5; 3; 3; 1; 9; 5; 5])] = [7; 9; 1; 3; 5]) );
assert ((Topol.topol [(3, [6; 5])] = [3; 5; 6]) );
assert ((Topol.topol [(6, [1; 9]); (8, [5; 4; 3]); (0, [8]); (3, [])] = [6; 0; 9; 1; 8; 3; 4; 5]) );
assert ((Topol.topol [(2, [4; 3; 7; 3; 7]); (3, [4; 9; 9])] = [2; 7; 3; 9; 4]) );
assert ((Topol.topol [(4, [2; 5; 2; 5; 9; 7; 2; 7]); (2, []); (2, [0; 1; 6; 8; 7]); (7, [6; 3])] = [4; 9; 5; 2; 7; 8; 1; 0; 3; 6]) );
assert ((Topol.topol [(8, [5; 5; 3; 4; 5; 3; 1]); (9, [0; 7])] = [8; 9; 1; 4; 3; 5; 7; 0]) );
assert ((Topol.topol [(6, [0; 3; 0; 5; 3])] = [6; 5; 3; 0]) );
assert ((Topol.topol [(0, [2]); (4, [8; 2; 1; 5; 6]); (2, [9])] = [0; 4; 6; 5; 1; 2; 8; 9]) );
assert ((Topol.topol [(8, [7; 3; 9; 3; 0; 1; 3; 1; 3]); (4, []); (3, [9; 2; 1; 9; 1])] = [8; 4; 0; 3; 7; 1; 2; 9]) );
assert ((Topol.topol [(0, [3; 3; 9; 6; 1; 2; 3; 1; 8]); (5, [4; 0])] = [5; 0; 4; 8; 2; 1; 6; 9; 3]) );
assert ((Topol.topol [(7, [3; 5; 3]); (6, [5; 8])] = [7; 6; 3; 8; 5]) );
assert ((Topol.topol [(1, []); (9, [6; 3; 4; 6; 1; 7; 4; 3; 0]); (7, [2; 3; 0; 8; 6; 6]); (8, [4; 1; 1])] = [9; 7; 6; 8; 0; 3; 2; 1; 4]) );
assert ((Topol.topol [(1, [7]); (0, []); (2, [5; 7]); (1, [0; 5; 3]); (9, [8; 0; 3; 4; 8; 4])] = [1; 2; 9; 7; 5; 4; 3; 0; 8]) );
assert ((Topol.topol [(6, [4; 2; 5; 5; 2; 4; 3; 3; 9]); (4, [3; 8])] = [6; 9; 5; 2; 4; 8; 3]) );
assert ((Topol.topol [(8, [0])] = [8; 0]) );
assert ((Topol.topol [(6, [7; 2; 4; 5; 4; 3; 4; 1; 7])] = [6; 1; 3; 5; 4; 2; 7]) );
assert ((Topol.topol [(5, [2]); (2, [])] = [5; 2]) );
assert ((Topol.topol [(7, [5; 3; 5; 2; 2; 8])] = [7; 8; 2; 3; 5]) );
assert ((Topol.topol [(1, [7; 4; 7; 9]); (1, [8; 6; 2; 5; 4; 2; 3])] = [1; 3; 5; 2; 6; 8; 9; 4; 7]) );
assert ((Topol.topol [(2, [3; 7; 7; 9]); (4, [0; 3])] = [2; 4; 9; 7; 3; 0]) );
assert ((Topol.topol [(9, [2; 0]); (4, [0; 9; 8; 3; 2; 5])] = [4; 5; 3; 8; 9; 0; 2]) );
assert ((Topol.topol [(5, [4])] = [5; 4]) );
assert ((Topol.topol [(3, [6; 5; 1; 9; 0])] = [3; 0; 9; 1; 5; 6]) );
assert ((Topol.topol [(7, []); (1, [3; 6; 3; 5; 6])] = [7; 1; 5; 6; 3]) );
assert ((Topol.topol [(0, [4; 6; 5; 5; 2; 4; 6; 8; 4]); (9, [7; 3; 3; 4]); (3, [2; 6; 2; 2; 6])] = [0; 9; 8; 5; 4; 3; 7; 6; 2]) );
assert ((Topol.topol [(4, [1; 0; 5; 6; 9; 1; 9; 1; 7])] = [4; 7; 9; 6; 5; 0; 1]) );
assert ((Topol.topol [(7, [9; 0; 5; 2; 4; 5; 5]); (6, [7; 1]); (6, [1; 8; 2; 7; 1])] = [6; 8; 1; 7; 4; 2; 5; 0; 9]) );
assert ((Topol.topol [(4, [1; 7; 7; 2; 5; 3; 8; 5])] = [4; 8; 3; 5; 2; 7; 1]) );
assert ((Topol.topol [(3, [8; 4; 0; 7; 4; 8]); (8, [])] = [3; 7; 0; 4; 8]) );
assert ((Topol.topol [(7, [0; 3; 3; 0; 6; 3])] = [7; 6; 3; 0]) );
assert ((Topol.topol [(1, [0; 5; 6; 7; 5])] = [1; 7; 6; 5; 0]) );
assert ((Topol.topol [(5, [7; 7; 0; 7])] = [5; 0; 7]) );
assert ((Topol.topol [(5, [9; 6; 1; 4]); (1, []); (3, [8]); (9, [2; 6; 0; 1; 6])] = [5; 3; 4; 9; 8; 1; 0; 6; 2]) );
assert ((Topol.topol [(2, [6; 7; 1; 4; 0]); (7, [])] = [2; 0; 4; 1; 7; 6]) );
assert ((Topol.topol [(6, [7; 1; 9; 2]); (1, [8; 0]); (2, [0]); (0, [8; 8]); (7, [2; 0])] = [6; 9; 1; 7; 2; 0; 8]) );
assert ((Topol.topol [(7, [8; 1; 6; 9]); (9, [4]); (1, [2; 5; 9; 5; 9; 2; 0]); (8, [5])] = [7; 6; 1; 8; 0; 9; 2; 5; 4]) );
assert ((Topol.topol [(8, [6; 5; 6; 9; 4; 6; 0; 3]); (1, [0; 0; 4; 4]); (2, [3; 8; 3]); (1, [9; 8; 0; 5])] = [1; 2; 8; 3; 0; 4; 9; 5; 6]) );
assert ((Topol.topol [(9, []); (2, [5; 1; 0; 8]); (9, [5; 5; 0]); (3, [7; 2; 7; 9; 2; 7; 4]); (6, [3]); (4, [0; 9; 9; 0; 8; 0])] = [6; 3; 4; 2; 7; 9; 8; 1; 0; 5]) );
assert ((Topol.topol [(9, [8; 7; 0; 2; 3; 7; 8; 5])] = [9; 5; 3; 2; 0; 7; 8]) );
assert ((Topol.topol [(0, [9; 8; 6; 2; 3]); (3, [7; 2; 4])] = [0; 3; 6; 8; 9; 4; 2; 7]) );
assert ((Topol.topol [(3, [2; 6; 9; 8; 6; 6]); (6, [9; 1; 7; 1])] = [3; 8; 6; 2; 7; 1; 9]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(0, [7]); (8, [1; 1; 1]); (3, [7; 7; 9; 5; 2; 8])] = [0; 3; 8; 2; 5; 9; 7; 1]) );
assert ((Topol.topol [(4, []); (5, [7; 0; 8; 1; 7]); (4, [6; 7]); (5, [9])] = [4; 5; 6; 9; 1; 8; 0; 7]) );
assert ((Topol.topol [(0, [9; 8])] = [0; 8; 9]) );
assert ((Topol.topol [(8, [3; 7; 0; 5; 4]); (3, [6; 7; 0; 9; 1; 7]); (4, [9])] = [8; 4; 5; 3; 1; 9; 0; 7; 6]) );
assert ((Topol.topol [(0, [7; 6]); (8, [1; 9; 5; 9; 6; 9; 6; 7; 1])] = [0; 8; 7; 6; 5; 9; 1]) );
assert ((Topol.topol [(0, [6; 1; 4; 2; 7; 9; 2]); (7, [4; 1; 1])] = [0; 9; 7; 2; 6; 1; 4]) );
assert ((Topol.topol [(3, [9; 9; 0; 8]); (6, [2]); (2, [7; 0; 5; 0; 1; 0; 0; 7; 4]); (3, [7; 1; 4; 6; 2; 2; 8])] = [3; 6; 8; 9; 2; 4; 1; 5; 0; 7]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(6, [1; 1; 4; 3])] = [6; 3; 4; 1]) );
assert ((Topol.topol [(0, [2; 9; 6; 4; 5]); (7, [6; 6])] = [0; 7; 5; 4; 9; 2; 6]) );
assert ((Topol.topol [(9, []); (4, [1; 1; 0; 0])] = [9; 4; 0; 1]) );
assert ((Topol.topol [(0, [8; 7; 8; 3; 4; 6])] = [0; 6; 4; 3; 7; 8]) );
assert ((Topol.topol [(2, [3; 3; 1; 3; 4; 5])] = [2; 5; 4; 1; 3]) );
assert ((Topol.topol [(3, [4; 5; 4; 5; 5; 2]); (2, [4; 6]); (7, [5; 9; 0; 3; 4; 8]); (3, [5]); (2, [5])] = [7; 8; 3; 0; 9; 2; 5; 6; 4]) );
assert ((Topol.topol [(8, [3; 3]); (0, [7; 2; 8; 8; 6; 4])] = [0; 4; 6; 8; 2; 7; 3]) );
assert ((Topol.topol [(3, [1; 8; 5; 7; 5; 4; 4])] = [3; 4; 7; 5; 8; 1]) );
assert ((Topol.topol [(1, [0]); (3, []); (7, [2; 4; 0; 2; 2; 9; 8])] = [1; 3; 7; 8; 9; 0; 4; 2]) );
assert ((Topol.topol [(9, [1; 1; 8; 6; 6; 6]); (7, [8])] = [9; 7; 6; 1; 8]) );
assert ((Topol.topol [(8, [5; 0])] = [8; 0; 5]) );
assert ((Topol.topol [(0, [5; 7]); (8, [9])] = [0; 8; 7; 5; 9]) );
assert ((Topol.topol [(1, [3; 5; 8; 3])] = [1; 8; 5; 3]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(4, [9; 6; 6; 8; 8; 9; 8])] = [4; 8; 6; 9]) );
assert ((Topol.topol [(0, [7; 5]); (6, [1; 2; 9; 8; 8; 9; 9]); (8, [5; 1; 1; 2; 5])] = [0; 6; 7; 8; 9; 2; 1; 5]) );
assert ((Topol.topol [(1, [5; 3; 2; 2; 5])] = [1; 2; 3; 5]) );
assert ((Topol.topol [(8, []); (5, [6; 3; 1; 1; 4])] = [8; 5; 4; 1; 3; 6]) );
assert ((Topol.topol [(3, [1; 6; 5; 2; 9; 9; 9])] = [3; 9; 2; 5; 6; 1]) );
assert ((Topol.topol [(0, [2; 9; 2]); (8, [1; 5; 5; 2; 0; 1; 7; 7; 9]); (7, [4]); (1, [9]); (4, [5; 2; 0])] = [8; 7; 1; 4; 0; 5; 9; 2]) );
assert ((Topol.topol [(9, [0; 5; 4; 5; 6; 8]); (3, [6; 5; 8; 7; 1; 8]); (3, [7; 2]); (0, [4]); (9, [4]); (9, [7; 1])] = [9; 3; 0; 2; 1; 7; 8; 5; 6; 4]) );
assert ((Topol.topol [(9, [3])] = [9; 3]) );
assert ((Topol.topol [(4, [5; 1; 7; 1; 6; 2])] = [4; 2; 6; 7; 1; 5]) );
assert ((Topol.topol [(2, [5; 6; 3; 3; 7; 3; 1]); (6, [0; 4; 8])] = [2; 1; 7; 3; 6; 5; 8; 4; 0]) );
assert ((Topol.topol [(2, [9; 0]); (8, [5; 1; 7; 1])] = [2; 8; 0; 9; 7; 1; 5]) );
assert ((Topol.topol [(6, []); (3, []); (9, [4])] = [6; 3; 9; 4]) );
assert ((Topol.topol [(0, [3; 3; 8; 6; 7; 5; 4; 7])] = [0; 4; 5; 7; 6; 8; 3]) );
assert ((Topol.topol [(4, [6; 3; 8; 9; 9; 3]); (7, [0; 4]); (7, []); (3, [2]); (7, [8; 1; 6; 4; 1; 4; 4; 2; 9])] = [7; 1; 4; 0; 9; 8; 3; 6; 2]) );
assert ((Topol.topol [(0, []); (2, [8; 8])] = [0; 2; 8]) );
assert ((Topol.topol [(4, [5; 1; 0; 9])] = [4; 9; 0; 1; 5]) );
assert ((Topol.topol [(6, [7; 7; 9])] = [6; 9; 7]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(4, [0; 1; 5; 2; 9; 9]); (5, []); (6, [8; 8; 3; 2; 1; 0])] = [4; 6; 9; 5; 0; 1; 2; 3; 8]) );
assert ((Topol.topol [(3, [4; 5; 6; 7])] = [3; 7; 6; 5; 4]) );
assert ((Topol.topol [(9, [8; 2; 8; 4; 7])] = [9; 7; 4; 2; 8]) );
assert ((Topol.topol [(2, [9; 6; 1]); (7, [5; 6; 9; 2; 1]); (8, [7; 2])] = [8; 7; 2; 5; 1; 6; 9]) );
assert ((Topol.topol [(8, [7; 0; 3])] = [8; 3; 0; 7]) );
assert ((Topol.topol [(4, [3]); (1, [6])] = [4; 1; 3; 6]) );
assert ((Topol.topol [(3, []); (5, [3; 3; 4; 2; 2; 7; 7; 7; 1])] = [5; 1; 7; 2; 4; 3]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(1, [9; 8])] = [1; 8; 9]) );
assert ((Topol.topol [(6, [9; 1; 4; 1])] = [6; 4; 1; 9]) );
assert ((Topol.topol [(6, [2; 1; 3; 5; 5; 4; 4; 8]); (3, [5; 9; 7; 4; 0; 0]); (6, [7])] = [6; 8; 3; 1; 2; 0; 4; 7; 9; 5]) );
assert ((Topol.topol [(7, [1; 2; 0])] = [7; 0; 2; 1]) );
assert ((Topol.topol [(0, []); (9, [])] = [0; 9]) );
assert ((Topol.topol [(6, [0; 8; 2; 5; 1; 4; 5; 0; 5])] = [6; 4; 1; 5; 2; 8; 0]) );
assert ((Topol.topol [(1, [7]); (0, [3; 8; 5; 8; 3; 3])] = [1; 0; 7; 5; 8; 3]) );
assert ((Topol.topol [(2, [5; 4; 1; 1; 3]); (1, [6; 6; 0]); (9, [5; 8; 2]); (7, [1; 0; 1; 8; 9]); (0, [])] = [7; 9; 2; 8; 3; 1; 4; 5; 0; 6]) );
assert ((Topol.topol [(0, [8])] = [0; 8]) );
assert ((Topol.topol [(8, [6; 2; 9; 9; 5])] = [8; 5; 9; 2; 6]) );
assert ((Topol.topol [(5, [1; 7; 9; 7; 0; 8; 2; 6]); (4, [2; 0; 8; 8]); (3, [4; 8; 1; 0]); (3, [7; 9; 6])] = [5; 3; 6; 9; 7; 1; 4; 8; 0; 2]) );
assert ((Topol.topol [(3, [6; 9; 6; 7; 0; 7; 7]); (2, [8]); (0, []); (3, [2; 6; 1; 8; 5; 2; 0; 8; 1])] = [3; 5; 1; 2; 0; 7; 9; 6; 8]) );
assert ((Topol.topol [(5, [7; 9; 3; 7; 4]); (9, []); (1, [5; 2; 4; 4; 7])] = [1; 2; 5; 4; 3; 9; 7]) );
assert ((Topol.topol [(0, [5]); (2, [6; 6; 3; 0; 9]); (1, [7; 4; 8; 0])] = [2; 1; 9; 3; 6; 0; 8; 4; 7; 5]) );
assert ((Topol.topol [(3, [5; 2])] = [3; 2; 5]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(8, [9; 3; 4; 6]); (2, [1; 3; 7; 8; 6])] = [2; 8; 7; 1; 6; 4; 3; 9]) );
assert ((Topol.topol [(9, [7; 7])] = [9; 7]) );
assert ((Topol.topol [(6, [9; 9; 4; 5; 5; 4; 9])] = [6; 5; 4; 9]) );
assert ((Topol.topol [(3, [1; 4]); (8, [2; 3; 2; 6; 1; 6; 5; 4; 4]); (4, [6]); (2, [4; 4; 4])] = [8; 5; 3; 2; 1; 4; 6]) );
assert ((Topol.topol [(6, [1; 2; 3]); (4, [8; 7]); (1, [])] = [6; 4; 3; 2; 1; 7; 8]) );
assert ((Topol.topol [(9, [3; 8]); (0, [8; 8; 1; 3; 8; 7; 9; 6])] = [0; 6; 9; 7; 1; 8; 3]) );
assert ((Topol.topol [(0, [4; 1]); (3, [6; 9; 6; 6; 8]); (8, [4; 9; 0; 1; 2; 4; 0])] = [3; 8; 6; 2; 0; 9; 1; 4]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(0, [5; 6; 1; 7; 9; 1]); (2, [7]); (6, [2; 1; 2])] = [0; 9; 6; 5; 1; 2; 7]) );
assert ((Topol.topol [(2, []); (2, [0; 9; 5; 4; 1; 3; 5; 1])] = [2; 3; 1; 4; 5; 9; 0]) );
assert ((Topol.topol [(4, [])] = [4]) );
assert ((Topol.topol [(9, [7; 1])] = [9; 1; 7]) );
assert ((Topol.topol [(3, [9; 7; 1; 8]); (9, [5])] = [3; 8; 1; 7; 9; 5]) );
assert ((Topol.topol [(2, [1; 3; 0; 0])] = [2; 0; 3; 1]) );
assert ((Topol.topol [(5, [6; 2; 1; 0; 3; 7; 9; 7])] = [5; 9; 7; 3; 0; 1; 2; 6]) );
assert ((Topol.topol [(5, [1; 7; 9; 7; 2])] = [5; 2; 9; 7; 1]) );
assert ((Topol.topol [(2, [1; 6; 6; 4; 0; 0; 7; 0])] = [2; 7; 0; 4; 6; 1]) );
assert ((Topol.topol [(1, []); (0, [6]); (4, [3; 2; 2; 0; 3]); (1, [8; 0; 3])] = [1; 4; 8; 0; 2; 3; 6]) );
assert ((Topol.topol [(7, [3; 2; 3; 5])] = [7; 5; 2; 3]) );
assert ((Topol.topol [(3, [8; 2; 2; 7; 2; 1; 4; 1; 5]); (1, [6; 6; 5; 0; 0; 4; 7; 9; 5])] = [3; 1; 2; 8; 9; 7; 4; 0; 5; 6]) );
assert ((Topol.topol [(0, [3; 2; 4; 5; 7; 1; 9]); (6, [4; 2; 9; 3; 7; 4; 1; 1])] = [0; 6; 5; 1; 7; 3; 9; 2; 4]) );
assert ((Topol.topol [(8, [1; 4]); (7, [6; 8; 4; 1])] = [7; 8; 6; 4; 1]) );
assert ((Topol.topol [(2, [1; 5; 6]); (3, [4; 2; 8; 9; 8; 2; 0; 4]); (3, [5; 6; 1; 8; 1; 6; 8]); (5, [0; 6; 9])] = [3; 8; 2; 4; 5; 1; 9; 6; 0]) );
assert ((Topol.topol [(3, [2; 8; 1; 1; 2; 2; 1])] = [3; 1; 8; 2]) );
assert ((Topol.topol [(0, [7; 1; 7; 8; 2; 7]); (0, [1])] = [0; 2; 8; 1; 7]) );
assert ((Topol.topol [(3, [4; 0; 2])] = [3; 2; 0; 4]) );
assert ((Topol.topol [(3, [0]); (7, [4; 4; 5; 4; 1]); (9, [2])] = [3; 7; 9; 0; 1; 5; 4; 2]) );
assert ((Topol.topol [(7, [2; 8]); (6, [9; 7; 8])] = [6; 7; 9; 8; 2]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(6, [2]); (9, [1; 7; 8]); (9, [5])] = [6; 9; 2; 5; 8; 7; 1]) );
assert ((Topol.topol [(1, [3])] = [1; 3]) );
assert ((Topol.topol [(2, [5; 4; 3])] = [2; 3; 4; 5]) );
assert ((Topol.topol [(3, []); (9, [1; 6; 3; 4; 3])] = [9; 4; 3; 6; 1]) );
assert ((Topol.topol [(8, []); (6, [1; 3; 8])] = [6; 8; 3; 1]) );
assert ((Topol.topol [(6, [9; 3; 3; 2]); (6, [7; 2; 1; 5; 8; 4; 1]); (0, []); (7, [8; 5]); (8, [])] = [6; 0; 4; 1; 7; 2; 3; 9; 5; 8]) );
assert ((Topol.topol [(2, [0; 1; 9; 5; 0; 8; 8; 0]); (4, [7; 8; 1; 9; 6; 7]); (6, [3; 5; 3])] = [2; 4; 0; 6; 9; 1; 8; 7; 5; 3]) );
assert ((Topol.topol [(7, [3; 8]); (5, [2; 1; 0; 4; 0])] = [7; 5; 8; 3; 4; 0; 1; 2]) );
assert ((Topol.topol [(6, []); (8, [9]); (9, [1; 4; 0; 0])] = [6; 8; 9; 0; 4; 1]) );
assert ((Topol.topol [(0, [9; 7; 6; 4; 4; 2; 2])] = [0; 2; 4; 6; 7; 9]) );
assert ((Topol.topol [(1, [9])] = [1; 9]) );
assert ((Topol.topol [(6, [4]); (2, [9; 9; 4; 3; 0])] = [6; 2; 0; 3; 4; 9]) );
assert ((Topol.topol [(9, [2; 4; 7])] = [9; 7; 4; 2]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(1, [2; 0; 0; 9; 9; 5; 2]); (7, [4; 3; 0; 4; 4; 0; 9; 1])] = [7; 1; 3; 4; 5; 9; 0; 2]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(3, [2; 4; 8; 2])] = [3; 8; 4; 2]) );
assert ((Topol.topol [(5, [8; 9; 6; 3; 4; 2; 4])] = [5; 2; 4; 3; 6; 9; 8]) );
assert ((Topol.topol [(3, [6; 6; 7; 1]); (3, [4; 4; 2; 5])] = [3; 5; 2; 4; 1; 7; 6]) );
assert ((Topol.topol [(7, [0; 8; 1; 8])] = [7; 1; 8; 0]) );
assert ((Topol.topol [(3, [7; 6; 0])] = [3; 0; 6; 7]) );
assert ((Topol.topol [(4, [1; 3; 8; 6; 9; 3]); (9, [5; 2])] = [4; 9; 6; 8; 3; 1; 2; 5]) );
assert ((Topol.topol [(4, []); (0, [3; 8; 3])] = [4; 0; 8; 3]) );
assert ((Topol.topol [(1, [5; 7]); (7, [5; 2; 2; 2; 9])] = [1; 7; 9; 2; 5]) );
assert ((Topol.topol [(4, [2]); (2, [8; 3; 5; 3]); (8, [5; 0]); (9, [7; 2; 2; 2; 4]); (3, [5; 8; 5; 5]); (7, [3; 8; 8]); (9, [0; 8; 8; 0; 8])] = [9; 4; 7; 2; 3; 8; 0; 5]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(0, [2; 1]); (3, [9; 4; 2; 8]); (4, [7; 6; 5; 1; 8; 9; 6])] = [0; 3; 2; 4; 9; 8; 1; 5; 6; 7]) );
assert ((Topol.topol [(9, [7; 7]); (6, [])] = [9; 6; 7]) );
assert ((Topol.topol [(9, []); (1, [])] = [9; 1]) );
assert ((Topol.topol [(9, [0; 2; 6; 5; 0; 2])] = [9; 5; 6; 2; 0]) );
assert ((Topol.topol [(5, []); (8, [2; 2; 6]); (1, [5]); (4, [])] = [8; 1; 4; 6; 2; 5]) );
assert ((Topol.topol [(1, [6; 6; 7; 9; 8; 7]); (8, [2; 5; 5]); (5, [4; 2])] = [1; 8; 9; 7; 6; 5; 2; 4]) );
assert ((Topol.topol [(5, [0; 1; 8]); (5, [8; 2; 3; 7; 9])] = [5; 9; 7; 3; 2; 8; 1; 0]) );
assert ((Topol.topol [(4, [7; 7; 3; 9; 3; 1; 7; 7; 1]); (4, [5; 0]); (9, [8]); (9, [6; 2; 3; 0; 3; 3; 1; 6; 5])] = [4; 9; 7; 5; 1; 0; 3; 2; 6; 8]) );
assert ((Topol.topol [(8, [7; 4; 0; 6; 3])] = [8; 3; 6; 0; 4; 7]) );
assert ((Topol.topol [(2, [7; 6; 0; 7]); (9, [])] = [2; 9; 0; 6; 7]) );
assert ((Topol.topol [(1, [6; 8; 5; 9])] = [1; 9; 5; 8; 6]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(7, [3; 4])] = [7; 4; 3]) );
assert ((Topol.topol [(4, [1; 9; 3; 0; 7; 1; 6]); (5, []); (9, [])] = [4; 5; 6; 7; 0; 3; 9; 1]) );
assert ((Topol.topol [(5, [0; 1; 4; 3; 4]); (7, [9; 4]); (6, [1; 1; 1; 0; 1]); (1, [8; 9; 2; 4; 8; 7])] = [5; 6; 3; 0; 1; 7; 2; 8; 4; 9]) );
assert ((Topol.topol [(0, [8])] = [0; 8]) );
assert ((Topol.topol [(6, [2]); (2, [3; 4; 4; 4; 8; 5; 8])] = [6; 2; 5; 8; 4; 3]) );
assert ((Topol.topol [(9, [2]); (6, [2; 1; 7; 5; 3; 0; 5; 7; 8])] = [9; 6; 8; 0; 3; 5; 7; 1; 2]) );
assert ((Topol.topol [(0, [5; 3]); (4, [7; 8; 5])] = [0; 4; 3; 5; 8; 7]) );
assert ((Topol.topol [(9, [0; 6; 8; 2; 5; 4])] = [9; 4; 5; 2; 8; 6; 0]) );
assert ((Topol.topol [(7, [5])] = [7; 5]) );
assert ((Topol.topol [(7, [4; 5; 9; 6])] = [7; 6; 9; 5; 4]) );
assert ((Topol.topol [(1, []); (1, [2; 6]); (2, [])] = [1; 6; 2]) );
assert ((Topol.topol [(1, [3]); (2, [8; 0; 1]); (7, [4; 1; 6; 0; 8; 2; 8; 0]); (5, [3]); (1, [5; 9; 9]); (8, [1; 9; 1]); (0, [])] = [7; 2; 6; 4; 0; 8; 1; 9; 5; 3]) );
assert ((Topol.topol [(9, [0; 5])] = [9; 5; 0]) );
assert ((Topol.topol [(4, [8; 5; 2; 1; 6; 1])] = [4; 6; 1; 2; 5; 8]) );
assert ((Topol.topol [(5, [1; 8; 4]); (5, [6; 8; 6; 0; 2; 9])] = [5; 9; 2; 0; 6; 4; 8; 1]) );
assert ((Topol.topol [(1, [5; 3; 2; 5; 9]); (8, [])] = [1; 8; 9; 2; 3; 5]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(8, [1; 9; 7; 3; 1; 1]); (1, [0; 7])] = [8; 3; 9; 1; 7; 0]) );
assert ((Topol.topol [(3, [8; 8; 7; 8; 6; 6; 4; 4])] = [3; 4; 6; 7; 8]) );
assert ((Topol.topol [(0, [5; 2; 6; 5; 8]); (5, [3; 2; 4; 7; 8; 3; 9; 4; 8])] = [0; 6; 5; 9; 8; 7; 4; 2; 3]) );
assert ((Topol.topol [(1, [2]); (6, [0; 7; 0; 7; 9])] = [1; 6; 2; 9; 7; 0]) );
assert ((Topol.topol [(2, [1; 3; 8])] = [2; 8; 3; 1]) );
assert ((Topol.topol [(4, [1; 9; 0; 7; 1; 5; 6])] = [4; 6; 5; 7; 0; 9; 1]) );
assert ((Topol.topol [(6, [9; 9; 0; 7])] = [6; 7; 0; 9]) );
assert ((Topol.topol [(5, [2; 8; 0])] = [5; 0; 8; 2]) );
assert ((Topol.topol [(0, [4])] = [0; 4]) );
assert ((Topol.topol [(5, [0])] = [5; 0]) );
assert ((Topol.topol [(7, [1; 1; 6; 1; 9])] = [7; 9; 6; 1]) );
assert ((Topol.topol [(7, [0; 8]); (1, [5])] = [7; 1; 8; 0; 5]) );
assert ((Topol.topol [(2, [5; 7; 5; 1; 7]); (7, [0; 5; 5]); (8, [5; 9; 3; 5; 2; 5; 2; 4])] = [8; 4; 2; 3; 9; 1; 7; 5; 0]) );
assert ((Topol.topol [(7, [4; 2])] = [7; 2; 4]) );
assert ((Topol.topol [(5, [1; 7; 6]); (9, [0; 8; 6; 4; 2; 4; 6; 7]); (4, [1; 5]); (9, [4; 7; 5; 5; 0; 1])] = [9; 2; 4; 8; 0; 5; 6; 7; 1]) );
assert ((Topol.topol [(8, [2])] = [8; 2]) );
assert ((Topol.topol [(8, [7; 6; 9; 1; 1; 2; 0; 3]); (0, [3])] = [8; 0; 2; 1; 9; 6; 7; 3]) );
assert ((Topol.topol [(6, [2; 5; 8; 9; 0; 3; 5; 8; 5]); (1, [7; 4; 2; 0; 8; 8; 4; 0])] = [6; 1; 3; 9; 5; 8; 0; 2; 4; 7]) );
assert ((Topol.topol [(0, [9; 4; 5; 5; 5; 7]); (7, [1; 9; 9; 2])] = [0; 7; 5; 4; 2; 9; 1]) );
assert ((Topol.topol [(2, [0; 9; 3]); (6, []); (6, [3])] = [2; 6; 9; 0; 3]) );
assert ((Topol.topol [(6, [2; 4; 2; 5; 4; 7; 5; 8; 1])] = [6; 1; 8; 7; 5; 4; 2]) );
assert ((Topol.topol [(3, [4; 7; 1; 9; 5; 7; 7; 5; 7]); (3, [8; 7]); (0, [8; 1; 7; 2])] = [3; 0; 5; 9; 4; 2; 7; 1; 8]) );
assert ((Topol.topol [(8, [0; 4])] = [8; 4; 0]) );
assert ((Topol.topol [(7, [3])] = [7; 3]) );
assert ((Topol.topol [(0, [8; 2]); (7, [0]); (9, [6]); (7, [5; 5])] = [7; 9; 5; 0; 6; 2; 8]) );
assert ((Topol.topol [(5, [0]); (1, [2; 2; 4])] = [5; 1; 0; 4; 2]) );
assert ((Topol.topol [(4, [5]); (3, [8]); (7, [9; 0])] = [4; 3; 7; 5; 8; 0; 9]) );
assert ((Topol.topol [(0, [7; 6; 4; 2; 2; 6])] = [0; 2; 4; 6; 7]) );
assert ((Topol.topol [(5, [8; 9; 8; 6]); (5, [7; 8; 0; 0; 9; 6; 9; 8; 6])] = [5; 0; 7; 6; 9; 8]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(9, [7; 8; 5; 7; 7; 2]); (6, [3; 3; 8; 7; 7; 5]); (2, [6; 1]); (1, [])] = [9; 2; 1; 6; 5; 7; 8; 3]) );
assert ((Topol.topol [(0, [8; 7; 2; 4; 6; 5; 8])] = [0; 5; 6; 4; 2; 7; 8]) );
assert ((Topol.topol [(6, [7; 5; 1; 5; 8]); (9, [0; 5; 4; 5; 0; 2; 2; 1])] = [6; 9; 8; 7; 1; 2; 4; 5; 0]) );
assert ((Topol.topol [(3, [4]); (7, [2; 1; 1; 9; 0])] = [3; 7; 4; 0; 9; 1; 2]) );
assert ((Topol.topol [(2, [6; 5])] = [2; 5; 6]) );
assert ((Topol.topol [(0, [1; 8; 3; 6; 1]); (8, []); (0, [3; 6; 8; 1; 7; 2; 7; 6])] = [0; 2; 7; 6; 3; 8; 1]) );
assert ((Topol.topol [(3, []); (5, [3; 4; 1; 8; 7; 0])] = [5; 0; 7; 8; 1; 4; 3]) );
assert ((Topol.topol [(3, [5; 0; 0; 8; 0]); (0, []); (8, [])] = [3; 8; 0; 5]) );
assert ((Topol.topol [(3, [6; 2; 6; 1; 2]); (8, [2; 2; 9])] = [3; 8; 1; 6; 9; 2]) );
assert ((Topol.topol [(1, [8; 5; 5; 8; 2; 9; 4; 8])] = [1; 4; 9; 2; 5; 8]) );
assert ((Topol.topol [(7, [8; 2; 3; 2])] = [7; 3; 2; 8]) );
assert ((Topol.topol [(2, [7; 3; 3; 0; 3; 4]); (1, [8; 3; 8; 0; 8; 4; 4])] = [2; 1; 7; 4; 0; 3; 8]) );
assert ((Topol.topol [(3, [6]); (3, [6; 5; 9; 9; 0]); (3, [6; 7]); (8, [6; 3; 1; 4; 5; 1; 9; 7])] = [8; 4; 1; 3; 7; 0; 9; 5; 6]) );
assert ((Topol.topol [(0, [8]); (0, [6; 3; 6; 3; 8; 3; 2]); (5, [1; 6; 6; 3])] = [0; 5; 2; 8; 3; 6; 1]) );
assert ((Topol.topol [(0, [8; 3])] = [0; 3; 8]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(5, [9; 4; 1; 9; 2; 0; 8]); (8, [1; 1; 2])] = [5; 8; 0; 4; 9; 2; 1]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(7, [2]); (8, [3; 9; 9; 1; 0; 6; 5])] = [7; 8; 2; 5; 6; 0; 1; 9; 3]) );
assert ((Topol.topol [(0, [4; 9; 3]); (9, [2; 3; 1])] = [0; 9; 4; 1; 3; 2]) );
assert ((Topol.topol [(7, [2; 0; 5; 1; 4; 4; 8; 1; 2]); (9, [6; 5; 6; 0]); (2, [9; 8; 0; 4; 4; 4])] = [7; 1; 2; 4; 8; 9; 0; 5; 6]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(1, [3; 7]); (6, [7; 3]); (4, [6; 0; 0; 6; 5; 6; 6; 6; 6])] = [1; 4; 5; 0; 6; 3; 7]) );
assert ((Topol.topol [(6, [4])] = [6; 4]) );
assert ((Topol.topol [(4, [7; 1; 8; 7; 2; 8; 6; 9; 8])] = [4; 9; 6; 2; 8; 1; 7]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(9, [5])] = [9; 5]) );
assert ((Topol.topol [(1, [5; 9; 2; 4; 2; 3; 6])] = [1; 6; 3; 4; 2; 9; 5]) );
assert ((Topol.topol [(0, [4; 5; 7; 4])] = [0; 7; 5; 4]) );
assert ((Topol.topol [(6, [5]); (3, [8; 7; 8])] = [6; 3; 5; 7; 8]) );
assert ((Topol.topol [(1, [2; 9; 0; 0; 2; 9]); (4, []); (0, [6; 5; 5; 8])] = [1; 4; 0; 9; 2; 8; 5; 6]) );
assert ((Topol.topol [(6, [2]); (1, [7; 6; 7])] = [1; 6; 7; 2]) );
assert ((Topol.topol [(3, [8; 7; 4; 4; 1; 9])] = [3; 9; 1; 4; 7; 8]) );
assert ((Topol.topol [(8, [6; 0; 2; 9; 0; 9; 0; 9; 3]); (7, [1; 2; 3]); (7, [0; 0; 4; 4; 5]); (0, [4; 9; 2])] = [8; 7; 6; 5; 0; 3; 1; 2; 9; 4]) );
assert ((Topol.topol [(5, [8; 9; 9; 4; 1; 2; 6; 1])] = [5; 6; 2; 1; 4; 9; 8]) );
assert ((Topol.topol [(1, [8])] = [1; 8]) );
assert ((Topol.topol [(5, [6; 7]); (2, [7; 9; 9; 8; 6; 5])] = [2; 5; 8; 9; 7; 6]) );
assert ((Topol.topol [(6, [8; 2; 7]); (0, [4; 5; 8; 9; 9; 5; 8; 1]); (5, [9; 4; 3; 1; 6; 9; 7; 6])] = [0; 5; 6; 1; 3; 4; 9; 7; 2; 8]) );
assert ((Topol.topol [(2, [6])] = [2; 6]) );
assert ((Topol.topol [(2, [1]); (3, [4; 5; 9]); (3, [8; 7])] = [2; 3; 1; 7; 8; 9; 5; 4]) );
assert ((Topol.topol [(7, [5]); (2, [4]); (4, [6; 1; 5])] = [7; 2; 4; 5; 1; 6]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(7, [0; 0; 1]); (4, [6; 7])] = [4; 7; 6; 1; 0]) );
assert ((Topol.topol [(5, [1; 6; 9; 9; 6; 7; 1]); (4, [3; 5; 7; 5; 0])] = [4; 0; 5; 3; 7; 9; 6; 1]) );
assert ((Topol.topol [(7, []); (3, [1; 5; 8; 4; 0])] = [7; 3; 0; 4; 8; 5; 1]) );
assert ((Topol.topol [(3, []); (0, [5; 4; 6; 8]); (0, [1; 9])] = [3; 0; 9; 1; 8; 6; 4; 5]) );
assert ((Topol.topol [(9, [2; 7])] = [9; 7; 2]) );
assert ((Topol.topol [(4, []); (2, [4]); (0, [2; 7; 3; 2; 4; 2; 5])] = [0; 5; 3; 7; 2; 4]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(4, [1; 6])] = [4; 6; 1]) );
assert ((Topol.topol [(3, [6; 2; 5; 6; 0; 8; 7; 5])] = [3; 7; 8; 0; 5; 2; 6]) );
assert ((Topol.topol [(0, [7; 4; 3; 3; 8])] = [0; 8; 3; 4; 7]) );
assert ((Topol.topol [(8, [1; 1; 1; 0; 1; 5]); (0, []); (9, [0; 8; 6; 1; 6]); (0, []); (6, []); (5, []); (7, [])] = [9; 7; 6; 8; 5; 0; 1]) );
assert ((Topol.topol [(6, [1; 4])] = [6; 4; 1]) );
assert ((Topol.topol [(1, [5; 3; 6; 9; 6; 7; 7]); (4, [6; 2; 3; 2]); (3, [6])] = [1; 4; 7; 9; 5; 3; 2; 6]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(4, [6; 9; 7; 6; 1; 2; 3; 3])] = [4; 3; 2; 1; 7; 9; 6]) );
assert ((Topol.topol [(9, [7; 7; 2; 3; 1; 6; 0; 8]); (5, []); (9, [0; 6; 1; 4])] = [9; 5; 4; 8; 0; 6; 1; 3; 2; 7]) );
assert ((Topol.topol [(2, [0; 7]); (4, [9]); (3, [9; 6; 6; 6])] = [2; 4; 3; 7; 0; 6; 9]) );
assert ((Topol.topol [(0, [4; 1; 3; 7; 9; 3; 5; 8]); (3, [])] = [0; 8; 5; 9; 7; 3; 1; 4]) );
assert ((Topol.topol [(3, []); (0, []); (0, [6; 4; 9; 4]); (2, [8]); (1, [9; 0; 6]); (0, [7]); (5, [7; 2; 0; 1])] = [3; 5; 1; 2; 0; 8; 7; 9; 4; 6]) );
assert ((Topol.topol [(9, [8]); (1, [])] = [9; 1; 8]) );
assert ((Topol.topol [(7, [4; 3])] = [7; 3; 4]) );
assert ((Topol.topol [(3, []); (3, []); (1, [0; 5; 5])] = [3; 1; 5; 0]) );
assert ((Topol.topol [(0, [8; 6; 9; 7; 9]); (9, [1; 5])] = [0; 7; 9; 6; 8; 5; 1]) );
assert ((Topol.topol [(1, [3; 0; 4; 2; 3; 2; 8; 4])] = [1; 8; 2; 4; 0; 3]) );
assert ((Topol.topol [(1, []); (7, [9; 9; 3; 4; 2]); (9, [])] = [1; 7; 2; 4; 3; 9]) );
assert ((Topol.topol [(3, [0; 0]); (6, [])] = [3; 6; 0]) );
assert ((Topol.topol [(6, [4])] = [6; 4]) );
assert ((Topol.topol [(1, [4; 7; 0; 5])] = [1; 5; 0; 7; 4]) );
assert ((Topol.topol [(4, []); (6, [2; 9; 1; 5; 5]); (1, []); (8, [2; 2; 9; 9; 1; 6])] = [4; 8; 6; 5; 1; 9; 2]) );
assert ((Topol.topol [(5, [4; 6]); (3, [9; 1; 6; 9; 1; 9; 5; 9; 7])] = [3; 7; 5; 1; 9; 6; 4]) );
assert ((Topol.topol [(4, [7; 3; 7; 9; 5; 9; 2; 9; 5])] = [4; 2; 5; 9; 3; 7]) );
assert ((Topol.topol [(9, [8])] = [9; 8]) );
assert ((Topol.topol [(7, [6; 9; 2; 0; 2; 0; 5; 1])] = [7; 1; 5; 0; 2; 9; 6]) );
assert ((Topol.topol [(0, [1; 5; 5; 9; 3; 5; 7])] = [0; 7; 3; 9; 5; 1]) );
assert ((Topol.topol [(6, []); (3, [6; 7; 1; 7; 6; 8; 4; 4])] = [3; 4; 8; 1; 7; 6]) );
assert ((Topol.topol [(9, [4; 6; 0; 3; 4]); (2, [9; 5; 6; 1]); (6, [3]); (6, [3])] = [2; 1; 5; 9; 0; 6; 4; 3]) );
assert ((Topol.topol [(3, [5; 9; 6; 4]); (4, [0]); (0, [1; 5; 7; 9; 6])] = [3; 4; 0; 6; 9; 7; 5; 1]) );
assert ((Topol.topol [(5, [1; 8; 9; 3; 3])] = [5; 3; 9; 8; 1]) );
assert ((Topol.topol [(2, [6; 0; 7]); (9, [1; 1; 3; 8; 3])] = [2; 9; 7; 0; 6; 8; 3; 1]) );
assert ((Topol.topol [(2, [9; 4; 3]); (7, []); (1, [3; 0; 2; 4])] = [7; 1; 2; 0; 3; 4; 9]) );
assert ((Topol.topol [(2, [7])] = [2; 7]) );
assert ((Topol.topol [(8, [2; 2; 5; 1; 3; 6]); (7, [1; 1; 8])] = [7; 8; 6; 3; 1; 5; 2]) );
assert ((Topol.topol [(7, [])] = [7]) );
assert ((Topol.topol [(7, [8]); (7, [3; 1; 8; 9])] = [7; 9; 1; 3; 8]) );
assert ((Topol.topol [(0, [7; 5; 8; 3; 3; 2]); (0, [2; 5; 7; 9]); (8, [7; 7])] = [0; 9; 2; 3; 8; 5; 7]) );
assert ((Topol.topol [(7, []); (1, [0; 9; 0; 2; 9; 3])] = [7; 1; 3; 2; 9; 0]) );
assert ((Topol.topol [(5, [])] = [5]) );
assert ((Topol.topol [(5, [7; 3; 8]); (7, [3; 4; 4; 2; 2; 9; 8; 1]); (4, []); (0, [4]); (2, [])] = [5; 0; 7; 1; 8; 9; 2; 4; 3]) );
assert ((Topol.topol [(2, [0; 7; 4; 6; 7])] = [2; 6; 4; 7; 0]) );
assert ((Topol.topol [(6, [0; 1; 7; 0; 7])] = [6; 7; 1; 0]) );
assert ((Topol.topol [(4, [6; 8; 1; 8; 6; 7; 5; 5]); (5, [8; 7; 1; 6]); (4, [5; 1; 7; 1]); (4, [8; 8; 5; 3; 3])] = [4; 3; 5; 6; 1; 7; 8]) );
assert ((Topol.topol [(9, []); (9, [3; 1]); (5, [1; 0])] = [9; 5; 3; 0; 1]) );
assert ((Topol.topol [(0, [4; 3; 8; 5; 7])] = [0; 7; 5; 8; 3; 4]) );
assert ((Topol.topol [(3, []); (1, [7; 5; 5; 7; 9; 3; 4; 8; 3]); (7, [8]); (9, [3; 5; 2; 8; 6])] = [1; 4; 9; 7; 6; 2; 5; 3; 8]) );
assert ((Topol.topol [(4, [6; 6; 5; 0; 5; 7; 7])] = [4; 7; 0; 5; 6]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(0, [6; 5; 1; 3])] = [0; 3; 1; 5; 6]) );
assert ((Topol.topol [(0, [3; 6; 9; 1; 7])] = [0; 7; 1; 9; 6; 3]) );
assert ((Topol.topol [(3, [1; 0])] = [3; 0; 1]) );
assert ((Topol.topol [(9, [6])] = [9; 6]) );
assert ((Topol.topol [(4, [0]); (7, [5; 9; 8]); (6, [])] = [4; 7; 6; 0; 8; 9; 5]) );
assert ((Topol.topol [(5, [6; 6; 7; 4; 7; 2; 4; 3])] = [5; 3; 2; 4; 7; 6]) );
assert ((Topol.topol [(3, []); (7, [8; 5; 4; 3; 6; 0; 4; 0; 8]); (0, [6; 6])] = [7; 0; 3; 4; 5; 8; 6]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(7, [5; 6; 4; 6; 8; 0])] = [7; 0; 8; 4; 6; 5]) );
assert ((Topol.topol [(9, [0; 1; 4; 7])] = [9; 7; 4; 1; 0]) );
assert ((Topol.topol [(1, [6; 2; 0; 9; 5; 6]); (7, [3]); (0, [5; 8; 9; 8; 9; 7; 7; 5; 5]); (5, []); (0, [3; 9; 6])] = [1; 0; 2; 6; 7; 9; 8; 5; 3]) );
assert ((Topol.topol [(0, [3; 1; 5; 4; 9; 7; 5; 2; 7])] = [0; 2; 7; 9; 4; 5; 1; 3]) );
assert ((Topol.topol [(2, [5; 0; 9; 6; 6; 5; 5; 9]); (8, [4; 2; 0; 1]); (1, [7]); (7, [])] = [8; 1; 2; 4; 7; 6; 9; 0; 5]) );
assert ((Topol.topol [(8, [7]); (6, [7; 0; 0])] = [8; 6; 0; 7]) );
assert ((Topol.topol [(2, []); (6, [0; 5; 2; 5; 4; 1; 9; 1]); (6, [1; 0; 4; 3]); (7, [4; 3; 2; 9]); (2, [4; 4]); (0, [7])] = [6; 1; 5; 0; 7; 9; 2; 3; 4]) );
assert ((Topol.topol [(0, [5; 8]); (0, [8; 3; 3; 4; 3; 4; 9; 8; 3]); (5, [7; 8]); (1, [7; 5; 2; 7; 5])] = [0; 1; 9; 4; 3; 2; 5; 8; 7]) );
assert ((Topol.topol [(5, [7; 4])] = [5; 4; 7]) );
assert ((Topol.topol [(7, [6]); (9, [2; 4]); (6, [4; 0; 2]); (8, [7])] = [9; 8; 7; 6; 2; 0; 4]) );
assert ((Topol.topol [(3, [8; 9; 1; 9; 4; 6; 8; 5])] = [3; 5; 6; 4; 1; 9; 8]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(8, [6]); (7, [8])] = [7; 8; 6]) );
assert ((Topol.topol [(8, [2; 3; 3; 7; 1; 5]); (0, [9; 7; 2; 5; 7; 2])] = [8; 0; 1; 3; 5; 2; 7; 9]) );
assert ((Topol.topol [(1, [4; 2])] = [1; 2; 4]) );
assert ((Topol.topol [(6, [8]); (5, [1; 6; 4; 1; 0; 8]); (6, [])] = [5; 0; 4; 6; 1; 8]) );
assert ((Topol.topol [(0, [1; 1; 3]); (7, [9; 5; 5; 4; 0; 6; 4; 9])] = [7; 6; 0; 4; 5; 9; 3; 1]) );
assert ((Topol.topol [(1, [9; 6; 9; 9; 4; 6; 3]); (0, [2; 3; 5])] = [1; 0; 4; 6; 9; 5; 3; 2]) );
assert ((Topol.topol [(3, [1; 1; 7; 9; 7; 5]); (0, [6; 6; 4; 4]); (2, [4; 4; 7; 3; 8; 8; 6; 1; 7])] = [0; 2; 6; 8; 3; 4; 5; 9; 7; 1]) );
assert ((Topol.topol [(9, [1; 5])] = [9; 5; 1]) );
assert ((Topol.topol [(7, [5])] = [7; 5]) );
assert ((Topol.topol [(6, [8; 1; 8; 8]); (3, [2; 0; 6; 1])] = [3; 6; 0; 2; 1; 8]) );
assert ((Topol.topol [(9, [0; 8; 7; 4])] = [9; 4; 7; 8; 0]) );
assert ((Topol.topol [(4, [8; 2; 5; 9; 1; 0; 8]); (5, [9; 2]); (7, [])] = [4; 7; 0; 1; 5; 8; 2; 9]) );
assert ((Topol.topol [(9, [7; 6; 8; 3; 8; 4]); (1, [2; 3; 2; 6])] = [9; 1; 4; 8; 7; 6; 3; 2]) );
assert ((Topol.topol [(4, [6]); (2, []); (5, []); (3, [9; 5; 5; 4; 1; 2]); (8, []); (7, [5; 6; 6; 2])] = [3; 8; 7; 1; 4; 9; 2; 5; 6]) );
assert ((Topol.topol [(4, [8; 1; 1; 6; 9; 7]); (3, [9; 9; 2; 9; 0])] = [4; 3; 7; 6; 1; 8; 0; 2; 9]) );
assert ((Topol.topol [(7, []); (1, []); (7, [0; 3; 8; 3; 8; 9; 4; 6; 0]); (0, [])] = [7; 1; 6; 4; 9; 8; 3; 0]) );
assert ((Topol.topol [(9, [0; 0; 0; 8; 3; 5; 3; 5]); (7, [3; 5; 9; 8]); (7, [6; 3; 6; 5; 6])] = [7; 6; 9; 5; 3; 8; 0]) );
assert ((Topol.topol [(4, []); (7, [9])] = [4; 7; 9]) );
assert ((Topol.topol [(9, [8; 3]); (2, [5; 6])] = [9; 2; 3; 8; 6; 5]) );
assert ((Topol.topol [(7, []); (8, [3; 3; 6; 4])] = [7; 8; 4; 6; 3]) );
assert ((Topol.topol [(6, [8; 9]); (2, [1; 9])] = [6; 2; 8; 9; 1]) );
assert ((Topol.topol [(3, [4; 5; 7]); (0, [1; 6; 7; 3; 4; 5])] = [0; 3; 6; 1; 7; 5; 4]) );
assert ((Topol.topol [(3, [9; 0])] = [3; 0; 9]) );
assert ((Topol.topol [(4, [8; 6; 0])] = [4; 0; 6; 8]) );
assert ((Topol.topol [(0, [1; 3; 6; 7; 5])] = [0; 5; 7; 6; 3; 1]) );
assert ((Topol.topol [(4, [0; 9; 3; 7; 2; 9; 1]); (5, [1; 3; 2; 3; 7])] = [4; 5; 9; 0; 7; 2; 3; 1]) );
assert ((Topol.topol [(2, [0; 6; 0; 7; 5; 5]); (8, [0; 1; 4]); (3, [7; 2; 8; 0; 1]); (0, []); (2, [4; 4; 7])] = [3; 8; 2; 1; 4; 5; 7; 6; 0]) );
assert ((Topol.topol [(2, [1]); (2, [3; 3]); (8, [])] = [2; 8; 3; 1]) );
assert ((Topol.topol [(8, [6]); (0, [6; 4; 8; 1; 1; 3; 1])] = [0; 3; 1; 8; 4; 6]) );
assert ((Topol.topol [(4, [8; 6; 3; 3; 5; 1]); (4, [6; 7; 6; 8; 0])] = [4; 0; 7; 1; 5; 3; 6; 8]) );
assert ((Topol.topol [(9, [5; 4; 6; 3; 6; 8; 0])] = [9; 0; 8; 3; 6; 4; 5]) );
assert ((Topol.topol [(8, []); (8, [3; 6; 1; 2; 5]); (9, [2; 6; 2; 0; 0; 4; 3]); (8, [3; 7])] = [8; 9; 7; 5; 1; 3; 4; 0; 6; 2]) );
assert ((Topol.topol [(4, [9; 6; 6; 7; 0; 3; 7; 1; 0]); (1, [])] = [4; 1; 3; 0; 7; 6; 9]) );
assert ((Topol.topol [(4, [9; 0; 9; 6; 9; 2; 1; 8; 7])] = [4; 7; 8; 1; 2; 6; 0; 9]) );
assert ((Topol.topol [(3, [1; 9]); (7, [0; 4])] = [3; 7; 9; 1; 4; 0]) );
assert ((Topol.topol [(3, [8; 0; 8; 0; 7; 7])] = [3; 7; 0; 8]) );
assert ((Topol.topol [(9, [5; 3; 4; 7; 7]); (3, [0; 6; 6; 5; 1; 5; 6]); (2, [0; 5])] = [9; 2; 7; 4; 3; 1; 5; 6; 0]) );
assert ((Topol.topol [(0, [4; 7])] = [0; 7; 4]) );
assert ((Topol.topol [(6, [7; 1; 2; 7]); (8, [4; 2; 3; 1; 4; 3; 5; 0; 2])] = [6; 8; 7; 0; 5; 1; 3; 2; 4]) );
assert ((Topol.topol [(3, [1; 5; 6; 6; 6; 7; 4])] = [3; 4; 7; 6; 5; 1]) );
assert ((Topol.topol [(6, [2; 0; 1]); (5, [8; 4; 3; 4; 4; 7; 0; 4; 1]); (4, []); (5, [7])] = [6; 5; 2; 1; 0; 7; 3; 4; 8]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(2, [0])] = [2; 0]) );
assert ((Topol.topol [(2, [9; 3; 0])] = [2; 0; 3; 9]) );
assert ((Topol.topol [(0, [6; 4; 3; 9]); (1, [9; 7; 2; 7]); (1, [])] = [0; 1; 3; 4; 6; 2; 7; 9]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(3, [1; 8; 7])] = [3; 7; 8; 1]) );
assert ((Topol.topol [(3, [0; 5; 9; 2; 0; 1; 1; 7])] = [3; 7; 1; 2; 9; 5; 0]) );
assert ((Topol.topol [(9, [7; 8; 2])] = [9; 2; 8; 7]) );
assert ((Topol.topol [(3, [7; 9; 2; 4; 4; 4; 5]); (1, [6])] = [3; 1; 5; 4; 2; 9; 7; 6]) );
assert ((Topol.topol [(4, [8; 0; 3; 5]); (6, [7; 2; 1; 9; 0; 1; 1; 8]); (7, [1; 0])] = [4; 6; 5; 3; 8; 9; 2; 7; 0; 1]) );
assert ((Topol.topol [(1, [2]); (6, [0; 4; 3])] = [1; 6; 2; 3; 4; 0]) );
assert ((Topol.topol [(8, [0; 4; 4; 1; 2; 0; 4; 5])] = [8; 5; 2; 1; 4; 0]) );
assert ((Topol.topol [(3, [9])] = [3; 9]) );
assert ((Topol.topol [(4, [8; 9])] = [4; 9; 8]) );
assert ((Topol.topol [(1, [9; 8; 9])] = [1; 8; 9]) );
assert ((Topol.topol [(3, [4; 2; 0; 4; 4; 1; 9; 7; 0])] = [3; 7; 9; 1; 0; 2; 4]) );
assert ((Topol.topol [(2, [4; 9; 9; 6]); (1, []); (7, [0])] = [2; 1; 7; 6; 9; 4; 0]) );
assert ((Topol.topol [(6, [2; 3])] = [6; 3; 2]) );
assert ((Topol.topol [(3, [2; 1; 6; 8; 1; 2; 8; 1])] = [3; 8; 6; 1; 2]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(7, []); (0, [8; 9; 4; 2; 2; 8; 4; 2; 2]); (7, [8; 9; 4]); (2, [6; 9; 1; 6; 4])] = [7; 0; 2; 8; 4; 1; 9; 6]) );
assert ((Topol.topol [(1, [6; 7; 5; 4; 5; 6; 9]); (2, [6])] = [1; 2; 9; 4; 5; 7; 6]) );
assert ((Topol.topol [(3, [4; 4; 1; 5; 9; 4])] = [3; 9; 5; 1; 4]) );
assert ((Topol.topol [(3, [5; 7]); (1, [])] = [3; 1; 7; 5]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(8, [])] = [8]) );
assert ((Topol.topol [(5, [8])] = [5; 8]) );
assert ((Topol.topol [(8, []); (7, [9; 0; 6; 3])] = [8; 7; 3; 6; 0; 9]) );
assert ((Topol.topol [(9, [5])] = [9; 5]) );
assert ((Topol.topol [(8, []); (6, [2; 2; 4; 9; 7; 9]); (2, [9; 3]); (4, [])] = [8; 6; 7; 4; 2; 3; 9]) );
assert ((Topol.topol [(1, [3; 8; 6]); (4, [3; 8]); (5, [4; 9; 4; 2; 8; 3; 6; 6; 0])] = [1; 5; 0; 6; 2; 9; 4; 8; 3]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(2, [4])] = [2; 4]) );
assert ((Topol.topol [(6, [1]); (8, [0; 5; 9; 2])] = [6; 8; 1; 2; 9; 5; 0]) );
assert ((Topol.topol [(2, [1]); (4, [9; 8; 0])] = [2; 4; 1; 0; 8; 9]) );
assert ((Topol.topol [(6, [5; 9]); (2, [8; 4; 6; 5])] = [2; 6; 4; 8; 9; 5]) );
assert ((Topol.topol [(1, []); (3, [1; 6; 7; 8; 1])] = [3; 8; 7; 6; 1]) );
assert ((Topol.topol [(3, [6; 4; 6]); (5, [3])] = [5; 3; 4; 6]) );
assert ((Topol.topol [(8, [1])] = [8; 1]) );
assert ((Topol.topol [(1, [7; 5; 2])] = [1; 2; 5; 7]) );
assert ((Topol.topol [(4, []); (2, [7; 0; 7; 3])] = [4; 2; 3; 0; 7]) );
assert ((Topol.topol [(8, [6; 1; 6; 2])] = [8; 2; 1; 6]) );
assert ((Topol.topol [(6, []); (8, [6; 9; 9])] = [8; 9; 6]) );
assert ((Topol.topol [(1, [3; 4]); (8, [2; 2]); (9, [7; 5])] = [1; 8; 9; 4; 3; 2; 5; 7]) );
assert ((Topol.topol [(6, [5; 8; 3; 9; 4; 0; 2]); (1, []); (6, [4; 4; 1; 7; 4; 7; 5; 1; 2]); (6, [])] = [6; 7; 1; 2; 0; 4; 9; 3; 8; 5]) );
assert ((Topol.topol [(6, [5; 1; 0; 7]); (9, [6]); (2, [3; 9; 1; 0; 0])] = [2; 9; 3; 6; 7; 0; 1; 5]) );
assert ((Topol.topol [(3, [7; 5; 9; 0; 0; 7]); (8, [2; 3; 5])] = [8; 3; 2; 0; 9; 5; 7]) );
assert ((Topol.topol [(6, [3])] = [6; 3]) );
assert ((Topol.topol [(7, [3; 1]); (7, [2; 8; 0])] = [7; 0; 8; 2; 1; 3]) );
assert ((Topol.topol [(0, [6; 1])] = [0; 1; 6]) );
assert ((Topol.topol [(4, [5; 3; 1; 7; 3]); (3, [6; 0; 1; 1])] = [4; 7; 3; 5; 1; 0; 6]) );
assert ((Topol.topol [(1, [0; 7; 8; 4; 7; 4; 2]); (4, [6; 0; 3; 7; 9; 9])] = [1; 2; 4; 8; 9; 7; 3; 0; 6]) );
assert ((Topol.topol [(0, [9; 8; 3])] = [0; 3; 8; 9]) );
assert ((Topol.topol [(7, [5; 0; 4; 9; 5; 5; 1])] = [7; 1; 9; 4; 0; 5]) );
assert ((Topol.topol [(2, [1; 5; 8; 5])] = [2; 8; 5; 1]) );
assert ((Topol.topol [(1, [8; 3; 0; 4; 6; 3; 8; 4; 7]); (0, [5; 6]); (1, [0; 8]); (6, [3; 9; 2; 3; 7]); (5, [9; 7; 3]); (1, [7; 6; 4; 9; 8; 3; 2; 9; 3])] = [1; 4; 0; 8; 6; 5; 2; 3; 7; 9]) );
assert ((Topol.topol [(0, [7; 8; 2; 8; 4; 6; 5; 9; 2])] = [0; 9; 5; 6; 4; 2; 8; 7]) );
assert ((Topol.topol [(5, [6; 9]); (5, []); (7, [4; 8; 8; 8; 8; 8; 9])] = [5; 7; 6; 9; 8; 4]) );
assert ((Topol.topol [(7, [2]); (1, [6])] = [7; 1; 2; 6]) );
assert ((Topol.topol [(2, [4])] = [2; 4]) );
assert ((Topol.topol [(4, [3; 0; 1; 8; 6; 0; 8]); (6, [1; 9; 8; 3; 1; 5; 5])] = [4; 6; 0; 5; 3; 8; 9; 1]) );
assert ((Topol.topol [(1, [5; 7; 9; 4; 8; 6; 8; 0; 0]); (0, [])] = [1; 0; 6; 8; 4; 9; 7; 5]) );
assert ((Topol.topol [(4, [6; 2; 3; 2; 2]); (8, [2; 1; 0])] = [4; 8; 3; 6; 0; 1; 2]) );
assert ((Topol.topol [(9, [4; 7; 0; 0; 6; 0])] = [9; 6; 0; 7; 4]) );
assert ((Topol.topol [(0, [5])] = [0; 5]) );
assert ((Topol.topol [(7, [8; 2; 2; 1; 9; 8; 5]); (8, [5; 2]); (4, [1; 9; 7; 7; 0; 9; 2; 5]); (2, [])] = [4; 0; 7; 9; 1; 8; 2; 5]) );
assert ((Topol.topol [(0, [2; 1; 4; 6; 8; 4]); (3, [9; 4; 7; 4; 1; 6; 4; 9; 9])] = [0; 3; 8; 2; 6; 1; 7; 4; 9]) );
assert ((Topol.topol [(5, [9; 1; 3; 4; 9; 8; 6; 3])] = [5; 6; 8; 4; 3; 1; 9]) );
assert ((Topol.topol [(8, [7; 1; 2]); (6, [4; 1; 8]); (9, [])] = [6; 9; 8; 4; 2; 1; 7]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(0, [2; 4; 2]); (1, [3])] = [0; 1; 4; 2; 3]) );
assert ((Topol.topol [(6, [3; 0; 3; 8; 8; 7])] = [6; 7; 8; 0; 3]) );
assert ((Topol.topol [(0, [7]); (5, [3; 1; 6; 4; 1; 4; 8; 8]); (2, [8; 4; 0; 4])] = [5; 2; 6; 1; 3; 0; 4; 8; 7]) );
assert ((Topol.topol [(6, []); (3, [1; 7; 6; 0; 7; 6; 4; 9])] = [3; 9; 4; 0; 6; 7; 1]) );
assert ((Topol.topol [(5, [4; 2; 4; 8])] = [5; 8; 2; 4]) );
assert ((Topol.topol [(8, [9; 6; 0; 9]); (9, [0; 7])] = [8; 6; 9; 7; 0]) );
assert ((Topol.topol [(6, [7; 1]); (8, [0]); (4, [6; 2; 1; 0; 8])] = [4; 8; 2; 6; 0; 1; 7]) );
assert ((Topol.topol [(7, [3; 2; 0; 1; 8; 5; 5]); (5, [9; 0; 9])] = [7; 5; 8; 1; 2; 3; 0; 9]) );
assert ((Topol.topol [(2, [4]); (1, [7; 2])] = [1; 2; 7; 4]) );
assert ((Topol.topol [(7, [1; 8; 1; 1; 1; 0; 6])] = [7; 6; 0; 8; 1]) );
assert ((Topol.topol [(4, [7; 0]); (8, [5; 3])] = [4; 8; 0; 7; 3; 5]) );
assert ((Topol.topol [(1, [6; 8; 3; 0; 7; 0; 2; 0; 8])] = [1; 2; 7; 0; 3; 8; 6]) );
assert ((Topol.topol [(8, [9; 1; 2]); (5, [8; 2; 0; 4; 3; 9])] = [5; 3; 4; 0; 8; 2; 1; 9]) );
assert ((Topol.topol [(8, [1; 9; 4])] = [8; 4; 9; 1]) );
assert ((Topol.topol [(5, [0; 9; 6]); (6, [2])] = [5; 6; 9; 0; 2]) );
assert ((Topol.topol [(7, [9])] = [7; 9]) );
assert ((Topol.topol [(8, [9; 7; 0; 6; 9; 4; 7; 3; 5])] = [8; 5; 3; 4; 6; 0; 7; 9]) );
assert ((Topol.topol [(2, [6; 5; 4; 8; 3; 7; 8; 3])] = [2; 7; 3; 8; 4; 5; 6]) );
assert ((Topol.topol [(6, [2; 2]); (7, [])] = [6; 7; 2]) );
assert ((Topol.topol [(9, [4; 7; 3; 1])] = [9; 1; 3; 7; 4]) );
assert ((Topol.topol [(7, [6; 9; 5; 6; 2])] = [7; 2; 5; 9; 6]) );
assert ((Topol.topol [(5, [7; 1; 6; 7]); (9, [5; 3; 6; 6; 6; 6; 2; 7]); (3, [])] = [9; 2; 3; 5; 6; 1; 7]) );
assert ((Topol.topol [(3, [2; 8; 4; 1; 5; 6; 4])] = [3; 6; 5; 1; 4; 8; 2]) );
assert ((Topol.topol [(5, [7; 8; 0; 2; 8]); (7, [4; 1; 2; 6; 4])] = [5; 0; 8; 7; 6; 2; 1; 4]) );
assert ((Topol.topol [(1, [2; 3; 5; 0; 7]); (3, [2; 9; 7; 5])] = [1; 0; 3; 5; 7; 9; 2]) );
assert ((Topol.topol [(9, [4; 7; 8; 3; 1; 4]); (8, [0; 0; 6; 4; 0; 6; 4])] = [9; 1; 3; 8; 7; 4; 6; 0]) );
assert ((Topol.topol [(1, []); (3, [9; 2; 8; 7])] = [1; 3; 7; 8; 2; 9]) );
assert ((Topol.topol [(4, [1; 0; 8; 2; 0]); (3, [2; 4; 8; 0])] = [3; 4; 2; 8; 0; 1]) );
assert ((Topol.topol [(0, [7; 2; 9; 4]); (0, [3; 7; 4; 3])] = [0; 3; 4; 9; 2; 7]) );
assert ((Topol.topol [(4, [9])] = [4; 9]) );
assert ((Topol.topol [(4, [8; 2; 2; 2]); (3, [4; 9])] = [3; 9; 4; 2; 8]) );
assert ((Topol.topol [(0, []); (8, [1; 0]); (8, [5; 4]); (0, [])] = [8; 4; 5; 0; 1]) );
assert ((Topol.topol [(6, [])] = [6]) );
assert ((Topol.topol [(4, [3; 5; 8; 0]); (3, [])] = [4; 0; 8; 5; 3]) );
assert ((Topol.topol [(8, [7; 3; 3; 9; 0])] = [8; 0; 9; 3; 7]) );
assert ((Topol.topol [(3, [7; 9; 8; 1]); (7, [1; 6]); (9, [7]); (4, [7; 5; 7; 7; 6; 5; 6; 6; 2])] = [3; 4; 8; 9; 2; 5; 7; 6; 1]) );
assert ((Topol.topol [(9, [1; 5; 5; 3; 1; 0; 4]); (6, [7; 9; 1; 9; 1; 9]); (4, [1; 1; 0; 7; 8])] = [6; 9; 4; 3; 5; 8; 7; 0; 1]) );
assert ((Topol.topol [(0, [1; 1; 8]); (0, [2; 4]); (7, []); (2, [9; 8])] = [0; 7; 4; 2; 1; 8; 9]) );
assert ((Topol.topol [(2, [7; 5; 6])] = [2; 6; 5; 7]) );
assert ((Topol.topol [(3, [1; 9; 0]); (8, [2])] = [3; 8; 0; 9; 1; 2]) );
assert ((Topol.topol [(0, [6; 5; 5; 3; 1; 3; 6]); (6, [4; 9])] = [0; 1; 3; 5; 6; 9; 4]) );
assert ((Topol.topol [(5, [2; 7; 9]); (1, [5; 5; 7; 2; 6])] = [1; 6; 5; 9; 7; 2]) );
assert ((Topol.topol [(6, [8; 2; 5; 9; 0; 8])] = [6; 0; 9; 5; 2; 8]) );
assert ((Topol.topol [(9, [8; 2])] = [9; 2; 8]) );
assert ((Topol.topol [(2, [8; 3; 6])] = [2; 6; 3; 8]) );
assert ((Topol.topol [(8, [7; 3])] = [8; 3; 7]) );
assert ((Topol.topol [(6, [0; 8]); (8, []); (1, [4; 9; 5]); (5, [])] = [6; 1; 8; 0; 5; 9; 4]) );
assert ((Topol.topol [(4, []); (6, [3])] = [4; 6; 3]) );
assert ((Topol.topol [(6, [4])] = [6; 4]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(1, [3]); (3, [7; 7; 5; 9])] = [1; 3; 9; 5; 7]) );
assert ((Topol.topol [(8, [5; 7; 9; 2; 4; 4; 1])] = [8; 1; 4; 2; 9; 7; 5]) );
assert ((Topol.topol [(8, [4; 4])] = [8; 4]) );
assert ((Topol.topol [(0, [])] = [0]) );
assert ((Topol.topol [(6, [8; 9])] = [6; 9; 8]) );
assert ((Topol.topol [(7, [2; 4; 2; 0; 0])] = [7; 0; 4; 2]) );
assert ((Topol.topol [(4, [8; 1; 8; 3; 1; 8; 7]); (2, [8; 8; 0; 4; 8; 5; 9; 7])] = [2; 9; 5; 4; 0; 7; 3; 1; 8]) );
assert ((Topol.topol [(8, [5; 9; 7])] = [8; 7; 9; 5]) );
assert ((Topol.topol [(4, [6]); (0, [4; 4; 7; 3; 2; 6; 1]); (2, [])] = [0; 1; 2; 3; 7; 4; 6]) );
assert ((Topol.topol [(2, [3; 6; 4; 4; 3])] = [2; 4; 6; 3]) );
assert ((Topol.topol [(7, [1; 9; 4; 1]); (7, [1; 2]); (4, [0; 2]); (8, [9; 5; 6; 4; 1; 9; 7; 6]); (9, [6; 5; 2; 1; 5]); (3, [0; 5; 8; 8])] = [3; 8; 7; 4; 9; 0; 1; 2; 5; 6]) );
assert ((Topol.topol [(7, [5; 2; 9]); (1, [4]); (3, [6; 5; 6; 4; 0; 4])] = [7; 1; 3; 9; 2; 0; 4; 5; 6]) );
assert ((Topol.topol [(5, [4; 3; 1; 4]); (2, [5; 7; 1; 4])] = [2; 7; 5; 1; 3; 4]) );
assert ((Topol.topol [(5, [7; 9; 0; 3; 6; 3; 3])] = [5; 6; 3; 0; 9; 7]) );
assert ((Topol.topol [(6, [0; 9; 5; 1; 2; 4])] = [6; 4; 2; 1; 5; 9; 0]) );
assert ((Topol.topol [(3, [8; 4; 1; 1; 0; 2])] = [3; 2; 0; 1; 4; 8]) );
assert ((Topol.topol [(7, []); (5, [8; 3; 8; 8; 6; 8; 1])] = [7; 5; 1; 6; 3; 8]) );
assert ((Topol.topol [(1, [2; 9; 4; 8]); (0, [6; 8; 7; 6; 8; 7]); (0, [])] = [1; 0; 4; 9; 2; 7; 8; 6]) );
assert ((Topol.topol [(4, [6; 1; 8; 9])] = [4; 9; 8; 1; 6]) );
assert ((Topol.topol [(8, [4; 4; 5; 2]); (1, [8; 2; 8; 5; 3; 9; 5; 9; 3])] = [1; 9; 3; 8; 2; 5; 4]) );
assert ((Topol.topol [(2, [4; 3; 6; 6; 7])] = [2; 7; 6; 3; 4]) );
assert ((Topol.topol [(3, [8; 7; 2; 9]); (5, []); (9, [])] = [3; 5; 9; 2; 7; 8]) );
assert ((Topol.topol [(4, [8; 2]); (0, [5; 3; 2]); (8, [])] = [4; 0; 8; 2; 3; 5]) );
assert ((Topol.topol [(8, [4; 1; 4; 6]); (3, [9; 5; 5; 4])] = [8; 3; 6; 1; 4; 5; 9]) );
assert ((Topol.topol [(8, [6]); (7, []); (2, [8])] = [7; 2; 8; 6]) );
assert ((Topol.topol [(2, [])] = [2]) );
assert ((Topol.topol [(0, [8; 5; 8; 8; 6; 5; 5; 3; 9]); (8, [4; 3; 5; 7; 4; 3; 6; 7]); (2, [9])] = [0; 2; 8; 9; 6; 7; 5; 3; 4]) );
assert ((Topol.topol [(0, []); (8, [3; 4]); (5, [9; 3; 7]); (2, [5; 9; 4; 0; 5; 5])] = [8; 2; 0; 4; 5; 7; 3; 9]) );
assert ((Topol.topol [(4, [2; 7; 7; 3; 2]); (6, [5; 4; 7; 9; 5]); (9, [5; 7; 5; 3; 3; 8; 4]); (0, [5; 9; 5])] = [6; 0; 9; 4; 8; 5; 3; 7; 2]) );
assert ((Topol.topol [(4, [8; 1; 2; 8; 8; 3; 3]); (9, [4; 0; 6])] = [9; 6; 0; 4; 3; 2; 1; 8]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(7, [8; 0; 9; 1; 2; 9; 4; 1; 4]); (9, [2; 1])] = [7; 4; 9; 0; 8; 1; 2]) );
assert ((Topol.topol [(4, [1; 3; 2])] = [4; 2; 3; 1]) );
assert ((Topol.topol [(4, [5])] = [4; 5]) );
assert ((Topol.topol [(7, [0; 5; 8; 6]); (2, [8; 1; 3; 8; 1; 0; 7; 0; 5]); (6, []); (3, [1; 8; 7])] = [2; 3; 7; 1; 6; 8; 5; 0]) );
assert ((Topol.topol [(2, []); (0, [5])] = [2; 0; 5]) );
assert ((Topol.topol [(1, [0; 5]); (1, [0; 8; 2; 5; 9; 6])] = [1; 6; 9; 2; 8; 5; 0]) );
assert ((Topol.topol [(6, [0; 1; 1; 7; 0; 8; 8; 7]); (7, [3; 9; 3; 4; 8]); (4, [9; 1; 2; 8])] = [6; 7; 0; 4; 3; 8; 2; 1; 9]) );
assert ((Topol.topol [(1, [0; 7; 3; 0]); (3, [0; 6; 5])] = [1; 3; 7; 5; 6; 0]) );
assert ((Topol.topol [(2, [5]); (3, [4; 5; 1; 1; 8])] = [2; 3; 8; 1; 5; 4]) );
assert ((Topol.topol [(4, []); (7, [2; 8; 8; 3; 2; 5])] = [4; 7; 5; 3; 8; 2]) );
assert ((Topol.topol [(4, [9; 7; 6; 7; 8; 9]); (5, [9; 4; 8]); (5, [])] = [5; 4; 8; 6; 7; 9]) );
assert ((Topol.topol [(5, [6; 0; 4; 8; 0]); (1, [7; 5; 4; 8])] = [1; 5; 7; 8; 4; 0; 6]) );
assert ((Topol.topol [(1, [4; 5; 7; 7; 8; 3]); (3, [4])] = [1; 3; 8; 7; 5; 4]) );
assert ((Topol.topol [(3, [1; 9; 4; 6])] = [3; 6; 4; 9; 1]) );
assert ((Topol.topol [(5, [4]); (1, [5; 4; 8])] = [1; 8; 5; 4]) );
assert ((Topol.topol [(0, [4; 7; 9; 8; 5; 9; 8]); (1, [5])] = [0; 1; 8; 9; 7; 4; 5]) );
assert ((Topol.topol [(9, [8; 7; 4; 0]); (1, []); (8, [4]); (4, [7; 0; 3; 3; 2; 5; 3; 7]); (6, [9; 1; 3; 9]); (6, [5; 9; 4; 4; 0])] = [6; 1; 9; 8; 4; 5; 2; 3; 0; 7]) );
assert ((Topol.topol [(7, [1; 5; 6; 4; 6; 9; 3; 5])] = [7; 3; 9; 4; 6; 5; 1]) );
assert ((Topol.topol [(1, [4]); (7, [6]); (2, [4; 3; 0; 8; 6; 4; 5; 0])] = [1; 7; 2; 5; 6; 8; 0; 3; 4]) );
assert ((Topol.topol [(6, []); (0, [5; 7; 5]); (6, [8; 3; 3; 4; 9; 5; 9])] = [6; 0; 9; 4; 3; 8; 7; 5]) );
assert ((Topol.topol [(8, [2; 3; 9; 5; 1; 2; 2; 9])] = [8; 1; 5; 9; 3; 2]) );
assert ((Topol.topol [(9, [7])] = [9; 7]) );
assert ((Topol.topol [(6, []); (5, [3; 6; 1; 2])] = [5; 2; 1; 6; 3]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(7, [5]); (2, [5; 4; 0; 0; 4; 5; 0; 9; 8]); (8, [4; 3; 9; 7; 0])] = [2; 8; 0; 7; 9; 3; 4; 5]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(9, [5; 0; 3; 2; 7; 7]); (5, [3; 4; 3; 8; 3]); (6, [3; 9; 3; 1; 2])] = [6; 1; 9; 7; 2; 0; 5; 8; 4; 3]) );
assert ((Topol.topol [(6, [4]); (1, []); (1, [7; 4; 8; 9]); (8, [])] = [6; 1; 9; 8; 4; 7]) );
assert ((Topol.topol [(5, [4; 7; 0; 3])] = [5; 3; 0; 7; 4]) );
assert ((Topol.topol [(8, [2]); (5, [6; 1; 6; 3; 0]); (5, [0; 2; 4; 9; 9; 9; 4])] = [8; 5; 9; 4; 2; 0; 3; 1; 6]) );
assert ((Topol.topol [(6, [2; 5; 7; 7; 8; 7; 7; 9; 2])] = [6; 9; 8; 7; 5; 2]) );
assert ((Topol.topol [(3, [2; 0; 1])] = [3; 1; 0; 2]) );
assert ((Topol.topol [(0, [2; 9])] = [0; 9; 2]) );
assert ((Topol.topol [(3, [])] = [3]) );
assert ((Topol.topol [(1, [8; 3; 6])] = [1; 6; 3; 8]) );
assert ((Topol.topol [(0, [6; 2; 3; 4; 5]); (7, [9]); (6, [5; 4])] = [0; 7; 3; 2; 6; 9; 4; 5]) );
assert ((Topol.topol [(6, [4; 3; 4])] = [6; 3; 4]) );
assert ((Topol.topol [(4, [0]); (6, [2; 4]); (6, [5; 5; 1; 1; 4; 0])] = [6; 1; 5; 4; 2; 0]) );
assert ((Topol.topol [(1, [8; 9])] = [1; 9; 8]) );
assert ((Topol.topol [(8, [7; 0; 3; 1]); (5, [])] = [8; 5; 1; 3; 0; 7]) );
assert ((Topol.topol [(6, [5])] = [6; 5]) );
assert ((Topol.topol [(3, [6; 5]); (0, []); (0, [])] = [3; 0; 5; 6]) );
assert ((Topol.topol [(6, []); (0, [7; 1; 3; 8; 6]); (2, [4; 1; 0])] = [2; 0; 4; 6; 8; 3; 1; 7]) );
assert ((Topol.topol [(1, [])] = [1]) );
assert ((Topol.topol [(3, [0; 4; 5; 6; 1; 0; 8; 5; 0]); (0, [6; 7; 6]); (8, [])] = [3; 8; 1; 5; 4; 0; 7; 6]) );
assert ((Topol.topol [(4, []); (7, [1; 6; 3; 6]); (5, [4; 0; 6]); (3, [])] = [7; 5; 3; 1; 6; 0; 4]) );
assert ((Topol.topol [(2, [1; 1; 1]); (6, [9; 2; 5])] = [6; 5; 2; 9; 1]) );
assert ((Topol.topol [(4, [1; 6; 9; 0; 9; 7])] = [4; 7; 0; 9; 6; 1]) );
assert ((Topol.topol [(7, [9; 1; 6; 6; 2; 3]); (8, [9; 4; 3; 9]); (0, [9; 2; 8])] = [7; 0; 6; 1; 8; 2; 3; 4; 9]) );
assert ((Topol.topol [(4, [3; 8; 3; 7]); (1, [2; 5; 4; 5]); (9, [3; 2; 1; 8; 7]); (6, [2; 4; 2; 9; 8; 0; 5; 0; 5])] = [6; 0; 9; 1; 4; 5; 2; 7; 8; 3]) );
assert ((Topol.topol [(9, [4; 2; 7; 5]); (6, [1; 8; 9; 8; 4; 3; 1])] = [6; 3; 9; 8; 1; 5; 7; 2; 4]) );
assert ((Topol.topol [(0, []); (1, []); (2, [6; 8; 1; 7; 1; 7])] = [0; 2; 7; 1; 8; 6]) );
assert ((Topol.topol [(5, [2; 7])] = [5; 7; 2]) );
assert ((Topol.topol [(8, [9; 2; 3; 9; 3; 9; 4]); (5, [8; 2; 8]); (7, [5; 6; 2])] = [7; 6; 5; 8; 4; 3; 2; 9]) );
assert ((Topol.topol [(3, [4; 8; 4; 6; 2])] = [3; 2; 6; 8; 4]) );
assert ((Topol.topol [(3, [8; 8])] = [3; 8]) );
assert ((Topol.topol [(2, [4; 4; 3])] = [2; 3; 4]) );
assert ((Topol.topol [(7, [4; 8; 0; 6]); (6, [5; 2; 1; 2; 4]); (7, [])] = [7; 6; 0; 8; 4; 1; 2; 5]) );
assert ((Topol.topol [(1, []); (4, [3; 8; 0; 7; 7; 8; 0]); (5, [4; 2; 8; 6; 9]); (5, [1; 0; 0; 0; 7; 2])] = [5; 1; 9; 6; 2; 4; 7; 0; 8; 3]) );
assert ((Topol.topol [(5, [1; 1; 8; 0; 3; 7])] = [5; 7; 3; 0; 8; 1]) );
assert ((Topol.topol [(4, []); (7, [1; 0; 1; 1; 6; 2])] = [4; 7; 2; 6; 0; 1]) );
assert ((Topol.topol [(5, [1; 9; 2; 7; 9; 9; 6])] = [5; 6; 7; 2; 9; 1]) );
assert ((Topol.topol [(0, []); (7, [6; 1; 4])] = [0; 7; 4; 1; 6]) );
assert ((Topol.topol [(2, [7])] = [2; 7]) );
assert ((Topol.topol [(6, [9]); (0, [6; 1])] = [0; 1; 6; 9]) );
assert ((Topol.topol [(6, [7; 8; 7; 5]); (4, [5])] = [6; 4; 8; 7; 5]) );
assert ((Topol.topol [(3, [2]); (4, [1; 1; 0; 2; 3; 6; 7])] = [4; 7; 6; 3; 0; 1; 2]) );
assert ((Topol.topol [(3, [8; 0; 9; 2; 5]); (9, [7])] = [3; 5; 2; 9; 0; 8; 7]) );
assert ((Topol.topol [(9, [7]); (3, [0])] = [9; 3; 7; 0]) );
assert ((Topol.topol [(5, [2]); (1, [2; 3; 5; 8; 9])] = [1; 9; 8; 5; 3; 2]) );
assert ((Topol.topol [(0, [9; 3])] = [0; 3; 9]) );
assert ((Topol.topol [(8, [7; 9; 0; 0; 0; 6; 1; 2; 5])] = [8; 5; 2; 1; 6; 0; 9; 7]) );
assert ((Topol.topol [(8, [5; 3]); (0, [6; 5; 8])] = [0; 8; 6; 3; 5]) );
assert ((Topol.topol [(2, [1; 6; 3])] = [2; 3; 6; 1]) );
assert ((Topol.topol [(4, [3; 0; 2]); (6, [2; 2; 1; 8; 3; 7; 9; 9]); (3, [7]); (9, [2; 5; 7; 1; 5; 2])] = [4; 6; 0; 9; 3; 8; 1; 5; 2; 7]) );
assert ((Topol.topol [(2, [0; 7; 7; 4]); (6, [5; 3; 1; 3; 4; 7]); (6, [4; 8; 2; 0; 4]); (5, [7; 7; 4; 7; 8; 3; 4])] = [6; 2; 1; 5; 0; 3; 8; 4; 7]) );
assert ((Topol.topol [(5, [6; 8; 6; 8; 1; 8; 3]); (1, [8; 2; 6])] = [5; 3; 1; 6; 2; 8]) );
assert ((Topol.topol [(5, [4]); (0, [9; 6; 1; 9; 6; 3; 8; 5; 6]); (9, [1; 1; 7; 3]); (5, [9]); (2, [0; 9; 5; 1; 9; 6; 4; 4; 7]); (7, [1; 8])] = [2; 0; 5; 6; 9; 4; 3; 7; 8; 1]) );
assert ((Topol.topol [(0, []); (3, [9; 2; 7; 5])] = [0; 3; 5; 7; 2; 9]) );
assert ((Topol.topol [(2, [6; 1; 0; 8; 6; 8]); (9, [7])] = [2; 9; 8; 0; 1; 6; 7]) );
assert ((Topol.topol [(8, [5; 4; 2; 0])] = [8; 0; 2; 4; 5]) );
assert ((Topol.topol [(3, [0])] = [3; 0]) );
assert ((Topol.topol [(3, [7])] = [3; 7]) );
assert ((Topol.topol [(3, [4; 0]); (7, [1; 3])] = [7; 3; 1; 0; 4]) );
assert ((Topol.topol [(7, [2]); (4, [7; 2; 7; 2; 7; 6; 0]); (0, [1; 1; 7])] = [4; 0; 6; 7; 1; 2]) );
assert ((Topol.topol [(8, []); (2, [0; 6; 0; 4])] = [8; 2; 4; 6; 0]) );
assert ((Topol.topol [(8, [9; 3; 9; 0; 9])] = [8; 0; 3; 9]) );
assert ((Topol.topol [(6, [8; 7; 0]); (6, []); (5, [6])] = [5; 6; 0; 7; 8]) );
assert ((Topol.topol [(9, [])] = [9]) );
assert ((Topol.topol [(7, [2; 4; 2; 2; 0; 5])] = [7; 5; 0; 4; 2]) );
assert ((Topol.topol [(0, [8; 5; 9])] = [0; 9; 5; 8]) );
assert ((Topol.topol [(2, [0; 6; 3; 1; 3; 9]); (1, [])] = [2; 9; 1; 3; 6; 0]) );
assert ((Topol.topol [(1, [4])] = [1; 4]) );
assert ((Topol.topol [(0, []); (4, [8; 3]); (7, [9; 6; 6; 2; 1; 1]); (4, [0; 3; 9])] = [4; 7; 0; 3; 8; 1; 2; 6; 9]) );
assert ((Topol.topol [(0, [6; 2; 5; 5; 3; 4; 6; 2; 9]); (7, [6; 0; 4; 4]); (7, []); (9, [2]); (2, [1; 3; 6]); (9, [8; 6])] = [7; 0; 9; 4; 5; 8; 2; 6; 3; 1]) );
assert ((Topol.topol [(3, [4; 5]); (8, [7; 5]); (1, []); (3, [5; 8; 7; 6; 1; 1; 0; 0])] = [3; 0; 1; 6; 8; 4; 5; 7]) );
